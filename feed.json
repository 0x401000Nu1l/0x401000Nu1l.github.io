{
    "version": "https://jsonfeed.org/version/1",
    "title": "你越安静,你能听到的就越多",
    "subtitle": "",
    "icon": "https://0x401000nu1l.github.io/images/favicon.ico",
    "description": "(σﾟ∀ﾟ)σ..:*☆哎哟不错哦",
    "home_page_url": "https://0x401000Nu1l.github.io",
    "items": [
        {
            "id": "https://0x401000nu1l.github.io/2022/06/13/%E8%BD%AF%E6%9E%84%E5%AD%A6%E4%B9%A0%E4%BA%94/",
            "url": "https://0x401000nu1l.github.io/2022/06/13/%E8%BD%AF%E6%9E%84%E5%AD%A6%E4%B9%A0%E4%BA%94/",
            "title": "软构学习五",
            "date_published": "2022-06-13T10:16:05.000Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "https://0x401000nu1l.github.io/2022/06/13/%E8%BD%AF%E6%9E%84%E5%AD%A6%E4%B9%A0%E5%9B%9B/",
            "url": "https://0x401000nu1l.github.io/2022/06/13/%E8%BD%AF%E6%9E%84%E5%AD%A6%E4%B9%A0%E5%9B%9B/",
            "title": "软构学习四",
            "date_published": "2022-06-13T10:15:57.000Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "https://0x401000nu1l.github.io/2022/06/04/2022CISCN_%E9%80%86%E5%90%91/",
            "url": "https://0x401000nu1l.github.io/2022/06/04/2022CISCN_%E9%80%86%E5%90%91/",
            "title": "2022CISCN_逆向",
            "date_published": "2022-06-04T15:00:58.000Z",
            "content_html": "<h1 id=\"2022ciscn\"><a class=\"anchor\" href=\"#2022ciscn\">#</a> 2022CISCN</h1>\n<p>引用某位师傅的吐槽</p>\n<blockquote>\n<p>本以为能在逻辑跳转和汇编指令中大杀四方<br>\n结果看了六个小时的超长纯文本阅读题<br>\n这年头 RE 连个程序都没有的吗…<br>\n 先是 Swift AST，后是 Ruby 字节码<br>\n我崩不住了。</p>\n</blockquote>\n<p>当然还是自己太菜了，赛后好好复盘一下，明年再战</p>\n<h4 id=\"babytree\"><a class=\"anchor\" href=\"#babytree\">#</a> babytree</h4>\n<blockquote>\n<p>考点：<br>\nswift 编译生成中间文件的阅读理解</p>\n</blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8wMzM1OTI0MjY3ODg=\">LLVM 编译流程</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9lOTE3YmYwZThhN2Q=\"> Swift 编译流程</span></p>\n<p><img data-src=\"3444487-0c12b96c168bff6a.png\" alt=\"img\"></p>\n<p>我们拿到的附件就是经过  <code>parse解析</code> ， <code>ast编译</code>  生成的抽象语法树</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>swiftc -dump-ast LGPerson.swift <span class=\"token operator\">>></span> ast.swift</pre></td></tr></table></figure><p>读一门未知语言的 ast 是一件很折磨的事情，但是 ast 文件本来就是严谨且科学的，所以一定存在某种特定的阅读规则，读 babytree 的时候应该注意每一部分的相同部分以及不同部分例如如下代码</p>\n<figure class=\"highlight swift\"><figcaption data-lang=\"swift\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span>for_each_stmt range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span> <span class=\"token operator\">-</span> line<span class=\"token punctuation\">:</span><span class=\"token number\">12</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token punctuation\">(</span>pattern_named type<span class=\"token operator\">=</span>'<span class=\"token class-name\">Int</span>' 'i'<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token punctuation\">(</span>pattern_named type<span class=\"token operator\">=</span>'<span class=\"token class-name\">Int</span>' 'i'<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">(</span>binary_expr type<span class=\"token operator\">=</span>'<span class=\"token class-name\">ClosedRange</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">Int</span><span class=\"token operator\">></span>' location<span class=\"token operator\">=</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">15</span> range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">14</span> <span class=\"token operator\">-</span> line<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token function\">nothrow</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>          <span class=\"token punctuation\">(</span>dot_syntax_call_expr implicit type<span class=\"token operator\">=</span>'<span class=\"token punctuation\">(</span><span class=\"token class-name\">Int</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">ClosedRange</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">Int</span><span class=\"token operator\">></span>' location<span class=\"token operator\">=</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">15</span> range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">15</span> <span class=\"token operator\">-</span> line<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token function\">nothrow</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token punctuation\">(</span>declref_expr type<span class=\"token operator\">=</span>'<span class=\"token punctuation\">(</span><span class=\"token class-name\">Int</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">Type</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Int</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">ClosedRange</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">Int</span><span class=\"token operator\">></span>' location<span class=\"token operator\">=</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">15</span> range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">15</span> <span class=\"token operator\">-</span> line<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> decl<span class=\"token operator\">=</span><span class=\"token class-name\">Swift</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Comparable</span> <span class=\"token keyword\">extension</span><span class=\"token operator\">....</span> <span class=\"token punctuation\">[</span><span class=\"token function\">with</span> <span class=\"token punctuation\">(</span>substitution_map generic_signature<span class=\"token operator\">=&lt;</span><span class=\"token keyword\">Self</span> <span class=\"token keyword\">where</span> <span class=\"token keyword\">Self</span> <span class=\"token punctuation\">:</span> <span class=\"token class-name\">Comparable</span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>substitution <span class=\"token keyword\">Self</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> function_ref<span class=\"token operator\">=</span>double<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token punctuation\">(</span>argument_list <span class=\"token function\">implicit</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>              <span class=\"token punctuation\">(</span><span class=\"token function\">argument</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token punctuation\">(</span>type_expr implicit type<span class=\"token operator\">=</span>'<span class=\"token class-name\">Int</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">Type</span>' location<span class=\"token operator\">=</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">15</span> range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">15</span> <span class=\"token operator\">-</span> line<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> typerepr<span class=\"token operator\">=</span>'<span class=\"token class-name\">Int</span>'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>          <span class=\"token punctuation\">(</span>argument_list <span class=\"token function\">implicit</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">(</span><span class=\"token function\">argument</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>              <span class=\"token punctuation\">(</span>integer_literal_expr type<span class=\"token operator\">=</span>'<span class=\"token class-name\">Int</span>' location<span class=\"token operator\">=</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">14</span> range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">14</span> <span class=\"token operator\">-</span> line<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> value<span class=\"token operator\">=</span><span class=\"token number\">0</span> builtin_initializer<span class=\"token operator\">=</span><span class=\"token class-name\">Swift</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Int</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span>_builtinIntegerLiteral<span class=\"token punctuation\">:</span><span class=\"token punctuation\">)</span> initializer<span class=\"token operator\">=**</span><span class=\"token constant\">NULL</span><span class=\"token operator\">**</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">(</span><span class=\"token function\">argument</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>              <span class=\"token punctuation\">(</span>binary_expr type<span class=\"token operator\">=</span>'<span class=\"token class-name\">Int</span>' location<span class=\"token operator\">=</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">25</span> range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">18</span> <span class=\"token operator\">-</span> line<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token function\">nothrow</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token punctuation\">(</span>dot_syntax_call_expr implicit type<span class=\"token operator\">=</span>'<span class=\"token punctuation\">(</span><span class=\"token class-name\">Int</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span>' location<span class=\"token operator\">=</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">25</span> range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">25</span> <span class=\"token operator\">-</span> line<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> <span class=\"token function\">nothrow</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                  <span class=\"token punctuation\">(</span>declref_expr type<span class=\"token operator\">=</span>'<span class=\"token punctuation\">(</span><span class=\"token class-name\">Int</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">Type</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Int</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span>' location<span class=\"token operator\">=</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">25</span> range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">25</span> <span class=\"token operator\">-</span> line<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> decl<span class=\"token operator\">=</span><span class=\"token class-name\">Swift</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Int</span> <span class=\"token keyword\">extension</span><span class=\"token operator\">.-</span> function_ref<span class=\"token operator\">=</span>double<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                  <span class=\"token punctuation\">(</span>argument_list <span class=\"token function\">implicit</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                    <span class=\"token punctuation\">(</span><span class=\"token function\">argument</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                      <span class=\"token punctuation\">(</span>type_expr implicit type<span class=\"token operator\">=</span>'<span class=\"token class-name\">Int</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">Type</span>' location<span class=\"token operator\">=</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">25</span> range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">25</span> <span class=\"token operator\">-</span> line<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> typerepr<span class=\"token operator\">=</span>'<span class=\"token class-name\">Int</span>'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token punctuation\">(</span>argument_list <span class=\"token function\">implicit</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                  <span class=\"token punctuation\">(</span><span class=\"token function\">argument</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                    <span class=\"token punctuation\">(</span>member_ref_expr type<span class=\"token operator\">=</span>'<span class=\"token class-name\">Int</span>' location<span class=\"token operator\">=</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span> range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">18</span> <span class=\"token operator\">-</span> line<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> decl<span class=\"token operator\">=</span><span class=\"token class-name\">Swift</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Array</span> <span class=\"token keyword\">extension</span><span class=\"token punctuation\">.</span>count <span class=\"token punctuation\">[</span><span class=\"token function\">with</span> <span class=\"token punctuation\">(</span>substitution_map generic_signature<span class=\"token operator\">=&lt;</span><span class=\"token class-name\">Element</span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>substitution <span class=\"token class-name\">Element</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">UInt8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                      <span class=\"token punctuation\">(</span>load_expr implicit type<span class=\"token operator\">=</span>'<span class=\"token punctuation\">[</span><span class=\"token class-name\">UInt8</span><span class=\"token punctuation\">]</span>' location<span class=\"token operator\">=</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">18</span> range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">18</span> <span class=\"token operator\">-</span> line<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                        <span class=\"token punctuation\">(</span>declref_expr type<span class=\"token operator\">=</span>'<span class=\"token attribute atrule\">@lvalue</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">UInt8</span><span class=\"token punctuation\">]</span>' location<span class=\"token operator\">=</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">18</span> range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">18</span> <span class=\"token operator\">-</span> line<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> decl<span class=\"token operator\">=</span>re<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token omit keyword\">_</span><span class=\"token punctuation\">:</span><span class=\"token omit keyword\">_</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>b<span class=\"token attribute atrule\">@re</span><span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">9</span> function_ref<span class=\"token operator\">=</span>unapplied<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                  <span class=\"token punctuation\">(</span><span class=\"token function\">argument</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                    <span class=\"token punctuation\">(</span>integer_literal_expr type<span class=\"token operator\">=</span>'<span class=\"token class-name\">Int</span>' location<span class=\"token operator\">=</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">26</span> range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">26</span> <span class=\"token operator\">-</span> line<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> value<span class=\"token operator\">=</span><span class=\"token number\">4</span> builtin_initializer<span class=\"token operator\">=</span><span class=\"token class-name\">Swift</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Int</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span>_builtinIntegerLiteral<span class=\"token punctuation\">:</span><span class=\"token punctuation\">)</span> initializer<span class=\"token operator\">=**</span><span class=\"token constant\">NULL</span><span class=\"token operator\">**</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这一大段代码中有很多相似的部分，而且里面的 range 与我们常见的语言中的 range 不是同一个意思和作用，我们尝试除去相同的代码，会发现其中对应每次改变的部分</p>\n<figure class=\"highlight swift\"><figcaption data-lang=\"swift\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span>declref_expr type<span class=\"token operator\">=</span>'<span class=\"token punctuation\">(</span><span class=\"token class-name\">Int</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">Type</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Int</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">ClosedRange</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">Int</span><span class=\"token operator\">></span>' location<span class=\"token operator\">=</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">15</span> range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">15</span> <span class=\"token operator\">-</span> line<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> decl<span class=\"token operator\">=</span><span class=\"token class-name\">Swift</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Comparable</span> <span class=\"token keyword\">extension</span><span class=\"token operator\">....</span> <span class=\"token punctuation\">[</span><span class=\"token function\">with</span> <span class=\"token punctuation\">(</span>substitution_map generic_signature<span class=\"token operator\">=&lt;</span><span class=\"token keyword\">Self</span> <span class=\"token keyword\">where</span> <span class=\"token keyword\">Self</span> <span class=\"token punctuation\">:</span> <span class=\"token class-name\">Comparable</span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>substitution <span class=\"token keyword\">Self</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> function_ref<span class=\"token operator\">=</span>double<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">(</span>declref_expr type<span class=\"token operator\">=</span>'<span class=\"token punctuation\">(</span><span class=\"token class-name\">Int</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">Type</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Int</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span>' location<span class=\"token operator\">=</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">25</span> range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">25</span> <span class=\"token operator\">-</span> line<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> decl<span class=\"token operator\">=</span><span class=\"token class-name\">Swift</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Int</span> <span class=\"token keyword\">extension</span><span class=\"token operator\">.-</span> function_ref<span class=\"token operator\">=</span>double<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>member_ref_expr type<span class=\"token operator\">=</span>'<span class=\"token class-name\">Int</span>' location<span class=\"token operator\">=</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span> range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>re<span class=\"token punctuation\">.</span>swift<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">18</span> <span class=\"token operator\">-</span> line<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> decl<span class=\"token operator\">=</span><span class=\"token class-name\">Swift</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Array</span> <span class=\"token keyword\">extension</span><span class=\"token punctuation\">.</span>count <span class=\"token punctuation\">[</span><span class=\"token function\">with</span> <span class=\"token punctuation\">(</span>substitution_map generic_signature<span class=\"token operator\">=&lt;</span><span class=\"token class-name\">Element</span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>substitution <span class=\"token class-name\">Element</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">UInt8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>这三句代码相似度很高，但是变化的只有一部分，就是 关键字  <strong>extension</strong> 后面的运算符号，<br>\n而 extension 本来就有扩展名的意思 所以猜测 extension 前面的词为应用的方法库，后面则是对应库中具体的方法</p>\n<p>则以上的语句就能简化成 ，以此类推后面出现 extension 语句都能做相应替换</p>\n<figure class=\"highlight swift\"><figcaption data-lang=\"swift\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">...</span>   <span class=\"token other-directive property\">#x</span><span class=\"token operator\">...</span>y在<span class=\"token class-name\">Swift</span>中表示从x 到 y 的运算</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token operator\">-</span>    #整数减运算</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token operator\">+</span>    #整数加运算</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>count #应该是计算数组长度的函数</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">>></span>    #整数<span class=\"token operator\">>></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">&amp;</span>     #整数<span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">^</span>     #整数<span class=\"token operator\">^</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token class-name\">Array</span> <span class=\"token keyword\">extension</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">subscript</span><span class=\"token punctuation\">(</span><span class=\"token omit keyword\">_</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">)</span> #表示生成一个以参数名命名的数组例如  <span class=\"token keyword\">subscript</span> b <span class=\"token operator\">==</span> b<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>运算知道之后，需要寻找参与运算的参数，继续分析上面的长代码，发现 Swift 生成的 ast 文件特殊的一点是<br>\n<img data-src=\"image-20220604235351587.png\" alt=\"image-20220604235351587\"></p>\n<p>在方法 declare 的时候同时声明参数数据类型以及运算符号，那么理所当然，参数就需要在之后的语句中寻找</p>\n<p>看完了大佬的 wp 后，有一个很重要的定理</p>\n<blockquote>\n<p>Swift 语句调用文件中的其他方法，或者变量时会选择    <strong>xxx@aaa</strong>   的方式 其中</p>\n<p>xxx 为要引用的方法或变量</p>\n<p>aaa  为目标文件名</p>\n</blockquote>\n<p>所以就如同上图箭头指明的一样，一个运算调用两个值  （当然也要考虑嵌套的情况）</p>\n<p>理解了如上几点后，就可以对整篇文件做阅读理解了</p>\n<p>首先看第一段</p>\n<p><img data-src=\"image-20220605000109693.png\" alt=\"image-20220605000109693\"></p>\n<p>这里就是将传入的两个 String 类型参数 encoded 和 KeyValue 变成整数数组<br>\n也就是如下作用</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">check</span><span class=\"token punctuation\">(</span>encoded<span class=\"token punctuation\">,</span>keyValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    b<span class=\"token operator\">=</span> <span class=\"token builtin\">bytearray</span><span class=\"token punctuation\">(</span>encoded<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    k<span class=\"token operator\">=</span> <span class=\"token builtin\">bytearray</span><span class=\"token punctuation\">(</span>encoded<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"image-20220605000304476.png\" alt=\"image-20220605000304476\"></p>\n<p>接下来就是定义了四个变量，后面也是用 @的方式引用</p>\n<p><img data-src=\"image-20220605000557554.png\" alt=\"image-20220605000557554\"></p>\n<p>箭头代表运算的参数这里还有两个注意的点</p>\n<blockquote>\n<p>for_each_stmt<br>\n 这句语句是遍历一下语句的意思，其中 stmt 就是 statement 的简称，由此推断可能是进入了一个循环<br>\n一般 for_each 后面需要接循环变量，按照上面的分析，循环变量出现在后面，而后面是一个运算表达式</p>\n<p>ClosedRange&lt;Int&gt;<br>\n 其实顾名思义，就是闭合的 range，python 中的 range 是左闭右开的区间，而这里就是左闭右闭的区间<br>\n所以转换成伪代码</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#由于是左闭右闭的区间，所以还得加上 1</span></pre></td></tr></table></figure></blockquote>\n<p><img data-src=\"image-20220605002030258.png\" alt=\"image-20220605002030258\"></p>\n<p>运算符与参数都用箭头标识出来，所以可以很容易得到伪代码，后面的代码也以此类推</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        r0<span class=\"token punctuation\">,</span>r1<span class=\"token punctuation\">,</span>r2<span class=\"token punctuation\">,</span>r3<span class=\"token operator\">=</span>b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>r2<span class=\"token operator\">^</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>r0<span class=\"token operator\">>></span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        b<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r3 <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>r1 <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        b<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r0 <span class=\"token operator\">^</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        b<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r1 <span class=\"token operator\">^</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>密文就直接能看出来，提取就 ok</p>\n<p><img data-src=\"image-20220605002223562.png\" alt=\"image-20220605002223562\"></p>\n<p>最后得到伪代码 (swift)</p>\n<figure class=\"highlight swift\"><figcaption data-lang=\"swift\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>encoded<span class=\"token punctuation\">:</span> str<span class=\"token punctuation\">,</span> keyValue<span class=\"token punctuation\">:</span>str<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> bool</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span>encoded<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">let</span> k <span class=\"token operator\">=</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span>keyValue<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">let</span> r0<span class=\"token punctuation\">:</span><span class=\"token class-name\">UInt8</span> <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">let</span> r1 <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">let</span> r2 <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">let</span> r3 <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    foreach i <span class=\"token keyword\">in</span> <span class=\"token number\">0</span><span class=\"token operator\">..</span> b<span class=\"token punctuation\">.</span>count <span class=\"token operator\">-</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">(</span>r0<span class=\"token punctuation\">,</span> r1<span class=\"token punctuation\">,</span> r2<span class=\"token punctuation\">,</span> r3<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r2 <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>r0 <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r3 <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>r1 <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r0 <span class=\"token operator\">^</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r1 <span class=\"token operator\">^</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token punctuation\">(</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">return</span> b <span class=\"token operator\">==</span> <span class=\"token punctuation\">[</span><span class=\"token number\">88</span><span class=\"token punctuation\">,</span><span class=\"token number\">35</span><span class=\"token punctuation\">,</span><span class=\"token number\">88</span><span class=\"token punctuation\">,</span><span class=\"token number\">225</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">201</span><span class=\"token punctuation\">,</span><span class=\"token number\">57</span><span class=\"token punctuation\">,</span><span class=\"token number\">94</span><span class=\"token punctuation\">,</span><span class=\"token number\">77</span><span class=\"token punctuation\">,</span><span class=\"token number\">56</span><span class=\"token punctuation\">,</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span><span class=\"token number\">168</span><span class=\"token punctuation\">,</span><span class=\"token number\">72</span><span class=\"token punctuation\">,</span><span class=\"token number\">218</span><span class=\"token punctuation\">,</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span><span class=\"token number\">91</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span><span class=\"token number\">101</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span><span class=\"token number\">207</span><span class=\"token punctuation\">,</span><span class=\"token number\">73</span><span class=\"token punctuation\">,</span><span class=\"token number\">130</span><span class=\"token punctuation\">,</span><span class=\"token number\">74</span><span class=\"token punctuation\">,</span><span class=\"token number\">128</span><span class=\"token punctuation\">,</span><span class=\"token number\">76</span><span class=\"token punctuation\">,</span><span class=\"token number\">201</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span><span class=\"token number\">248</span><span class=\"token punctuation\">,</span><span class=\"token number\">41</span><span class=\"token punctuation\">,</span><span class=\"token number\">205</span><span class=\"token punctuation\">,</span><span class=\"token number\">103</span><span class=\"token punctuation\">,</span><span class=\"token number\">84</span><span class=\"token punctuation\">,</span><span class=\"token number\">91</span><span class=\"token punctuation\">,</span><span class=\"token number\">99</span><span class=\"token punctuation\">,</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span><span class=\"token number\">202</span><span class=\"token punctuation\">,</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span><span class=\"token number\">131</span><span class=\"token punctuation\">,</span><span class=\"token number\">63</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> arg</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">let</span> key <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"345y\"</span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token function\">check</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>直接用 z3 解</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> z3 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">225</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">201</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57</span><span class=\"token punctuation\">,</span> <span class=\"token number\">94</span><span class=\"token punctuation\">,</span> <span class=\"token number\">77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">168</span><span class=\"token punctuation\">,</span> <span class=\"token number\">72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">218</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">91</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">207</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>          <span class=\"token number\">73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">130</span><span class=\"token punctuation\">,</span> <span class=\"token number\">74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span> <span class=\"token number\">76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">201</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">248</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">205</span><span class=\"token punctuation\">,</span> <span class=\"token number\">103</span><span class=\"token punctuation\">,</span> <span class=\"token number\">84</span><span class=\"token punctuation\">,</span> <span class=\"token number\">91</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">202</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">131</span><span class=\"token punctuation\">,</span> <span class=\"token number\">63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>s <span class=\"token operator\">=</span> Solver<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>BitVec<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"flag_</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>bb <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>key <span class=\"token operator\">=</span> <span class=\"token builtin\">bytearray</span><span class=\"token punctuation\">(</span><span class=\"token string\">b\"345y\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">check</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">(</span>r0<span class=\"token punctuation\">,</span> r1<span class=\"token punctuation\">,</span> r2<span class=\"token punctuation\">,</span> r3<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r2 <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>LShR<span class=\"token punctuation\">(</span>r0<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r3 <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>LShR<span class=\"token punctuation\">(</span>r1<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r0 <span class=\"token operator\">^</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r1 <span class=\"token operator\">^</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> target<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>check<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> bb<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">if</span> s<span class=\"token punctuation\">.</span>check<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> sat<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    model <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> model<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">#output: flag&#123;30831242-56db-45b4-96fd-1f47e60da99d&#125;</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">225</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">201</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57</span><span class=\"token punctuation\">,</span> <span class=\"token number\">94</span><span class=\"token punctuation\">,</span> <span class=\"token number\">77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">168</span><span class=\"token punctuation\">,</span> <span class=\"token number\">72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">218</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">91</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">207</span><span class=\"token punctuation\">,</span><span class=\"token number\">73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">130</span><span class=\"token punctuation\">,</span> <span class=\"token number\">74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span> <span class=\"token number\">76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">201</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">248</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">205</span><span class=\"token punctuation\">,</span> <span class=\"token number\">103</span><span class=\"token punctuation\">,</span> <span class=\"token number\">84</span><span class=\"token punctuation\">,</span> <span class=\"token number\">91</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">202</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">131</span><span class=\"token punctuation\">,</span> <span class=\"token number\">63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>k <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">121</span><span class=\"token punctuation\">,</span> <span class=\"token number\">51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">53</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    r1 <span class=\"token operator\">=</span> b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    r0 <span class=\"token operator\">=</span> b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    r3 <span class=\"token operator\">=</span> b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r1 <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    r2 <span class=\"token operator\">=</span> b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r0 <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r0<span class=\"token punctuation\">,</span> r1<span class=\"token punctuation\">,</span> r2<span class=\"token punctuation\">,</span> r3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> b<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#output: flag&#123;30831242-56db-45b4-96fd-1f47e60da99d&#125;</span></pre></td></tr></table></figure><p>这两个解题脚本都是参考自 Lilac 战队</p>\n",
            "tags": [
                "Reverse_wp_2022CISCN"
            ]
        },
        {
            "id": "https://0x401000nu1l.github.io/2022/05/15/%E8%BD%AF%E6%9E%84%E5%AD%A6%E4%B9%A0%E4%B8%89/",
            "url": "https://0x401000nu1l.github.io/2022/05/15/%E8%BD%AF%E6%9E%84%E5%AD%A6%E4%B9%A0%E4%B8%89/",
            "title": "软构学习三",
            "date_published": "2022-05-15T10:15:52.000Z",
            "content_html": "<h1 id=\"课程内容1-4章复习\"><a class=\"anchor\" href=\"#课程内容1-4章复习\">#</a> 课程内容 1-4 章复习</h1>\n<h2 id=\"一多维度视图和质量目标\"><a class=\"anchor\" href=\"#一多维度视图和质量目标\">#</a> 一。多维度视图和质量目标</h2>\n<h3 id=\"总览\"><a class=\"anchor\" href=\"#总览\">#</a> 总览</h3>\n<p><img data-src=\"image-20220613211913950.png\" alt=\"image-20220613211913950\"></p>\n<p><img data-src=\"image-20220613214646742.png\" alt=\"image-20220613214646742\"></p>\n<p><strong>运行时</strong></p>\n<p>・Code-level view：代码快照、内存转储；堆栈轨迹、并发线程<br>\n<strong>逻辑实体</strong>在内存中如何呈现</p>\n<p>・Component-level view：包、库、动态链接、数据库、网络、硬件；事件日志、多进程、分布式程序<br>\n<strong>物理实体</strong>在物理硬件环境中如何呈现</p>\n<p>・Moment view：代码快照、内存转储；包、库、动态链接、数据库、网络、硬件<br>\n逻辑 / 物理实体在内存 / 硬件环境中<strong>特定时刻</strong>的形态</p>\n<p>・Period view：堆栈轨迹、并发线程；事件日志、多进程、分布式程序<br>\n逻辑 / 物理实体在内存 / 硬件环境中的形态<strong>随时间的变化</strong></p>\n<p>动态链接：库文件不会在构建阶段被加入可执行软件，仅仅做出标记；程序运行时，根据标记装载库至内存；发布软件时，将程序所依赖的所有动态库都复制给用户</p>\n<p><strong>运行时</strong></p>\n<p>分布式程序：需要多个运行程序，分别部署于多个计算机物理环境</p>\n<p>代码快照：描述程序运行时内存里变量层面的状态</p>\n<p>内存转储（Memory dump）：一个包含进程内存拷贝的磁盘文件，包含程序异常退出时的寄存器、调用栈、程序数据等，调试器可以加载转储文件并显示信息</p>\n<p>执行跟踪（Execution tracing）：软件层面，用日志方式记录程序执行的调用次序</p>\n<p>事件日志：系统层面的日志</p>\n<h4 id=\"视图转换\"><a class=\"anchor\" href=\"#视图转换\">#</a> 视图转换</h4>\n<p><img data-src=\"image-20220613215018184.png\" alt=\"image-20220613215018184\"></p>\n<p>•∅→Code</p>\n<p><strong>Programming / Coding (ADT/OOP)</strong></p>\n<p>Review, static analysis/checking</p>\n<p>•Code→Component</p>\n<p><strong>Design (ADT/OOP; Reusability; Maintainability)</strong></p>\n<p>Build: compile, static link, package, install, etc</p>\n<p>•Build-time→Run-time</p>\n<p>Install / deploy</p>\n<p><strong>Debug, unit/integration testing (Robustness and Correctness)</strong></p>\n<p>•Moment→Period</p>\n<p><strong>Version control</strong></p>\n<p>Loading, dynamic linking, execution (dumping, profiling, logging)</p>\n<p>Concurrent threads</p>\n<h2 id=\"软件的质量因素\"><a class=\"anchor\" href=\"#软件的质量因素\">#</a> 软件的质量因素</h2>\n<p><strong>外部质量因素</strong>：可被<strong>用户</strong>感知的因素，如软件速度、易用性；影响用户</p>\n<p><strong>内部质量因素</strong>：作为<strong>软件产品</strong>的质量，如代码可读性；影响软件本身和它的开发者</p>\n<p><strong>外部质量取决于内部质量。</strong></p>\n<h4 id=\"外部质量因素\"><a class=\"anchor\" href=\"#外部质量因素\">#</a> 外部质量因素</h4>\n<p><strong>1.</strong> <strong>正确性</strong></p>\n<p>正确性：按照预先定义的<strong>规约</strong>执行，是<strong>最重要</strong>的质量指标</p>\n<p>・测试和调试：发现不正确、消除不正确</p>\n<p>・防御式编程：在写程序的时候就确保正确性</p>\n<p>・形式化方法：通过形式化验证发现问题</p>\n<p><strong>2.</strong> <strong>健壮性鲁棒性</strong></p>\n<p>健壮性：针对异常情况的处理，关键在于出现异常时不要崩溃</p>\n<p>健壮性是对正确性的补充，正确性保证了软件的行为要严格符合规约中定义的行为；健壮性保证了出现规约定义之外的情形的时候，软件要做出恰当的反应。</p>\n<p>“正常” 和 “异常” 是主观而非客观的，未被规约覆盖的情况即为 “异常情况”。</p>\n<p><strong>3.</strong> <strong>可扩展性</strong></p>\n<p>可扩展性：对软件的规约进行修改，是否足够容易</p>\n<p>软件规模越大，扩展起来越不容易。</p>\n<p><strong>4.</strong> <strong>可复用性</strong></p>\n<p>可复用性：一次开发，多次使用</p>\n<p><strong>5.</strong> <strong>兼容性</strong></p>\n<p>兼容性：不同的软件系统之间相互可容易的集成</p>\n<p>核心是保持设计的同构性，关键在标准化。</p>\n<p><strong>6.</strong> <strong>性能</strong></p>\n<p>除非有足够的正确性，否则性能毫无意义。对性能的关注要与其他质量属性进行折中，过度的优化会导致软件不再适应变化和复用。</p>\n<p><strong>7.</strong> <strong>可移植性</strong></p>\n<p>可移植性：软件可方便的在不同的技术环境之间移植，包括硬件和操作系统</p>\n<p><strong>8.</strong> <strong>易用性</strong></p>\n<p>易用性：对用户而言容易学、安装、操作、监控</p>\n<p>提升易用性的方法是给用户提供详细的指南。</p>\n<p>**9. <em>功能性（<em>Functionality）</em></em></p>\n<p>程序设计中一种不适宜的趋势，即软件开发者增加越来越多的功能，企图跟上竞争，其结果是程序极为复杂、不灵活、占用过多的磁盘空间，<strong>忽视整体质量，失去可持续性</strong>。</p>\n<p><strong>10.</strong> <strong>及时性（Timeliness）</strong></p>\n<p>及时性：在用户有对应需求前放出新版本</p>\n<h4 id=\"内部质量因素\"><a class=\"anchor\" href=\"#内部质量因素\">#</a> 内部质量因素</h4>\n<p><strong>源码方面</strong>：行数（LoC）、逻辑复杂度</p>\n<p><strong>结构方面</strong>：耦合、内聚</p>\n<p>除此之外还有<strong>代码可读性、易于理解、清晰、大小</strong>等。</p>\n<h4 id=\"总结5个核心质量因素\"><a class=\"anchor\" href=\"#总结5个核心质量因素\">#</a> 总结：5 个核心质量因素</h4>\n<p><img data-src=\"image-20220613215515646.png\" alt=\"image-20220613215515646\"></p>\n<p><img data-src=\"image-20220613215529119.png\" alt=\"image-20220613215529119\"></p>\n<p><img data-src=\"image-20220613215535621.png\" alt=\"image-20220613215535621\"></p>\n<p><img data-src=\"image-20220613215541440.png\" alt=\"image-20220613215541440\"></p>\n<h2 id=\"软件测试\"><a class=\"anchor\" href=\"#软件测试\">#</a> 软件测试</h2>\n<p>测试是提高软件质量的重要手段，确认软件是否达到可用级别（用户需求），它关注系统的某一侧面的质量特性。</p>\n<p>・测试跟其他活动的目标相反，它的目的是发现错误</p>\n<p>・再好的测试也无法证明系统里不存在错误</p>\n<p>一个好的测试具有这些特征：能发现错误、不冗余、最佳组合、不能太过复杂也不能太过简单。</p>\n<p><strong>测试和调试的区别</strong></p>\n<p>・测试：发现是否存在错误</p>\n<p>・调试：识别错误根源，消除错误</p>\n<h4 id=\"测试的分类\"><a class=\"anchor\" href=\"#测试的分类\">#</a> 测试的分类</h4>\n<p><strong>从范围上看</strong></p>\n<p>・单元测试：针对软件的最小单元模型开展测试（一般来说是在单个方法 / 类的级别），隔离各个模块，容易定位错误和调试</p>\n<p>・集成测试：将多个程序员 / 团队编写的类 / 包 / 组件 / 子系统联合起来测试</p>\n<p>・系统测试：对整个系统进行测试，将硬件、软件、配置信息等看作一个整体</p>\n<p>・验收测试：产品发布之前所进行的软件测试活动，是技术测试的最后一个阶段，目的是确保软件准备就绪，并且可以让最终用户将其用于执行软件的既定功能和任务</p>\n<p>・回归测试：一旦程序被修改，重新执行之前的所有测试以确认修改没有引入新的错误或导致其他代码产生错误</p>\n<p><img data-src=\"image-20220613215636044.png\" alt=\"image-20220613215636044\"></p>\n<p><img data-src=\"image-20220613215642647.png\" alt=\"image-20220613215642647\"></p>\n<p><strong>从静态 / 动态上看</strong></p>\n<p>・静态测试：在编写代码的阶段由程序员或是代码编辑器、编译器等工具进行检查（如语法检查、代码评审）</p>\n<p>・动态测试：通过测试用例实际执行了编写的代码<br>\n动态测试可能在程序完全编写完成前就用于测试代码的特定节</p>\n<p><strong>从结构上看</strong></p>\n<p>・白盒测试：对程序<strong>内部代码</strong>结构的测试</p>\n<p>・黑盒测试：对程序外部表现出来的<strong>行为</strong>的测试（例如输入输出）</p>\n<p><img data-src=\"image-20220613215715637.png\" alt=\"image-20220613215715637\"></p>\n<h4 id=\"测试用例及编写\"><a class=\"anchor\" href=\"#测试用例及编写\">#</a> 测试用例及编写</h4>\n<p>测试用例：输入 + 执行条件 + 期望结果<br>\n测试的动机：让代码出错，出错越快越好</p>\n<p><strong>编写测试的过程</strong></p>\n<p>・先写规约，再写符合规约的测试用例</p>\n<p>・写代码、执行测试、有问题再改、再执行测试用例，直到通过它<br>\n测试驱动开发（TDD）：将需求转化为具体的测试用例，然后软件经过改进，通过新的测试</p>\n<p><img data-src=\"image-20220613215752800.png\" alt=\"image-20220613215752800\"></p>\n<h4 id=\"黑盒测试\"><a class=\"anchor\" href=\"#黑盒测试\">#</a> 黑盒测试</h4>\n<p>黑盒测试关键在于检查程序是否符合规约，完全从函数规约导出测试用例，不考虑函数内部实现。<br>\n用尽可能少的测试用例，尽快运行，并尽可能大的发现程序的错误。</p>\n<p><strong>等价类划分</strong></p>\n<p>基于等价类划分的测试：将被测函数的输入域划分为等价类，从等价类中导出测试用例<br>\n每个等价类代表着对输入约束加以满足 / 违反的有效 / 无效数据的集合。</p>\n<p>等价类的假设：对于相似的输入，将会展示相似的行为<br>\n故可从每个等价类中仅选一个代表作为测试用例，从而降低测试用例数量。</p>\n<p><strong>典型的划分原则</strong></p>\n<p>考虑输入数据是否限定了数值范围，或是指明了特定的值，或是对不同范围的值可能采用不同的计算方案。</p>\n<p><strong>边界值分析</strong></p>\n<p>边界值分析方法是对等价类划分方法的补充。<br>\n原理：大量的错误发生在输入域的 “边界” 而非中央</p>\n<p>・0 是正数和负数的边界</p>\n<p>・基本类型的边界，如 INT_MAX、INT_MIN</p>\n<p>・集合中的第一个和最后一个元素</p>\n<p><strong>两种覆盖方式</strong></p>\n<p><strong>笛卡尔积：全覆盖</strong></p>\n<p>将多个划分维度上的多个取值组合起来，每个组合都要有一个用例。不过并非所有组合情况都可能。<br>\n测试完备，但用例数量多，测试代价高。</p>\n<p><strong>覆盖每个取值：最少</strong> <strong>1</strong> <strong>次即可</strong></p>\n<p>每个维度的每个取值至少被 1 个测试用例覆盖一次即可。<br>\n测试用例少，代价低，但测试覆盖度未必高。</p>\n<p>白盒测试根据程序执行路径设计测试用例，一般较早执行。<br>\n独立 / 基本路径测试：对程序所有执行路径进行等价类划分，找出有代表性的最简单的路径（例如循环只需执行 1 次），设计测试用例使每一条基本路径被至少覆盖 1 次</p>\n<p><img data-src=\"image-20220613215929235.png\" alt=\"image-20220613215929235\"></p>\n<p><strong>覆盖度测试</strong></p>\n<p>代码覆盖度：已有的测试用例有多大程度覆盖了被测程序，通常用百分比衡量<br>\n代码覆盖度越低，测试越不充分；但要做到很高的代码覆盖度，需要更多的测试用例，测试代价高。</p>\n<p>语句覆盖：每⼀条语句至少执行一次<br>\n分支覆盖：判定中每个条件的所有可能结果至少出现一次，并且每个判定本身的所有可能结果也至少出现一次<br>\n路径覆盖：每条可能执行到的路径至少执行一次</p>\n<p>测试效果：路径覆盖 &gt; 分支覆盖 &gt; 语句覆盖<br>\n测试难度：路径覆盖 &gt; 分支覆盖 &gt; 语句覆盖</p>\n<p><strong>测试策略</strong></p>\n<p>测试策略：根据什么来选择测试用例 —— 非常重要，需要在程序中<strong>显式</strong>记录下来</p>\n<p>目的：在代码评审过程中，其他人可以理解你的测试，并评判你的测试是否足够充分</p>\n<p><strong>分析工具</strong></p>\n<p>Junit、EclEmma、VisualVM、AppPerfect：动态检查，需要执行代码</p>\n<p>CheckStyle、SpotBugs、PMD：静态检查，无需执行代码</p>\n<h2 id=\"过程与配置管理\"><a class=\"anchor\" href=\"#过程与配置管理\">#</a> 过程与配置管理</h2>\n<h4 id=\"传统开发模型\"><a class=\"anchor\" href=\"#传统开发模型\">#</a> 传统开发模型</h4>\n<p>两种基本类型：线性过程、迭代过程</p>\n<p>选择合适的过程模型的依据：用户参与程度、开发效率 / 管理复杂度、开发出的软件的质量</p>\n<p><strong>瀑布过程</strong></p>\n<p>特点：线性推进、整体推进、非迭代<br>\n优点：管理简单<br>\n缺点：无法适应需求增加 / 变化</p>\n<p><img data-src=\"image-20220613220143709.png\" alt=\"image-20220613220143709\"></p>\n<p><strong>增量过程</strong></p>\n<p>特点：线性推进、增量式（多个瀑布的串行）、非迭代<br>\n优点：比较容易适应需求的增加</p>\n<p><img data-src=\"image-20220613220156089.png\" alt=\"image-20220613220156089\"></p>\n<p><strong>V-Model</strong></p>\n<p>V 模型可以看作瀑布模型的优化，它仍然是<strong>线性推进</strong>的，瀑布模型存在的问题大多在 V-model 中也存在。</p>\n<p>每个开发阶段都有相应的测试对齐进行验证，但是测试与开发是<strong>串行</strong>而非并行进行的，也就是测试需要等开发完成后再开始。</p>\n<p><img data-src=\"image-20220613220209324.png\" alt=\"image-20220613220209324\"></p>\n<p><strong>原型过程</strong></p>\n<p>开发出来之后由用户试用 / 评审，发现问题反馈给开发者，开发者修改原有的实现，继续交给用户评审，循环往复这个过程，直到用户满意为止。重点在于在原型上持续不断地迭代发现用户变化的需求。</p>\n<p>特点：迭代推进<br>\n优点：开发质量高<br>\n缺点：时间代价高</p>\n<p><img data-src=\"image-20220613220222750.png\" alt=\"image-20220613220222750\"></p>\n<p><strong>螺旋过程</strong></p>\n<p>・多轮迭代基本遵循瀑布模式</p>\n<p>・每轮迭代有明确的目标 ，遵循 “原型” 过程</p>\n<p>进行严格的风险分析， 方可进入下一轮迭代</p>\n<p><img data-src=\"image-20220613220237483.png\" alt=\"image-20220613220237483\"></p>\n<p><strong>敏捷开发</strong></p>\n<p>敏捷开发，即通过快速迭代和小规模的持续改进，以快速适应变化。</p>\n<p>敏捷宣言四个维度：</p>\n<p>・个体和互动高于流程和工具</p>\n<p>・工作的软件高于详尽的文档</p>\n<p>・客户合作高于合同谈判</p>\n<p>・响应变化高于遵循计划</p>\n<p><img data-src=\"image-20220613220307468.png\" alt=\"image-20220613220307468\"></p>\n<p>敏捷 = 增量 + 迭代，每次迭代处理一个小规模增量。</p>\n<p><img data-src=\"image-20220613220325998.png\" alt=\"image-20220613220325998\"></p>\n<h4 id=\"软件配置管理和版本控制\"><a class=\"anchor\" href=\"#软件配置管理和版本控制\">#</a> 软件配置管理和版本控制</h4>\n<p><strong>软件配置管理（SCM）</strong></p>\n<p>软件配置管理：追踪和控制软件的变化，包括版本控制和软件配置项<br>\n软件配置项（SCI）：软件中发生变化的<strong>基本</strong>单元（例如：文件）</p>\n<p><img data-src=\"image-20220613220430743.png\" alt=\"image-20220613220430743\"></p>\n<p><strong>版本控制 (VCS)</strong></p>\n<p><img data-src=\"image-20220613220459060.png\" alt=\"image-20220613220459060\"></p>\n<p><strong>版本控制分类</strong></p>\n<p><strong>本地版本控制系统</strong></p>\n<p>仓库存储于开发者本地机器，无法共享和协作。</p>\n<p><img data-src=\"image-20220613220601892.png\" alt=\"image-20220613220601892\"></p>\n<p><strong>集中式版本控制系统</strong></p>\n<p>仓库存储于独立的服务器， 支持多开发者之间的协作。</p>\n<p><img data-src=\"image-20220613220607339.png\" alt=\"image-20220613220607339\"></p>\n<p><strong>分布式版本控制系统</strong></p>\n<p>仓库存储于独立的服务器 + 每个开发者的本地机器。</p>\n<p><img data-src=\"image-20220613220611826.png\" alt=\"image-20220613220611826\"></p>\n<p><strong>Git</strong></p>\n<p>Git 是一个<strong>分布式</strong>版本控制系统</p>\n<p>一个 Git 仓库分为三个部分：</p>\n<p>・.git 目录：本地的 CMDB</p>\n<p>・工作目录：本地文件系统</p>\n<p>・暂存区：.git 目录中的一个文件，隔离工作目录和 Git 仓库</p>\n<p><img data-src=\"image-20220613220633800.png\" alt=\"image-20220613220633800\"></p>\n<p><img data-src=\"image-20220613220642790.png\" alt=\"image-20220613220642790\"></p>\n<p><strong>Object Graph</strong></p>\n<p>对象图是一个<strong>有向无环图</strong>，描述了版本之间的演化关系。一条边 A→B 表示在版本 B 的基础上作出变化，形成了版本 A。</p>\n<p><strong>结构</strong></p>\n<p>・一般：每个 commit 指向一个父亲</p>\n<p>・分支：多个 commit 可指向同一个父亲</p>\n<p>・合并：一个 commit 指向两个父亲</p>\n<p>・一个 “分支” 只是一个指向 commit 的别名</p>\n<p>・HEAD 指向当前工作的 commit</p>\n<p><img data-src=\"image-20220613220711205.png\" alt=\"image-20220613220711205\"></p>\n<p><strong>结点</strong></p>\n<p>一个 commit 存储一个树形结点。tree 中包含了数个 blob；每个 blob 是一个压缩了的仓库文件，不保存文件名信息。</p>\n<p><img data-src=\"image-20220613220723274.png\" alt=\"image-20220613220723274\"></p>\n<p>对于每个文件的每个版本（或是不同文件名但相同内容的文件），Git 只会存储一个 blob，而允许多个 commit tree 指向同一个 blob。<br>\n一个 commit 中与之前相比未发生变化的文件，无需重复存储。文件未发生变化，则后续多个版本始终指向同一个 blob；文件发生变化了，存储两份不同的 blob，两个版本指向不同的 blob。</p>\n<p><strong>传统</strong> <strong>VCS</strong> <strong>和</strong> <strong>Git</strong> <strong>对比</strong></p>\n<p>传统 VCS：存储版本之间的<strong>变化</strong>（行）</p>\n<p>Git：存储发生变化的<strong>文件</strong>（而非代码行）， 不变化的文件不重复存储</p>\n<p><img data-src=\"image-20220613220801904.png\" alt=\"image-20220613220801904\"></p>\n<p><img data-src=\"image-20220613220804571.png\" alt=\"image-20220613220804571\"></p>\n<p><img data-src=\"image-20220613220810838.png\" alt=\"image-20220613220810838\"></p>\n<p><img data-src=\"image-20220613220819079.png\" alt=\"image-20220613220819079\"></p>\n<h4 id=\"软件构造的一般过程\"><a class=\"anchor\" href=\"#软件构造的一般过程\">#</a> 软件构造的一般过程</h4>\n<p>软件构造的一般过程包括编码、重构、调试、测试、性能分析、代码评审、构建。</p>\n<p><strong>编码</strong></p>\n<p>从用途上划分：编程语言、建模语言、配置语言、构建语言<br>\n从形态上划分：基于语言学的构造语言、基于数学的形式化构造语言、基于图形的可视化构造语言</p>\n<p>建模语言：用于可视化、推理、验证和传达系统设计</p>\n<p>配置语言：用于配置程序的参数和初始设置</p>\n<p><img data-src=\"image-20220613220856572.png\" alt=\"image-20220613220856572\"></p>\n<p><strong>代码评审</strong></p>\n<p>・结对编程</p>\n<p>・走查</p>\n<p>・正式评审会议</p>\n<p>・自动化评审</p>\n<p><strong>性能分析</strong></p>\n<p>・动态分析：执行程序并观察现象、收集数据、分析不足</p>\n<p>・Profiling：对代码的运行时状态和性能进行度量，发现代码中的潜在问题</p>\n<h2 id=\"数据类型与类型检验\"><a class=\"anchor\" href=\"#数据类型与类型检验\">#</a> 数据类型与类型检验</h2>\n<p><img data-src=\"image-20220613221008218.png\" alt=\"image-20220613221008218\"></p>\n<p><strong>类型检查</strong></p>\n<p>・静态类型语言：在编译阶段进行类型检查，所有变量的类型在编译期就已经确定</p>\n<p>・动态类型语言：在运行阶段进行类型检查，变量的类型在运行期才能确定</p>\n<p>・静态类型检查：可发现语法错误、类名 / 函数名错误、参数数目错误、参数类型错误、返回值类型错误<br>\n静态类型检查可在编译阶段发现错误，避免了将错误带入到运行阶段，可提高程序正确性 / 健壮性</p>\n<p>・动态类型检查：可发现非法的参数值、非法的返回值、越界、空指针</p>\n<p>静态类型检查是关于 “类型” 的检查，不考虑值；动态检查是关于 “值” 的检查。<br>\nJava 是一种静态类型语言，它同时具有静态类型检查和动态类型检查。</p>\n<p><strong>改变变量和值的区别</strong></p>\n<p>改变一个变量：将该变量指向另一个值的存储空间<br>\n改变一个变量的值：将该变量当前指向的值的存储空间中写入一个新的值</p>\n<p><strong>不变性</strong></p>\n<p>不变数据类型（immutable type）：一旦被创建，其值不能改变<br>\n引用不变：一旦确定其指向的对象，不能再被改变（但其值是可能变化的）</p>\n<p><strong>Java</strong> <strong>中的</strong> <strong>final</strong> <strong>关键字</strong></p>\n<p>・final 类无法派生子类</p>\n<p>・final 方法无法被子类重写</p>\n<p>・final 变量无法改变其<strong>引用</strong>（而非值）</p>\n<p><strong>不可变类型（immutable）</strong></p>\n<p>一旦被创建，就始终<strong>代表</strong>（对外表现出）同样的值。</p>\n<p>对于不可变类型，频繁对其运算会产生大量的临时拷贝，可变类型能最少化拷贝以提高效率。因此，使用可变数据类型，可获得更好的性能，也适合于在多个模块之间共享数据。</p>\n<p>而不可变类型更 “安全”， 在其他质量指标上表现更好。例如，向任何方法传入不可变类型的值，不用担心其值被意外修改；多线程可以安全地持有同一个不可变类型的引用，而不用担心竞争。</p>\n<p><strong>保护可变类型</strong></p>\n<p>・防御式拷贝：给客户端返回一个全新的对象<br>\n大部分时候该拷贝不会被客户端修改， 可能造成大量的内存浪费</p>\n<p>・单引用局部变量：把对 mutable 对象的引用限制在类 / 方法内，不对外暴露<br>\n如果存在多个引用，使用可变类型就非常不安全</p>\n<h4 id=\"快照图\"><a class=\"anchor\" href=\"#快照图\">#</a> 快照图</h4>\n<p>快照图用于描述程序运行时的内部状态。使用快照图便于程序员之间的交流、刻画各类变量随时间变化、解释设计思路。</p>\n<p><strong>基本类型</strong></p>\n<p>在箭头末端填写值。</p>\n<p><img data-src=\"image-20220613221323603.png\" alt=\"image-20220613221323603\"></p>\n<p>快照图用于描述程序运行时的内部状态。使用快照图便于程序员之间的交流、刻画各类变量随时间变化、解释设计思路。</p>\n<p><strong>对象类型</strong></p>\n<p>在箭头末端画一个椭圆，在其中写上对象的类名，更详细的话再包含内部属性。<br>\n可变类型对象的椭圆使用单线，而不可变类型的椭圆使用双线。</p>\n<p><img data-src=\"image-20220613221359513.png\" alt=\"image-20220613221359513\"></p>\n<p><img data-src=\"image-20220613221404442.png\" alt=\"image-20220613221404442\"></p>\n<h4 id=\"有用的不可变类型\"><a class=\"anchor\" href=\"#有用的不可变类型\">#</a> 有用的不可变类型</h4>\n<p>基本类型及其封装对象类型都是不可变的，高精度数 BigInteger 和 BigDecimal 也是不可变的。</p>\n<p>不要使用 Date，因为它是可变类型。相反，使用 java.time 包下的类，如 LocalDateTime。</p>\n<p>Java 中的常用容器如 ArrayList、HashMap 等都是 mutable 的，如果希望容器不可变，可使用包装器 Collections.unmodifiableList 等获取一个不可变的包装对象 —— 当调用 mutator 方法时会抛出一个异常。</p>\n<p>然而，这种 “不可变” 是在运行阶段获得的，编译阶段无法据此进行静态检查。同时，wrapper 仅仅保证了无法通过 wrapper 引用修改对象，但如果通过被包装对象的引用修改了对象的值，wrapper 引用指向的对象仍然会被修改。</p>\n",
            "tags": [
                "软件构造学习"
            ]
        },
        {
            "id": "https://0x401000nu1l.github.io/2022/05/11/DASCTFxSU-RE-wp/",
            "url": "https://0x401000nu1l.github.io/2022/05/11/DASCTFxSU-RE-wp/",
            "title": "DASCTFxSU_RE_wp",
            "date_published": "2022-05-11T15:02:44.000Z",
            "content_html": "<h1 id=\"2022dasctf-x-su-三月春季挑战赛\"><a class=\"anchor\" href=\"#2022dasctf-x-su-三月春季挑战赛\">#</a> 2022DASCTF X SU 三月春季挑战赛</h1>\n<h3 id=\"login\"><a class=\"anchor\" href=\"#login\">#</a> <strong>login</strong></h3>\n<blockquote>\n<p>玩逆向有史以来做的最难的一道题</p>\n<p>主要知识点 <strong>Socket 通信   RSA 加密   HILL 加密   魔改 AES 加密</strong></p>\n</blockquote>\n<p>[附件下载](链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMV96VWc0WnJZbUIxaFBiSEpiQzRzMVE/cHdkPTF3M2U=\">https://pan.baidu.com/s/1_zUg4ZrYmB1hPbHJbC4s1Q?pwd=1w3e</span><br>\n 提取码：1w3e<br>\n-- 来自百度网盘超级会员 V2 的分享)</p>\n<h4 id=\"查壳\"><a class=\"anchor\" href=\"#查壳\">#</a> 查壳</h4>\n<p><img data-src=\"image-20220511231452497.png\" alt=\"image-20220511231452497\"></p>\n<p>无壳 64 位，拖进 IDA</p>\n<h4 id=\"socket\"><a class=\"anchor\" href=\"#socket\">#</a> Socket</h4>\n<p>拖进 IDA，<br>\n<img data-src=\"image-20220511231936537.png\" alt=\"image-20220511231936537\"></p>\n<p>根据经验可以判断这两个函数分别为 <strong>exit ()  和   printf ()</strong></p>\n<p>观察其他函数，点进去发现<br>\n<img data-src=\"image-20220511232201904.png\" alt=\"image-20220511232201904\"><img data-src=\"image-20220511232227000.png\" alt=\"image-20220511232227000\"></p>\n<p>发现很多特殊的函数 sys_* , 根据经验可以判断该种函数为系统函数，不可能是作者自己编写的<br>\n可以尝试搜索一下，发现是<strong> Socket</strong> 函数</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8wNjZkOTlkYTdjYmQ=\">Socket 技术详解</span>                     <span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80MDU0MTY2OTc=\">Socket 相关函数</span></p>\n<p>参考完上面的两篇博文就可以发现很多未解析的函数都是 Socket 函数<br>\n之后继续对 IDA 未解析的函数进行修复，得到最终的反汇编代码</p>\n<p><img data-src=\"image-20220511232922269.png\" alt=\"image-20220511232922269\"></p>\n<p><img data-src=\"image-20220511233000466.png\" alt=\"image-20220511233000466\"></p>\n<p>还有一个细节，以 socket_bind 函数为例</p>\n<p><img data-src=\"image-20220511233322344.png\" alt=\"image-20220511233322344\"></p>\n<p>socket 是通过套接字传递信息，而且重要的 ip 地址以及端口信息都保存在关键的结构体中，以便确定与之通信的计算机</p>\n<p>这里的<strong> sockaddr</strong> 就是保存信息的结构体，但是 IDA 并没有将它解析出来，我们手动添加结构体 socketaddr_in 结构体</p>\n<p>具体操作  <code>shift+F9</code>   右键 add 结构体</p>\n<p><img data-src=\"image-20220511233654912.png\" alt><img data-src=\"image-20220511233722116.png\" alt=\"image-20220511233722116\"></p>\n<p>添加之后，找到 bind () 函数，将第二个参数解析为对应的结构体<br>\n<strong><img data-src=\"image-20220511233839765.png\" alt=\"image-20220511233839765\"></strong></p>\n<p>解析成功之后就可以看到关键的信息<br>\n<img data-src=\"image-20220511233913148.png\" alt=\"image-20220511233913148\"></p>\n<p>能够看到 Socket 通信的端口   <strong>1234</strong></p>\n<h4 id=\"实现逻辑\"><a class=\"anchor\" href=\"#实现逻辑\">#</a> 实现逻辑</h4>\n<p>前一个阶段找到了客户端和服务端通信的端口 1234，由于客户端和服务端都运行在本地，所以 IP 地址也就是</p>\n<p><strong>127.0.0.1</strong>   本机地址<br>\n尝试在 1234 端口下开启单步调试<br>\n<img data-src=\"image-20220511234248174.png\" alt=\"image-20220511234248174\"></p>\n<p><img data-src=\"image-20220511234258977.png\" alt=\"image-20220511234258977\"></p>\n<p>利用端口 1234 开始单步调试</p>\n<p><img data-src=\"image-20220511234423357.png\" alt=\"image-20220511234423357\"></p>\n<p>这里提示需要输入参数 IP 地址才能运行 login</p>\n<p><img data-src=\"image-20220511234733678.png\" alt=\"image-20220511234733678\"></p>\n<p>大致的逻辑就是 login 运行后，服务端将字符串发送到客户端，提醒用户输入 token 和 password<br>\n 接收到用户的输入之后，再将得到的数据发送到服务端进行对比识别</p>\n<p>进入到关键的对比函数<br>\n<img data-src=\"image-20220511235254925.png\" alt=\"image-20220511235254925\"></p>\n<p>刚开始是不知道 RSA 加密以及 HILL 加密的，进入这两个函数分析</p>\n<h4 id=\"rsa\"><a class=\"anchor\" href=\"#rsa\">#</a> RSA</h4>\n<p><img data-src=\"image-20220512204648001.png\" alt=\"image-20220512204648001\"></p>\n<p>这里发现了特殊值，直接谷歌搜索 0x10001</p>\n<p><img data-src=\"image-20220512214004342.png\" alt=\"image-20220512214004342\"></p>\n<p>就能知道 0x10001 是 RSA 加密的公钥，后面的函数<br>\n<img data-src=\"image-20220512214723517.png\" alt=\"image-20220512214723517\"></p>\n<p>是将一个字符串转换成 16 进制数，当做<strong>私钥</strong><br>\n而前面的一个很大的数就是 RSA 中需要因式分解的大质数</p>\n<p>通过 yafu 工具或者<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5mYWN0b3JkYi5jb20v\">在线因式分解</span></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">98197216341757567488149177586991336976901080454854408243068885480633972200382596026756300968618883148721598031574296054706280190113587145906781375704611841087782526897314537785060868780928063942914187241017272444601926795083433477673935377466676026146695321415853502288291409333200661670651818749836420808033</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>q <span class=\"token operator\">=</span> <span class=\"token number\">133639826298015917901017908376475546339925646165363264658181838203059432536492968144231040597990919971381628901127402671873954769629458944972912180415794436700950304720548263026421362847590283353425105178540468631051824814390421486132775876582962969734956410033443729557703719598998956317920674659744121941513</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>n <span class=\"token operator\">=</span> p <span class=\"token operator\">*</span> q</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">0x10001</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token string\">b'By reading we enrich the mind, by conversation we polish it.'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">.</span>from_bytes<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> <span class=\"token string\">'little'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#这里要多试一下，确定是大端序还是小端序</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>d <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>q <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>m <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>powmod<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">#11963777321199993924175387978397443935563034091716786597947508874393819454915798980986262132792605021295930274531653741552766395859285325677395421549163602968276475448835066393456449574469736327622969755801884982386140722904578598391534204834007447860153096480268812700725451958035204357033892179559153729604237187552716580637492579876006993181920209114166153317182827927606249871955662032809256743464460825303610341043145126848787575238499023185150429072724679210155061579052743238859739734301162335989939278904459012917375108407803445722785027315562371588439877746983153339473213449448259686486917983129418859935686</span></pre></td></tr></table></figure><h4 id=\"hill\"><a class=\"anchor\" href=\"#hill\">#</a> HILL</h4>\n<p>刚开始不知道 HILL 加密，进入到函数里面<br>\n<img data-src=\"image-20220512221108149.png\" alt=\"image-20220512221108149\"></p>\n<p>还有那个 rand () 函数，之前是不知道 rand (), 也是看了 p 师傅的讲解才知道，当然，rand () 函数一般为了限定随机数的范围都是要 % 某个值，所以也能猜到这个函数是 rand ()，还有一个要注意的点就是该函数是在 Linux 环境下生成，所以编写脚本的时候也要对应的在 Linux 环境下<br>\n<img data-src=\"image-20220512221234932.png\" alt=\"image-20220512221234932\"></p>\n<p>所以这个 rand () 产生的数就是我们的密文，%257 和 %255 只是为了确保两个值在同一个范围内<br>\n逻辑就理的很清楚，矩阵运算之后与密文比较</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span> </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//Linux 环境下运行</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> hillData<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token number\">81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">210</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">195</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">149</span><span class=\"token punctuation\">,</span> <span class=\"token number\">185</span><span class=\"token punctuation\">,</span> <span class=\"token number\">249</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">213</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">227</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">59</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">130</span><span class=\"token punctuation\">,</span> <span class=\"token number\">180</span><span class=\"token punctuation\">,</span> <span class=\"token number\">192</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">154</span><span class=\"token punctuation\">,</span> <span class=\"token number\">253</span><span class=\"token punctuation\">,</span> <span class=\"token number\">232</span><span class=\"token punctuation\">,</span> <span class=\"token number\">186</span><span class=\"token punctuation\">,</span> <span class=\"token number\">213</span><span class=\"token punctuation\">,</span> <span class=\"token number\">236</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">106</span><span class=\"token punctuation\">,</span> <span class=\"token number\">84</span><span class=\"token punctuation\">,</span> <span class=\"token number\">136</span>\t</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> rsaData<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"11963777321199993924175387978397443935563034091716786597947508874393819454915798980986262132792605021295930274531653741552766395859285325677395421549163602968276475448835066393456449574469736327622969755801884982386140722904578598391534204834007447860153096480268812700725451958035204357033892179559153729604237187552716580637492579876006993181920209114166153317182827927606249871955662032809256743464460825303610341043145126848787575238499023185150429072724679210155061579052743238859739734301162335989939278904459012917375108407803445722785027315562371588439877746983153339473213449448259686486917983129418859935686\"</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> ivk<span class=\"token punctuation\">[</span><span class=\"token number\">48</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">36</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d, \"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">int</span> v5<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">47</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  \t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  \t\tv5 <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  \t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  \t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\tivk<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rsaData<span class=\"token punctuation\">[</span>v5 <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>rsaData<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span>\t</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  \t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  \t\t\tivk<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> hillData<span class=\"token punctuation\">[</span>v5 <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>hillData<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  \t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d, \"</span><span class=\"token punctuation\">,</span> ivk<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  \t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>直接逆运算就是 密钥矩阵先取逆然后与密文相乘<br>\n就可以自己先写一个 rand () 生成密文，然后利用<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2Z1LmNhL35qdG11bGhvbC9tYXRoMzAyL3NhZ2VtYXRoLmh0bWw=\">在线矩阵计算工具</span></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>x <span class=\"token operator\">=</span> Matrix<span class=\"token punctuation\">(</span>GF<span class=\"token punctuation\">(</span><span class=\"token number\">257</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">113</span><span class=\"token punctuation\">,</span> <span class=\"token number\">219</span><span class=\"token punctuation\">,</span> <span class=\"token number\">37</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">122</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">163</span><span class=\"token punctuation\">,</span> <span class=\"token number\">106</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">170</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">110</span><span class=\"token punctuation\">,</span> <span class=\"token number\">27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">169</span><span class=\"token punctuation\">,</span> <span class=\"token number\">122</span><span class=\"token punctuation\">,</span> <span class=\"token number\">138</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span> <span class=\"token number\">240</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">170</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">247</span><span class=\"token punctuation\">,</span> <span class=\"token number\">89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">169</span><span class=\"token punctuation\">,</span> <span class=\"token number\">242</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">246</span><span class=\"token punctuation\">,</span> <span class=\"token number\">154</span><span class=\"token punctuation\">,</span> <span class=\"token number\">78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">201</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>enc <span class=\"token operator\">=</span>  Matrix<span class=\"token punctuation\">(</span>GF<span class=\"token punctuation\">(</span><span class=\"token number\">257</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">163</span><span class=\"token punctuation\">,</span> <span class=\"token number\">151</span><span class=\"token punctuation\">,</span> <span class=\"token number\">162</span><span class=\"token punctuation\">,</span> <span class=\"token number\">85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">190</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">241</span><span class=\"token punctuation\">,</span> <span class=\"token number\">252</span><span class=\"token punctuation\">,</span> <span class=\"token number\">249</span><span class=\"token punctuation\">,</span> <span class=\"token number\">121</span><span class=\"token punctuation\">,</span> <span class=\"token number\">107</span><span class=\"token punctuation\">,</span> <span class=\"token number\">82</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">233</span><span class=\"token punctuation\">,</span> <span class=\"token number\">226</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">142</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">87</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">167</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">212</span><span class=\"token punctuation\">,</span> <span class=\"token number\">208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">130</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">119</span><span class=\"token punctuation\">,</span> <span class=\"token number\">117</span><span class=\"token punctuation\">,</span> <span class=\"token number\">27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">153</span><span class=\"token punctuation\">,</span> <span class=\"token number\">74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">237</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>flag <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>inverse<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>enc</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>得到<img data-src=\"image-20220512230200422.png\" alt=\"image-20220512230200422\"></p>\n<p>再转成 16 进制得到密码</p>\n<blockquote>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">5132</span>d202c32d95b9f978d514e3294220513b15623482b4c02e9afde8bad5ec07486a5488</pre></td></tr></table></figure></blockquote>\n<p>得到 token 和 password 之后再运行程序测试一下</p>\n<p><img data-src=\"image-20220512232100994.png\" alt=\"image-20220512232100994\"></p>\n<p>发现 token 和 password 都是正确的</p>\n<p>接着分析下面的加密</p>\n<h4 id=\"魔改aes\"><a class=\"anchor\" href=\"#魔改aes\">#</a> 魔改 AES</h4>\n<p><img data-src=\"image-20220512233821406.png\" alt=\"image-20220512233821406\"></p>\n<p>首先分析一个函数，该函数的作用即为将数组的两个元素合并成一个元素</p>\n<p>然后我们继续查看客户端传入到服务端的数据并把他们两两合并成一个新的数组<br>\n<img data-src=\"image-20220512234501417.png\" alt=\"image-20220512234501417\"></p>\n<p>我们直接搜索 52 09 6a d5 30</p>\n<p><img data-src=\"image-20220512234545881.png\" alt=\"image-20220512234545881\"></p>\n<p>发现就是 AES 加密<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4MjA1MTUzL2FydGljbGUvZGV0YWlscy81NTc5ODYyOD9vcHNfcmVxdWVzdF9taXNjPSUyNTdCJTI1MjJyZXF1ZXN0JTI1NUZpZCUyNTIyJTI1M0ElMjUyMjE2NDkwMzcyNjkxNjc4MTY4NTMxNjExNCUyNTIyJTI1MkMlMjUyMnNjbSUyNTIyJTI1M0ElMjUyMjIwMTQwNzEzLjEzMDEwMjMzNC4uJTI1MjIlMjU3RCZhbXA7cmVxdWVzdF9pZD0xNjQ5MDM3MjY5MTY3ODE2ODUzMTYxMTQmYW1wO2Jpel9pZD0wJmFtcDt1dG1fbWVkaXVtPWRpc3RyaWJ1dGUucGNfc2VhcmNoX3Jlc3VsdC5ub25lLXRhc2stYmxvZy0yfmFsbH50b3BfcG9zaXRpdmV+ZGVmYXVsdC0xLTU1Nzk4NjI4LjE0MiU1RXY1JTVFYXJ0aWNsZV9zY29yZV9yYW5rLDE1NyU1RXY0JTVFY29udHJvbCZhbXA7dXRtX3Rlcm09QUVTJmFtcDtzcG09MTAxOC4yMjI2LjMwMDEuNDE4Nw==\"> AES 加密详解</span></p>\n<p>后面继续分析</p>\n<p>发现又有一个 rand () 函数，<strong>而且经过实验，rand 函数在同一个程序里面即使重新调用，之前的值也会保留，也就是说，这次 rand 生成的值还是得在 rand 生成值 36 位之后找</strong>，所以最后测试密文的时候前面还是要加循环将前 36 个 rand 值踢掉</p>\n<p>这个循环体还有一个点就是</p>\n<p><img data-src=\"image-20220512235540438.png\" alt=\"image-20220512235540438\"></p>\n<p>他会在第 16 位时进入另一个分支</p>\n<p>也就是说，前 16 位是用的 key 后面 36 位是 iv (这也是 AES 的特点)</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span> </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> hillData<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token number\">81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">210</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">195</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">149</span><span class=\"token punctuation\">,</span> <span class=\"token number\">185</span><span class=\"token punctuation\">,</span> <span class=\"token number\">249</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">213</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">227</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">59</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">130</span><span class=\"token punctuation\">,</span> <span class=\"token number\">180</span><span class=\"token punctuation\">,</span> <span class=\"token number\">192</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">154</span><span class=\"token punctuation\">,</span> <span class=\"token number\">253</span><span class=\"token punctuation\">,</span> <span class=\"token number\">232</span><span class=\"token punctuation\">,</span> <span class=\"token number\">186</span><span class=\"token punctuation\">,</span> <span class=\"token number\">213</span><span class=\"token punctuation\">,</span> <span class=\"token number\">236</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">106</span><span class=\"token punctuation\">,</span> <span class=\"token number\">84</span><span class=\"token punctuation\">,</span> <span class=\"token number\">136</span>\t</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> rsaData<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"11963777321199993924175387978397443935563034091716786597947508874393819454915798980986262132792605021295930274531653741552766395859285325677395421549163602968276475448835066393456449574469736327622969755801884982386140722904578598391534204834007447860153096480268812700725451958035204357033892179559153729604237187552716580637492579876006993181920209114166153317182827927606249871955662032809256743464460825303610341043145126848787575238499023185150429072724679210155061579052743238859739734301162335989939278904459012917375108407803445722785027315562371588439877746983153339473213449448259686486917983129418859935686\"</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> ivk<span class=\"token punctuation\">[</span><span class=\"token number\">48</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">36</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d, \"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">int</span> v5<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">47</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  \t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  \t\tv5 <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  \t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  \t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\tivk<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rsaData<span class=\"token punctuation\">[</span>v5 <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>rsaData<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span>\t</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  \t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  \t\t\tivk<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> hillData<span class=\"token punctuation\">[</span>v5 <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>hillData<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  \t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d, \"</span><span class=\"token punctuation\">,</span> ivk<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  \t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>后面就可以继续判断 AES 了</p>\n<p>本菜鸡复现的时候也看不懂 AES，只好先挖个坑<br>\n看 P 师傅的博客之后才知道了这道题目的魔改</p>\n<blockquote>\n<p>简单介绍一下到底魔改了什么</p>\n<ol>\n<li>S（加密盒）和 Re（解密盒）<strong>互换</strong>，也就是加密的时候用了解密盒，解密的时候用了加密盒</li>\n<li>密钥扩展改变了<strong> Rcon 轮常量值</strong></li>\n<li>再进入加密器前进行了<strong>一轮 iv 的异或</strong>（像是 ECB 模式前加了轮异或）</li>\n</ol>\n<p>PS: 最大的改动是全部都是<strong> 8 位运算</strong>！！（而 AES 加密是<strong> 32 位运算</strong>，所以需要自己重写一下）</p>\n<p>（个人感觉是如果不自己打遍 AES，审起来会比较累，同时 AES 是经常用的学习一番也是十分不错的）</p>\n</blockquote>\n<p>最后贴上 P 师傅的解题脚本，等我学完 AES 就回来自己写一个（逃</p>\n<blockquote>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> S<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token number\">0x63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7c</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7b</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6b</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xc5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2b</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xfe</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xab</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x76</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token number\">0xca</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xc9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7d</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xfa</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x59</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x47</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xad</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xaf</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9c</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xc0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token number\">0xb7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xfd</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x93</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xcc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xe5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x15</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token number\">0x04</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xc7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xc3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x96</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x05</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xe2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xeb</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xb2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token number\">0x09</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2c</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1b</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6e</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3b</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xb3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xe3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x84</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token number\">0x53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xed</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xfc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xb1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5b</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xcb</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xbe</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x39</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4c</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x58</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xcf</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token number\">0xd0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xef</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xaa</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xfb</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4d</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3c</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token number\">0x51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9d</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xbc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xb6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xda</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token number\">0xcd</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0c</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xec</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xc4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7e</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3d</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5d</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xdc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xee</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xb8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xde</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5e</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0b</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xdb</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token number\">0xe0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x06</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5c</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xc2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xac</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x91</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xe4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token number\">0xe7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xc8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x37</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6d</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8d</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4e</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6c</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xea</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xae</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token number\">0xba</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2e</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1c</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xb4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xc6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xe8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xdd</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4b</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xbd</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8b</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8a</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3e</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xb5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0e</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x57</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xb9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xc1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1d</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9e</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token number\">0xe1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8e</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x94</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9b</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1e</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x87</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xe9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xce</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xdf</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token number\">0x8c</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0d</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xbf</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xe6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2d</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xb0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xbb</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x16</span> </pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> Rcon<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token number\">0x8d</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1b</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x36</span> </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> deColM<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token number\">0xE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token number\">0x9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token number\">0xD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token number\">0xB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE</span>\t</pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> W<span class=\"token punctuation\">[</span><span class=\"token number\">44</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">ExtendKey</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">AddRoundKey</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>stateMatrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">DeShiftRows</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>stateMatrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">DeSubBytes</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>stateMatrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">DeMixColumns</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>stateMatrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">XorIv</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> plainText<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> iv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">AESDecode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> enc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> plainText<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">106</span><span class=\"token punctuation\">,</span> <span class=\"token number\">55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">213</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> iv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">249</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">195</span><span class=\"token punctuation\">,</span> <span class=\"token number\">49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">106</span><span class=\"token punctuation\">,</span> <span class=\"token number\">53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">84</span><span class=\"token punctuation\">,</span> <span class=\"token number\">52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57</span><span class=\"token punctuation\">,</span> <span class=\"token number\">210</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">210</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">185</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> enc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">254</span><span class=\"token punctuation\">,</span> <span class=\"token number\">249</span><span class=\"token punctuation\">,</span> <span class=\"token number\">231</span><span class=\"token punctuation\">,</span> <span class=\"token number\">62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">246</span><span class=\"token punctuation\">,</span> <span class=\"token number\">161</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">204</span><span class=\"token punctuation\">,</span> <span class=\"token number\">87</span><span class=\"token punctuation\">,</span> <span class=\"token number\">97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">193</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">119</span><span class=\"token punctuation\">,</span> <span class=\"token number\">251</span><span class=\"token punctuation\">,</span> <span class=\"token number\">156</span><span class=\"token punctuation\">,</span> <span class=\"token number\">187</span><span class=\"token punctuation\">,</span> <span class=\"token number\">202</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token number\">177</span><span class=\"token punctuation\">,</span> <span class=\"token number\">232</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">217</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">216</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">107</span><span class=\"token punctuation\">,</span> <span class=\"token number\">234</span><span class=\"token punctuation\">,</span> <span class=\"token number\">207</span><span class=\"token punctuation\">,</span> <span class=\"token number\">232</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">162</span><span class=\"token punctuation\">,</span> <span class=\"token number\">250</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> plainText<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    \t<span class=\"token function\">AESDecode</span><span class=\"token punctuation\">(</span>enc <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> plainText <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    \t<span class=\"token function\">XorIv</span><span class=\"token punctuation\">(</span>plainText <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> iv <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    \t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> plainText<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">XorIv</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> plainText<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> iv<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span> <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t\tplainText<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> iv<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">GetStateMatrix</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>stateMatrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> enc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t\t\tstateMatrix<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> enc<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token operator\">+</span> j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">PutStateMatrix</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> plainText<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>stateMatrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t\t\tplainText<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token operator\">+</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stateMatrix<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">AESDecode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> enc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> plainText<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t<span class=\"token function\">ExtendKey</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> stateMatrix<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t<span class=\"token function\">GetStateMatrix</span><span class=\"token punctuation\">(</span>stateMatrix<span class=\"token punctuation\">,</span> enc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\ti <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t<span class=\"token function\">AddRoundKey</span><span class=\"token punctuation\">(</span>stateMatrix<span class=\"token punctuation\">,</span> W <span class=\"token operator\">+</span> i <span class=\"token operator\">*</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t\t<span class=\"token function\">DeShiftRows</span><span class=\"token punctuation\">(</span>stateMatrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t\t<span class=\"token function\">DeSubBytes</span><span class=\"token punctuation\">(</span>stateMatrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t\t<span class=\"token function\">AddRoundKey</span><span class=\"token punctuation\">(</span>stateMatrix<span class=\"token punctuation\">,</span> W <span class=\"token operator\">+</span> i <span class=\"token operator\">*</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t\t<span class=\"token function\">DeMixColumns</span><span class=\"token punctuation\">(</span>stateMatrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t<span class=\"token function\">PutStateMatrix</span><span class=\"token punctuation\">(</span>plainText<span class=\"token punctuation\">,</span> stateMatrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">GFMul2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\t<span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> s <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\t<span class=\"token keyword\">int</span> a7 <span class=\"token operator\">=</span> result <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x00000100</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">// 判断位移后的那位是否为 1</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t </pre></td></tr><tr><td data-num=\"119\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> a7 <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t\tresult <span class=\"token operator\">=</span> result <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x000000FF</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t\tresult <span class=\"token operator\">=</span> result <span class=\"token operator\">^</span> <span class=\"token number\">0x1B</span><span class=\"token punctuation\">;</span>\t\t\t\t<span class=\"token comment\">// 矩阵乘法的特殊性\t</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"125\"></td><td><pre>\t<span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre></pre></td></tr><tr><td data-num=\"128\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">GFMul3</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">GFMul2</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre></pre></td></tr><tr><td data-num=\"133\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">GFMul4</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">GFMul2</span><span class=\"token punctuation\">(</span><span class=\"token function\">GFMul2</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre></pre></td></tr><tr><td data-num=\"138\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">GFMul8</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">GFMul2</span><span class=\"token punctuation\">(</span><span class=\"token function\">GFMul4</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre></pre></td></tr><tr><td data-num=\"143\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">GFMul9</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">GFMul8</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre></pre></td></tr><tr><td data-num=\"148\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">GFMul11</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">GFMul9</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token function\">GFMul2</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre></pre></td></tr><tr><td data-num=\"153\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">GFMul12</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">GFMul8</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token function\">GFMul4</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre></pre></td></tr><tr><td data-num=\"158\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">GFMul13</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">GFMul12</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre></pre></td></tr><tr><td data-num=\"163\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">GFMul14</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">GFMul12</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token function\">GFMul2</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre></pre></td></tr><tr><td data-num=\"168\"></td><td><pre></pre></td></tr><tr><td data-num=\"169\"></td><td><pre><span class=\"token comment\">/**</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre> *\tGF 上的二元运算</pre></td></tr><tr><td data-num=\"171\"></td><td><pre> */</pre></td></tr><tr><td data-num=\"172\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">GFMul</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>\t<span class=\"token keyword\">int</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"176\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> n <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>\t\tresult <span class=\"token operator\">=</span> s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> n <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>\t\tresult <span class=\"token operator\">=</span> <span class=\"token function\">GFMul2</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> n <span class=\"token operator\">==</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>\t\tresult <span class=\"token operator\">=</span> <span class=\"token function\">GFMul3</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> n <span class=\"token operator\">==</span> <span class=\"token number\">9</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>\t\tresult <span class=\"token operator\">=</span> <span class=\"token function\">GFMul9</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> n <span class=\"token operator\">==</span> <span class=\"token number\">0xB</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>\t\tresult <span class=\"token operator\">=</span> <span class=\"token function\">GFMul11</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> n <span class=\"token operator\">==</span> <span class=\"token number\">0xD</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>\t\tresult <span class=\"token operator\">=</span> <span class=\"token function\">GFMul13</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> n <span class=\"token operator\">==</span> <span class=\"token number\">0xE</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>\t\tresult <span class=\"token operator\">=</span> <span class=\"token function\">GFMul14</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"191\"></td><td><pre>\t<span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\t</pre></td></tr><tr><td data-num=\"192\"></td><td><pre><span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"193\"></td><td><pre></pre></td></tr><tr><td data-num=\"194\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">DeMixColumns</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>stateMatrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> tmpArray<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"199\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>\t\t\ttmpArray<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stateMatrix<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"203\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>\t\t\tstateMatrix<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">GFMul</span><span class=\"token punctuation\">(</span>deColM<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>tmpArray<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>\t\t\t\t\t\t\t\t<span class=\"token function\">GFMul</span><span class=\"token punctuation\">(</span>deColM<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>tmpArray<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>\t\t\t\t\t\t\t\t<span class=\"token function\">GFMul</span><span class=\"token punctuation\">(</span>deColM<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>tmpArray<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>\t\t\t\t\t\t\t\t<span class=\"token function\">GFMul</span><span class=\"token punctuation\">(</span>deColM<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>tmpArray<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre></pre></td></tr><tr><td data-num=\"211\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">DeSubBytes</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>stateMatrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"215\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>\t\t\tstateMatrix<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>stateMatrix<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre></pre></td></tr><tr><td data-num=\"220\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">DeShiftRows</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>stateMatrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"224\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>\t\tcount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> count<span class=\"token operator\">++</span> <span class=\"token operator\">&lt;</span> i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>\t\t\tt <span class=\"token operator\">=</span> stateMatrix<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">>=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">--</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre>\t\t\t\tstateMatrix<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stateMatrix<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>\t\t\tstateMatrix<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> t<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre></pre></td></tr><tr><td data-num=\"237\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">AddRoundKey</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>stateMatrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"241\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre>\t\t\tstateMatrix<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> j <span class=\"token operator\">+</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"244\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre></pre></td></tr><tr><td data-num=\"246\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">ExtendKey</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> tmp<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"250\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"251\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre>\t\tW<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre>\t\tW<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre>\t\tW<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre>\t\tW<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"258\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"259\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">44</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"261\"></td><td><pre>\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> v9 <span class=\"token operator\">=</span> W<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"262\"></td><td><pre>\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> v10 <span class=\"token operator\">=</span> W<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"263\"></td><td><pre>\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> v11 <span class=\"token operator\">=</span> W<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"264\"></td><td><pre>\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> v12 <span class=\"token operator\">=</span> W<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"265\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"267\"></td><td><pre>\t\t\tv10 <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>v11<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"268\"></td><td><pre>\t\t\tv11 <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>v12<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"269\"></td><td><pre>\t\t\tv12 <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>W<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"270\"></td><td><pre>\t\t\tv9 <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>W<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> Rcon<span class=\"token punctuation\">[</span>j <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"271\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"272\"></td><td><pre>\t\tW<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v9 <span class=\"token operator\">^</span> W<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre>\t\tW<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> j<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v10 <span class=\"token operator\">^</span> W<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre>\t\tW<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> j<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v11 <span class=\"token operator\">^</span> W<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre>\t\tW<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> j<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v12 <span class=\"token operator\">^</span> W<span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"276\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"277\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></blockquote>\n",
            "tags": [
                "Reverse_wp"
            ]
        },
        {
            "id": "https://0x401000nu1l.github.io/2022/05/09/VNCTF2022%E9%80%86%E5%90%91%E9%83%A8%E5%88%86wp/",
            "url": "https://0x401000nu1l.github.io/2022/05/09/VNCTF2022%E9%80%86%E5%90%91%E9%83%A8%E5%88%86wp/",
            "title": "VNCTF2022逆向部分wp",
            "date_published": "2022-05-09T06:38:12.000Z",
            "content_html": "<h1 id=\"vnctf2022逆向wp\"><a class=\"anchor\" href=\"#vnctf2022逆向wp\">#</a> VNCTF2022 逆向 wp</h1>\n<h4 id=\"babymaze\"><a class=\"anchor\" href=\"#babymaze\">#</a> babyMaze</h4>\n<blockquote>\n<p>py 逆向 &amp;&amp; 迷宫问题求解</p>\n</blockquote>\n<p>得到 pyc 文件之后直接用 pycdc 一把梭哈，发现梭不了<br>\n那就直接看 opcode</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./pycdas xxxx.pyc</pre></td></tr></table></figure><p><img data-src=\"image-20220509152645701.png\" alt=\"image-20220509152645701\"></p>\n<p>发现前面一个花指令，可能就是这段花指令让反编译工具无法正常使用<br>\n尝试 patch</p>\n<p><img data-src=\"image-20220509155253798.png\" alt=\"image-20220509155253798\"></p>\n<p>发现  JUMP_ABSOLUTE 指令对应的字节码是 0x71 用 010editor patch 连续三个 0x71<br>\n 删除完之后也要修改 py 文件头中的总的字节数的值 -6<br>\n<img data-src=\"image-20220509155454601.png\" alt=\"image-20220509155454601\"></p>\n<p>保存之后就可以直接用 pycdc 梭哈反汇编得到源码</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>_map<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">maze</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    x <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    y <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    step <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>step<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        x <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span> step<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'s'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        x <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">elif</span> step<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        y <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">elif</span> step<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'d'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        y <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token boolean\">None</span> <span class=\"token operator\">==</span> <span class=\"token number\">29</span> <span class=\"token keyword\">and</span> y <span class=\"token operator\">==</span> <span class=\"token number\">29</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Welcome To VNCTF2022!!!'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello Mr. X, this time your mission is to get out of this maze this time.(FIND THAT 7!)'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'you are still doing the mission alone, this tape will self-destruct in five seconds.'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">if</span> maze<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Congratulation! flag: VNCTF&#123;md5(your input)&#125;'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sorry, we won't acknowledge the existence of your squad.\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span></pre></td></tr></table></figure><p>发现是一个迷宫问题，直接写脚本破解</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 迷宫的数组表示</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin\">map</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#创造一个与迷宫数组大小相同的数组并且初始化所有元素为 0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>usedmap <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">DFS</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">global</span> flag</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">#定义迷宫结束的条件，这里是在 len (map)-1 出找到出口</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">#那么结束条件就在 len (map)-2 处结束</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span> x <span class=\"token operator\">==</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">2</span> <span class=\"token keyword\">and</span> y<span class=\"token operator\">==</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">#如果下一步不是墙 且没走过</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">[</span>x<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> usedmap<span class=\"token punctuation\">[</span>x<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\"># 标记当前坐标走过（不是下一步）</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        usedmap <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        flag <span class=\"token operator\">+=</span><span class=\"token string\">'s'</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        DFS<span class=\"token punctuation\">(</span>x<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span>                      <span class=\"token comment\"># 尝试向下走</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        flag <span class=\"token operator\">=</span> flag<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>                <span class=\"token comment\"># 回溯到这里说明这条路不可行，所以去掉最后输入的 S</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        usedmap <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token number\">0</span>               <span class=\"token comment\">#再设置当前坐标为 0 重新找路</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">[</span>x<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> usedmap<span class=\"token punctuation\">[</span>x<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        usedmap <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        flag <span class=\"token operator\">+=</span><span class=\"token string\">'w'</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        DFS<span class=\"token punctuation\">(</span>x<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        flag <span class=\"token operator\">=</span> flag<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        usedmap <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> usedmap<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        usedmap <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        flag <span class=\"token operator\">+=</span><span class=\"token string\">'d'</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        DFS<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        flag <span class=\"token operator\">=</span> flag<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        usedmap <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> usedmap<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        usedmap <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        flag <span class=\"token operator\">+=</span><span class=\"token string\">'a'</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        DFS<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        flag <span class=\"token operator\">=</span> flag<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        usedmap <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>x<span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>y<span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>DFS<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>flag</strong><br>\n<strong>VNCTF{801f190737434100e7d2790bd5b0732e}</strong></p>\n<h4 id=\"cm狗\"><a class=\"anchor\" href=\"#cm狗\">#</a> cm 狗</h4>\n<blockquote>\n<p>go 逆向 &amp; <strong>vm 逆向</strong></p>\n</blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sdTF1Lnh5ei8yMDIyLzAxLzI5L1JFLVZNJUU2JThBJTgwJUU2JTlDJUFGJUU1JTg1JUE1JUU5JTk3JUE4Lw==\">VM 逆向技术入门教程</span></p>\n<p><img data-src=\"image-20220509161547676.png\" alt=\"image-20220509161547676\"></p>\n<p>整个过程就是 VM 保护的常规流程，先初始化指令，然后读取特定指令字符，接着按照一定的规则解析字符</p>\n<p>VM 逆向的关键点在于理清整个 VM 结构体，探明其中寄存器分配以及不同的指令码代表具体的什么指令，由于加入了 go 语言，使得过程有点艰难，但是 IDA PRO 7.6 版本之后支持 go 语言逆向，给 go 语言逆向很大帮助</p>\n<p><img data-src=\"image-20220509161954602.png\" alt=\"image-20220509161954602\"> 该函数表示程序执行中断</p>\n<p><img data-src=\"image-20220509162012368.png\" alt=\"image-20220509162012368\"></p>\n<p><img data-src=\"image-20220506101710560.png\" alt=\"image-20220506101710560\"></p>\n<p>进入 init 函数后，发现有十几个 init_func, 这是 init_func 对应的就是后面解析指令时对应指令的作用</p>\n<p><img data-src=\"image-20220509162258527.png\" alt=\"image-20220509162258527\"></p>\n<p>发现类似结构体的变量 a1 , 合理推测这正是虚拟机结构体，<strong>下面开始分析该结构体元素</strong></p>\n<p><img data-src=\"image-20220509162910992.png\" alt=\"image-20220509162910992\"><img data-src=\"image-20220509163103622.png\" alt=\"image-20220509163103622\">              能够得到几个位置的值，但是暂时还不知道他们代表什么</p>\n<p><img data-src=\"image-20220509163151961.png\" alt=\"image-20220509163151961\"></p>\n<p>接着出现了另一个类似于结构体的变量 v1  ，v1 的第一块内存地址指向的是 init_func, 第二块指向的就是 a1 结构体<br>\n继续分析，进入 init_func2<br>\n<img data-src=\"image-20220509163515781.png\" alt=\"image-20220509163515781\"></p>\n<p>这里先是将 v1 结构体的一块内存地址传给 v2，接着对 a1 (参数) 做了判断，判断是否小于 21，判断通过后又做了类似于数组赋值的运算<br>\n<strong>所以，合理猜测 v2 指向的是寄存器数组，并且 a1 作为数组（寄存器）索引，不能大于 21，就说明一共只有 21 个寄存器</strong><br>\n而这 21 个寄存器就在之前的 vm 结构体里面，具体位置如图</p>\n<p><img data-src=\"image-20220509164344286.png\" alt=\"image-20220509164344286\"></p>\n<p>继续往下分析，发现后面毎有一个 init_func 函数初始化后，就会将其存入 结构体 a1 的一段内存中，而且是连续的，但是在中间有一段空白，所以推测是一个函数数组<br>\n<img data-src=\"image-20220509164648221.png\" alt=\"image-20220509164648221\"><img data-src=\"image-20220509164658091.png\" alt=\"image-20220509164658091\"></p>\n<p>函数指针为 qword, 从 offse 4104 开始存入第一个 init_func 函数，到 offset 4904 存入最后一个函数，刚好 800 个字节，所以函数数组有 100 个元素 为 fun [100]<br>\n<img data-src=\"image-20220509165148779.png\" alt=\"image-20220509165148779\"></p>\n<p>继续向下分析<br>\n<img data-src=\"image-20220509165248563.png\" alt=\"image-20220509165248563\"></p>\n<p>发现这里先是判断了 v3 的大小，然后又以 v3 为索引，似乎又是一个数组，而且元素长度 dword<br>\n 我们发现之前构造 vm 结构体时中间刚好有 4000 字节的空白部分不知道作用，而这个数组刚好是 1000 的长度，单位元素长度 4 字节，所以算是一个大的数组当做内存<br>\n<img data-src=\"image-20220509165938440.png\" alt=\"image-20220509165938440\"></p>\n<p>继续向下分析<br>\n<img data-src=\"image-20220509170400476.png\" alt=\"image-20220509170400476\"></p>\n<p>这段函数中出现了我们还没有分析出来的 offset 4088 的内容，分析整个函数，发现是将 result 作为索引，<br>\n而且索引在刚开始的时候是 -1 ，这个特点很像堆栈 push 的操作，所以后面的 offset 为 4088 开始的 4 个字节就是一个索引，index.</p>\n<p><img data-src=\"image-20220509170835438.png\" alt=\"image-20220509170835438\"></p>\n<p>这就是我们分析之后的整个 vm 结构体，虽然中间有一部分未知，但是我们可以任意给予这块内存地址一个名称。</p>\n<p>而之前还有另一个结构体 v1，也可以按照相同的方法构造<br>\n所以最终得到该题的 vm 逆向的结构体</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">func</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>call<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  vm <span class=\"token operator\">*</span>ptr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">REG</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  _DWORD R<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">vm</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  REG reg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  _DWORD Memory<span class=\"token punctuation\">[</span><span class=\"token number\">1000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  _DWORD rip<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  _DWORD index<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  func <span class=\"token operator\">*</span>func<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  _QWORD isExit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>接着在 IDA PRO 中添加我们自己的结构体</p>\n<blockquote>\n<p>shift +F1    右键 insert</p>\n</blockquote>\n<p><strong>注意，插入新的结构体的时候，有可能需要索引的结构体还没有定义，所以需要按照交叉引用顺序创建结构体</strong><br>\n转换成我们自己的结构体之后，整个程序流程就会很清楚，然后判断每个 init_func 的作用。<br>\n<img data-src=\"image-20220509181133690.png\" alt=\"image-20220509181133690\"></p>\n<p>我们进入后面的 vm_run 函数</p>\n<p><img data-src=\"image-20220509181559677.png\" alt=\"image-20220509181559677\"></p>\n<p><strong>根据 VM_Run 可知指令长度是 3Byte，并且 0xFF4 偏移处是 eip，0x1000 偏移是 opcode，接下来是对 20 个 fun 的分析</strong></p>\n<p>知道了怎么解析指令之后，还得将指令 dump 出来<br>\n这里 dump 的时候遇到一个问题，直接使用 ida pro 自带的 shift +e 提取的时候会按照两个字节两个字节提取，但是看完 wp 之后发现好多数都不一样，所以直接写个脚本提取需要的数值</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#from idaapi import *  #在 ida pro 中使用</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>start_addr<span class=\"token operator\">=</span><span class=\"token number\">0x57D8a0</span>    <span class=\"token comment\">#需要提取的内存部分的起始位置</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin\">list</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">114</span>            <span class=\"token comment\"># 元素个数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    t<span class=\"token operator\">=</span>Dword<span class=\"token punctuation\">(</span>start_addr<span class=\"token punctuation\">)</span>   <span class=\"token comment\">#Dword 为要提取的元素的长度</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token builtin\">list</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    start_addr<span class=\"token operator\">+=</span><span class=\"token number\">4</span>           <span class=\"token comment\">#与 Dword 对应</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#得到的 list 里面有 ''，可以直接复制粘贴变成字符串然后清除所有的 ''</span></pre></td></tr></table></figure><p>dump 处操作码之后，根据指令解析编写脚本，得到真实的 opcode</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>op<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>opcode<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>f<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">if</span> op<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       f<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">.</span>fromhex<span class=\"token punctuation\">(</span><span class=\"token string\">'61336366'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    adr<span class=\"token operator\">=</span>op<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    Lnum<span class=\"token operator\">=</span>op<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    Rnum<span class=\"token operator\">=</span>op<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> adr<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: \"</span><span class=\"token operator\">%</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"nop\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">elif</span> adr<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: \"</span><span class=\"token operator\">%</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"mov r[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>Lnum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">],</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>Rnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">elif</span> adr<span class=\"token operator\">==</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: \"</span><span class=\"token operator\">%</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"mov r[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>Lnum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">],r[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>Rnum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">]\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">elif</span> adr<span class=\"token operator\">==</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: \"</span><span class=\"token operator\">%</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"push r[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>Lnum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">]\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">elif</span> adr<span class=\"token operator\">==</span><span class=\"token number\">7</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: \"</span><span class=\"token operator\">%</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"pop r[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>Lnum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">]\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">elif</span> adr<span class=\"token operator\">==</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: \"</span><span class=\"token operator\">%</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"add r[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>Lnum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">],r[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>Rnum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">]\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">elif</span> adr<span class=\"token operator\">==</span><span class=\"token number\">9</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: \"</span><span class=\"token operator\">%</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"sub r[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>Lnum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">],r[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>Rnum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">]\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">elif</span> adr<span class=\"token operator\">==</span><span class=\"token number\">10</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: \"</span><span class=\"token operator\">%</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"div r[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>Lnum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">],r[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>Rnum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">]\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">elif</span> adr<span class=\"token operator\">==</span><span class=\"token number\">11</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: \"</span><span class=\"token operator\">%</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"mul r[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>Lnum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">],r[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>Rnum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">]\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">elif</span> adr<span class=\"token operator\">==</span><span class=\"token number\">12</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: \"</span><span class=\"token operator\">%</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"xor r[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>Lnum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">],r[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>Rnum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">]\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">elif</span> adr<span class=\"token operator\">==</span><span class=\"token number\">13</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: \"</span><span class=\"token operator\">%</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"jmp r[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>Lnum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">]\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">elif</span> adr<span class=\"token operator\">==</span><span class=\"token number\">15</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: \"</span><span class=\"token operator\">%</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"cmp r[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>Lnum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">],r[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>Rnum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">] -- jnz r[19]\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">elif</span> adr<span class=\"token operator\">==</span><span class=\"token number\">0x62</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: \"</span><span class=\"token operator\">%</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"getchar(r[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>Lnum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">])\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">elif</span> adr<span class=\"token operator\">==</span><span class=\"token number\">0x63</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: \"</span><span class=\"token operator\">%</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string-interpolation\"><span class=\"token string\">f'putchar(r[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>Lnum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">)]'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">elif</span> adr<span class=\"token operator\">==</span><span class=\"token number\">0x64</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: \"</span><span class=\"token operator\">%</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"exit()\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>得到汇编指令，</p>\n<p><strong>打印字符串</strong></p>\n<blockquote>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">0xcc</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x49</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">0xcf</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">0xd2</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x2b</span>     #长度<span class=\"token number\">0x2b</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">0xd5</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">0xd8</span><span class=\"token operator\">:</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">0xdb</span><span class=\"token operator\">:</span> push r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>         #输入进栈</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">0xde</span><span class=\"token operator\">:</span> sub r<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">0xe1</span><span class=\"token operator\">:</span> cmp r<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">--</span> jnz r<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure></blockquote>\n<p><strong>4 个 byte 转为 int</strong></p>\n<blockquote>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">0xe4</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">0xe7</span><span class=\"token operator\">:</span> push r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">0xea</span><span class=\"token operator\">:</span> nop</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">0xed</span><span class=\"token operator\">:</span> nop</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">0xf0</span><span class=\"token operator\">:</span> pop r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">0xf3</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x100</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">0xf6</span><span class=\"token operator\">:</span> mul r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">0xf9</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">0xfc</span><span class=\"token operator\">:</span> pop r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">0xff</span><span class=\"token operator\">:</span> add r<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">0x102</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">0x105</span><span class=\"token operator\">:</span> mul r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">0x108</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">0x10b</span><span class=\"token operator\">:</span> pop r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">0x10e</span><span class=\"token operator\">:</span> add r<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token number\">0x111</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">0x114</span><span class=\"token operator\">:</span> mul r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token number\">0x117</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token number\">0x11a</span><span class=\"token operator\">:</span> pop r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token number\">0x11d</span><span class=\"token operator\">:</span> add r<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token number\">0x120</span><span class=\"token operator\">:</span> nop</pre></td></tr></table></figure></blockquote>\n<p><strong>TEA 加密</strong></p>\n<blockquote>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">0x3f9</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x9e3779b9</span> <span class=\"token punctuation\">;</span>delta</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">0x3fc</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x95c4c</span>    <span class=\"token punctuation\">;</span>key</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">0x3ff</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x871d</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">0x402</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x1a7b7</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">0x405</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x12c7c7</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">0x408</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">0x40b</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">0x40e</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x20</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">0x411</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x160</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">0x414</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">0x417</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x20</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">0x41a</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">0x41d</span><span class=\"token operator\">:</span> add r<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">0x420</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">0x423</span><span class=\"token operator\">:</span> mul r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token number\">0x426</span><span class=\"token operator\">:</span> add r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">0x429</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token number\">0x42c</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token number\">0x42f</span><span class=\"token operator\">:</span> add r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token number\">0x432</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token number\">0x435</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token number\">0x438</span><span class=\"token operator\">:</span> div r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token number\">0x43b</span><span class=\"token operator\">:</span> add r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token number\">0x43e</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token number\">0x441</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token number\">0x444</span><span class=\"token operator\">:</span> xor r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token number\">0x447</span><span class=\"token operator\">:</span> xor r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token number\">0x44a</span><span class=\"token operator\">:</span> add r<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token number\">0x44d</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token number\">0x450</span><span class=\"token operator\">:</span> mul r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token number\">0x453</span><span class=\"token operator\">:</span> add r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token number\">0x456</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token number\">0x459</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token number\">0x45c</span><span class=\"token operator\">:</span> add r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token number\">0x45f</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token number\">0x462</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token number\">0x465</span><span class=\"token operator\">:</span> div r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token number\">0x468</span><span class=\"token operator\">:</span> add r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token number\">0x46b</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token number\">0x46e</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token number\">0x471</span><span class=\"token operator\">:</span> xor r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token number\">0x474</span><span class=\"token operator\">:</span> xor r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token number\">0x477</span><span class=\"token operator\">:</span> add r<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token number\">0x47a</span><span class=\"token operator\">:</span> sub r<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token number\">0x47d</span><span class=\"token operator\">:</span> cmp r<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">--</span> jnz r<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token number\">0x480</span><span class=\"token operator\">:</span> jmp r<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token number\">0x483</span><span class=\"token operator\">:</span> nop</pre></td></tr></table></figure></blockquote>\n<blockquote>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>c</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">0x348</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x11c</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">0x34b</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x154</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">0x34e</span><span class=\"token operator\">:</span> jmp r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">0x351</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xe8d1d5df</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">0x354</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x183</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">0x357</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x153</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">0x35a</span><span class=\"token operator\">:</span> cmp r<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">--</span> jnz r<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">0x35d</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf5e3c114</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">0x360</span><span class=\"token operator\">:</span> cmp r<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">--</span> jnz r<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">0x363</span><span class=\"token operator\">:</span> pop r<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">0x366</span><span class=\"token operator\">:</span> pop r<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">0x369</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x127</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">0x36c</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x154</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">0x36f</span><span class=\"token operator\">:</span> jmp r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">0x372</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x228ec216</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token number\">0x375</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x183</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">0x378</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x153</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token number\">0x37b</span><span class=\"token operator\">:</span> cmp r<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">--</span> jnz r<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token number\">0x37e</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x89d45a61</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token number\">0x381</span><span class=\"token operator\">:</span> cmp r<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">--</span> jnz r<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token number\">0x384</span><span class=\"token operator\">:</span> pop r<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token number\">0x387</span><span class=\"token operator\">:</span> pop r<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token number\">0x38a</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x132</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token number\">0x38d</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x154</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token number\">0x390</span><span class=\"token operator\">:</span> jmp r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token number\">0x393</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x655b8f69</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token number\">0x396</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x183</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token number\">0x399</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x153</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token number\">0x39c</span><span class=\"token operator\">:</span> cmp r<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">--</span> jnz r<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token number\">0x39f</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x2484a07a</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token number\">0x3a2</span><span class=\"token operator\">:</span> cmp r<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">--</span> jnz r<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token number\">0x3a5</span><span class=\"token operator\">:</span> pop r<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token number\">0x3a8</span><span class=\"token operator\">:</span> pop r<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token number\">0x3ab</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x13d</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token number\">0x3ae</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x154</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token number\">0x3b1</span><span class=\"token operator\">:</span> jmp r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token number\">0x3b4</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xd9e5e7f8</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token number\">0x3b7</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x183</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token number\">0x3ba</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x153</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token number\">0x3bd</span><span class=\"token operator\">:</span> cmp r<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">--</span> jnz r<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token number\">0x3c0</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x3a441532</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token number\">0x3c3</span><span class=\"token operator\">:</span> cmp r<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">--</span> jnz r<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token number\">0x3c6</span><span class=\"token operator\">:</span> pop r<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token number\">0x3c9</span><span class=\"token operator\">:</span> pop r<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token number\">0x3cc</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x148</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token number\">0x3cf</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x154</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token number\">0x3d2</span><span class=\"token operator\">:</span> jmp r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token number\">0x3d5</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x91ab7e88</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token number\">0x3d8</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x183</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token number\">0x3db</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x153</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token number\">0x3de</span><span class=\"token operator\">:</span> cmp r<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">--</span> jnz r<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token number\">0x3e1</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x69fc64bc</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token number\">0x3e4</span><span class=\"token operator\">:</span> cmp r<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">--</span> jnz r<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token number\">0x3e7</span><span class=\"token operator\">:</span> pop r<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token number\">0x3ea</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x7d3765</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token number\">0x3ed</span><span class=\"token operator\">:</span> cmp r<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">--</span> jnz r<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token number\">0x3f0</span><span class=\"token operator\">:</span> mov r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x189</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token number\">0x3f3</span><span class=\"token operator\">:</span> jmp r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token number\">0x3f6</span><span class=\"token operator\">:</span> <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></blockquote>\n<p>tea 没有魔改，直接写脚本破解</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ut32</span> <span class=\"token expression\"><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">delta</span> <span class=\"token expression\"><span class=\"token number\">0x9E3779B9</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">Tea_Decrypt</span><span class=\"token punctuation\">(</span>ut32<span class=\"token operator\">*</span> enc<span class=\"token punctuation\">,</span> ut32<span class=\"token operator\">*</span> k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tut32 sum <span class=\"token operator\">=</span> delta <span class=\"token operator\">*</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tut32 v0 <span class=\"token operator\">=</span> enc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tut32 v1 <span class=\"token operator\">=</span> enc<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tv1 <span class=\"token operator\">-=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">+</span> sum<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tv0 <span class=\"token operator\">-=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">+</span> sum<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\tsum <span class=\"token operator\">-=</span> delta<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tenc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tenc<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tut32 m<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0xe8d1d5df</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf5e3c114</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 依次密文</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tut32 k<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0x95c4c</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x871d</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x1a7b7</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x12c7c7</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token function\">Tea_Decrypt</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%x %x\"</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">// 常规 Tea 解密</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">//VNCTF&#123;ecd63ae5-8945-4ac4-b5a5-34fc3ade81e7&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "Reverse_wp_VNCTF2022"
            ]
        },
        {
            "id": "https://0x401000nu1l.github.io/2022/05/03/DASCTF%E5%9B%9B%E6%9C%88%E9%80%86%E5%90%91%E9%83%A8%E5%88%86wp/",
            "url": "https://0x401000nu1l.github.io/2022/05/03/DASCTF%E5%9B%9B%E6%9C%88%E9%80%86%E5%90%91%E9%83%A8%E5%88%86wp/",
            "title": "DASCTF X FATE逆向部分wp",
            "date_published": "2022-05-03T08:01:26.000Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9idXVvai5jbi9tYXRjaC9tYXRjaGVzLzk1L2NoYWxsZW5nZXM=\">题目附件</span></p>\n<h4 id=\"crackmemfc逆向\"><a class=\"anchor\" href=\"#crackmemfc逆向\">#</a> Crackme (MFC 逆向)</h4>\n<p>日常查壳<br>\n<img data-src=\"image-20220503160544301.png\" alt=\"image-20220503160544301\"></p>\n<p>拖进 IDA，查找字符串 &quot;wrong&quot;，通过 xref 定位到主要函数<br>\n<img data-src=\"image-20220503160651628.png\" alt=\"image-20220503160651628\"></p>\n<p>发现大段程序为分析，直接</p>\n<p><strong>U (转换成未定义)  C (转换成代码)</strong></p>\n<p><strong>P (在函数开始处使用 P，从当前地址处解析成函数)</strong></p>\n<p>F5 进入查看反汇编</p>\n<p><img data-src=\"image-20220503161736008.png\" alt=\"image-20220503161736008\"></p>\n<p>进入加密函数查看<br>\n<img data-src=\"image-20220503161821054.png\" alt=\"image-20220503161821054\"></p>\n<p>发现是微软官方的加解密函数  <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vd2luZG93cy93aW4zMi9zZWNjcnlwdG8vYWxnLWlk\">微软官方加解密库</span><br>\n通过查询 hash 编码就能知道加密方式<br>\n<img data-src=\"image-20220503162012855.png\" alt=\"image-20220503162012855\"></p>\n<p>分析可知该函数为关键加密部分<br>\n<img data-src=\"image-20220503162137865.png\" alt=\"image-20220503162137865\"></p>\n<p>进入之后发现整个函数都是通过调用官方库实现，所以可以直接套用该加密函数稍作修改得到最后的 exp<br>\n 大概逻辑分析清楚后就需要动态调试得到<br>\n尝试在 IDA 里面动态调试，但是一直会在窗口程序调用之前弹飞，进入到 OD 里面调试也会跳飞<br>\n猜测可能有反调试技术<br>\n看过大佬视频讲解知道是<br>\n<img data-src=\"image-20220503164034914.png\" alt=\"image-20220503164034914\"></p>\n<p>但是该函数在文件 import 表里没找到，猜测是作者自己手写的，然后搜索字符串，发现了该函数<br>\n<img data-src=\"image-20220503164235030.png\" alt=\"image-20220503164235030\"></p>\n<p>也发现了能够绕过的关键代码 0x11，在此处下断点，然后运行，待程序运行到此处时，patch0x11 的值然后继续运行，查找到关键密钥。</p>\n<p>MD5key = 'D59F8E94B0E1DE6E329518A0C444AA94DE7C8D44'  ---------&gt; 'NocT'<br>\nSHA1key = 'D59F8E94B0E1DE6E329518A0C444AA94DE7C8D44'<br>\n 可以利用如下解密脚本解密</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> hashlib</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> long_to_bytes</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> string</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token string\">'D59F8E94B0E1DE6E329518A0C444AA94DE7C8D44'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> a <span class=\"token keyword\">in</span> string<span class=\"token punctuation\">.</span>ascii_letters<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">for</span> b <span class=\"token keyword\">in</span> string<span class=\"token punctuation\">.</span>ascii_letters<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> string<span class=\"token punctuation\">.</span>ascii_letters<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">for</span> d <span class=\"token keyword\">in</span> string<span class=\"token punctuation\">.</span>ascii_letters<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                m <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a<span class=\"token operator\">+</span>b<span class=\"token operator\">+</span>c<span class=\"token operator\">+</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token comment\"># r1 =hashlib.md5 (a).digest () MD5 解密</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                r2 <span class=\"token operator\">=</span> hashlib<span class=\"token punctuation\">.</span>sha1<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#SHA1 解密</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">if</span> r2<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>s<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token comment\">#return b'uRne'</span></pre></td></tr></table></figure><p>所以 key = NocTuRne<br>\n 因为原函数逻辑里面还要对整体的 keyMD5 加密再做后面的运算，所以<br>\n MD5_Org_key = '5C53A4A41D52437A9FA1E9C26CA59090'</p>\n<p>接着还需要得到真正的加密后的 flag 的密文，<br>\n<img data-src=\"image-20220503193423272.png\" alt=\"image-20220503193423272\"></p>\n<p>可以通过动调在这里得到，动调的时候得人工更改前面一个函数的跳转，以使其跳转到我们需要的函数。<br>\n得到</p>\n<p>Encrypted_flag[] ={0x5B, 0x9C, 0xEE, 0xB2, 0x3B, 0xB7, 0xD7, 0x34, 0xF3, 0x1B, 0x75, 0x14, 0xC6, 0xB2, 0x1F, 0xE8, 0xDE, 0x33, 0x44, 0x74, 0x75, 0x1B, 0x47, 0x6A, 0xD4, 0x37, 0x51, 0x88, 0xFC, 0x67, 0xE6, 0x60, 0xDA, 0x0D, 0x58, 0x07, 0x81, 0x43, 0x53, 0xEA, 0x7B, 0x52, 0x85, 0x6C, 0x86, 0x65, 0xAF, 0xB4};</p>\n<p>之后就可以写脚本直接解出 flag 了</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdbool.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windef.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;wincrypt.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>bool __stdcall <span class=\"token function\">encflag</span><span class=\"token punctuation\">(</span>BYTE <span class=\"token operator\">*</span>key<span class=\"token punctuation\">,</span> DWORD dwDataLen<span class=\"token punctuation\">,</span> BYTE <span class=\"token operator\">*</span>input<span class=\"token punctuation\">,</span> DWORD <span class=\"token operator\">*</span>pdwDataLen<span class=\"token punctuation\">,</span> DWORD dwBufLen<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    BOOL v6<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    HCRYPTKEY phKey<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    HCRYPTPROV phProv<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    HCRYPTHASH phHash<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    phProv <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    phHash <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    phKey <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    v6 <span class=\"token operator\">=</span> <span class=\"token function\">CryptAcquireContextA</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>phProv<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18u</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF0000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v6<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">// CryptGetHashParam (phHash, 2u, key, (DWORD *) v8, 0); 在加密函数中会将 hash 值写入 key->addr 的值</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        v6 <span class=\"token operator\">=</span> <span class=\"token function\">CryptCreateHash</span><span class=\"token punctuation\">(</span>phProv<span class=\"token punctuation\">,</span> <span class=\"token number\">0x8003u</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>phHash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v6<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            v6 <span class=\"token operator\">=</span> <span class=\"token function\">CryptHashData</span><span class=\"token punctuation\">(</span>phHash<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> dwDataLen<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 将 key 按 hashalg 生成 写入 key->addr</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v6<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                v6 <span class=\"token operator\">=</span> <span class=\"token function\">CryptDeriveKey</span><span class=\"token punctuation\">(</span>phProv<span class=\"token punctuation\">,</span> <span class=\"token number\">0x660Eu</span><span class=\"token punctuation\">,</span> phHash<span class=\"token punctuation\">,</span> <span class=\"token number\">1u</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>phKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token function\">CryptDecrypt</span><span class=\"token punctuation\">(</span>phKey<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">,</span> pdwDataLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                    <span class=\"token function\">putchar</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>phKey<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token function\">CryptDestroyKey</span><span class=\"token punctuation\">(</span>phKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>phHash<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token function\">CryptDestroyHash</span><span class=\"token punctuation\">(</span>phHash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>phProv<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token function\">CryptReleaseContext</span><span class=\"token punctuation\">(</span>phProv<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">return</span> v6<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    BYTE flag_data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0x5B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                        <span class=\"token number\">0xDE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x47</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x37</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                        <span class=\"token number\">0xDA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x58</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB4</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    BYTE keyBuf<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0x5c</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1d</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xe9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xc2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6c</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 就是 key 的 md5</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    DWORD dwDataLen_2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    DWORD <span class=\"token operator\">*</span>pdwDataLen <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>dwDataLen_2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token operator\">*</span>pdwDataLen <span class=\"token operator\">=</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token function\">encflag</span><span class=\"token punctuation\">(</span>keyBuf<span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> flag_data<span class=\"token punctuation\">,</span> pdwDataLen<span class=\"token punctuation\">,</span> <span class=\"token number\">0x104</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>DASCTF<ruby>H@sh_a<rp>(</rp><rt>d_Aes_6y_W1nCrypt</rt><rp>)</rp></ruby></strong></p>\n<h4 id=\"奇怪的交易\"><a class=\"anchor\" href=\"#奇怪的交易\">#</a> 奇怪的交易</h4>\n<p>日常查壳<br>\n<img data-src=\"image-20220503233108134.png\" alt=\"image-20220503233108134\"><br>\nupx 壳，直接用 upx -d 命令解壳<br>\n之后拖进 IDA<br>\n<img data-src=\"image-20220503233346670.png\" alt=\"image-20220503233346670\"></p>\n<p>发现反复出现该字符串，直接谷歌搜索</p>\n<p>发现是 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3B5aW5zdGFsbGVyL3B5aW5zdGFsbGVy\">py 文件打包</span>的工具，那就是 py 逆向，所以很可能需要我们手动解包</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>objcopy --dump-section <span class=\"token assign-left variable\">pydata</span><span class=\"token operator\">=</span>unweird.dump unweird</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#将文件包中关键的部分 dump 出来，之后进行处理 name 为要处理的文件名</span></pre></td></tr></table></figure><figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>python <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>pyinstxtractor<span class=\"token punctuation\">.</span>py <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>unweird<span class=\"token punctuation\">.</span>dump</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 将之前 dump 出的文件解包，得到一系列的 pyc 文件以及其他文件</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./pycdc  unweird.pyc</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#将 name.pyc 反汇编成 py 源代码文件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#or</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>./pycdas unweird.pyc</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#将 name.pyc 文件反编译成 opcode 形式</span></pre></td></tr></table></figure><p><img data-src=\"image-20220503234716306.png\" alt=\"image-20220503234716306\"><img data-src=\"image-20220503234724620.png\" alt=\"image-20220503234724620\"></p>\n<p>在这里贴一个看雪大佬关于 python 解包的博客<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMucGVkaXkuY29tL3RocmVhZC0yNzEyNTMuaHRtI21zZ19oZWFkZXJfaDJfMA==\"> py 文件解包以及 pyz 文件的处理</span></p>\n<p>查看反汇编得到的代码，发现已知条件不足以让我们分析题目，<img data-src=\"image-20220503235023460.png\" alt=\"image-20220503235023460\"><br>\n 并且这里的 cup 库是关键，因为后面的 encrypt 部分牵扯到 cup 库</p>\n<p><strong>所以我们要继续解包</strong><br>\n pyinstaller 有一个奇怪的地方，它会把主函数 pyc 文件的文件头进行更改，这里我们就可以用到上面那个文件夹里面一定会有的 struct.pyc 文件，这个文件的文件头一般是不会更改的，将这个文件的文件头进行复制然后更改主函数 pyc 文件头就可以了。</p>\n<p>Pyinstaller 这个库本身的打包原理大概就是先将 py 编译成 pyc，然后部分压缩成 pyz，程序再通过对 pyc 和 pyz 的调用<br>\n pyinstaller 库中找到 archieve 这么一个文件夹，里面有一个 pyz_crypto.py 文件，是对 pyz 文件的加密代码<br>\n可以看出，他是使用的 tinyAES 库对 pyc 文件进行块加密，块大小为 16byte<br>\n 我们已经根据源码知道了 pyz 加密方式和加密算法，所以根据解包后 pyc 文件提供的一系列参数，很容易就能编写出对应的解密脚本。<br>\n首先用 pyinstxtractor 工具对文件进行解包 (<strong>需软件对应相同的 python 大版本，否则无法得到 pyz 文件</strong>)，得到未被加密的部分 pyc 文件和加密的 pyz 文件，其中之一就有 archive.pyc, 我们可以通过<strong> archive.pyc 文件得到加密过程</strong>，<strong>crypto_key 文件得到具体 key 参数</strong></p>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>python<span class=\"token punctuation\">.</span>exe <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>pyinstxtractor<span class=\"token punctuation\">.</span>py <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>name<span class=\"token punctuation\">.</span>dump</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#必须使用与打包文件时使用的 python 版本对应的 python 大版本进行操作</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#得到 pyz 文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#后面就可以利用脚本将 pyz 文件转化成 pyc 文件</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/env python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> tinyaes</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> zlib</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>CRYPT_BLOCK_SIZE <span class=\"token operator\">=</span> <span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 从 crypt_key.pyc 获取 key，也可自行反编译获取</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>key <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0000000000000tea'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>inf <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cup.pyc.encrypted'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 打开加密文件</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>outf <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cup.pyc'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 输出文件</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 按加密块大小进行读取</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>iv <span class=\"token operator\">=</span> inf<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span>CRYPT_BLOCK_SIZE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>cipher <span class=\"token operator\">=</span> tinyaes<span class=\"token punctuation\">.</span>AES<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> iv<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 解密</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>plaintext <span class=\"token operator\">=</span> zlib<span class=\"token punctuation\">.</span>decompress<span class=\"token punctuation\">(</span>cipher<span class=\"token punctuation\">.</span>CTR_xcrypt_buffer<span class=\"token punctuation\">(</span>inf<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># 补 pyc 头 (最后自己补也行)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>outf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x6f\\x0d\\x0f\\x0a\\00\\00\\00\\00\\x70\\x79\\x69\\x30\\x01\\x01\\x00\\x00'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># 写入解密数据</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>outf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>plaintext<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>inf<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>outf<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>接着再 pyz 中找到 <strong>cup.pyc.encrypt</strong> 文件，这就是 cup 库文件加密生成的 pyz 文件，然后利用上面的脚本解密得到 cup.pyc.</p>\n<p>接着就可以用在线工具反编译得到 cup</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/env python</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># visit https://tool.lu/pyc/ for more information</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># Version: Python 3.10</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> libnum</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> ctypes <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">MX</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    temp1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">.</span>value <span class=\"token operator\">>></span> <span class=\"token number\">5</span> <span class=\"token operator\">^</span> y<span class=\"token punctuation\">.</span>value <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">.</span>value <span class=\"token operator\">>></span> <span class=\"token number\">3</span> <span class=\"token operator\">^</span> z<span class=\"token punctuation\">.</span>value <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    temp2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>total<span class=\"token punctuation\">.</span>value <span class=\"token operator\">^</span> y<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span>p <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span> <span class=\"token operator\">^</span> e<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> z<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> c_uint32<span class=\"token punctuation\">(</span>temp1 <span class=\"token operator\">^</span> temp2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>ᘗ<span class=\"token punctuation\">,</span> ᘖ<span class=\"token punctuation\">,</span> ᘘ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    ᘜ <span class=\"token operator\">=</span> 0x9E3779B9L</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    ᘛ <span class=\"token operator\">=</span> <span class=\"token number\">6</span> <span class=\"token operator\">+</span> <span class=\"token number\">52</span> <span class=\"token operator\">//</span> ᘗ</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    total <span class=\"token operator\">=</span> c_uint32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    ᘔ <span class=\"token operator\">=</span> c_uint32<span class=\"token punctuation\">(</span>ᘖ<span class=\"token punctuation\">[</span>ᘗ <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    ᘕ <span class=\"token operator\">=</span> c_uint32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">if</span> ᘛ <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        total<span class=\"token punctuation\">.</span>value <span class=\"token operator\">+=</span> ᘜ</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        ᘕ<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> total<span class=\"token punctuation\">.</span>value <span class=\"token operator\">>></span> <span class=\"token number\">2</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        ᘚ <span class=\"token operator\">=</span> c_uint32<span class=\"token punctuation\">(</span>ᘖ<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        ᘖ<span class=\"token punctuation\">[</span>ᘗ <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> c_uint32<span class=\"token punctuation\">(</span>ᘖ<span class=\"token punctuation\">[</span>ᘗ <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> MX<span class=\"token punctuation\">(</span>ᘔ<span class=\"token punctuation\">,</span> ᘚ<span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">,</span> ᘘ<span class=\"token punctuation\">,</span> ᘗ <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> ᘕ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        ᘔ<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> ᘖ<span class=\"token punctuation\">[</span>ᘗ <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        ᘛ <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> ᘛ <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">return</span> ᘖ</pre></td></tr></table></figure><p>发现就是一个 XXTEA, 甚至没有魔改</p>\n<p>程序逻辑是，RSA 加密和 XXTEA 加密</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdint.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">KEYLEN</span> <span class=\"token expression\"><span class=\"token number\">4</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">DELTA</span> <span class=\"token expression\"><span class=\"token number\">0x9e3779b9</span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LUN</span> <span class=\"token expression\"><span class=\"token number\">32</span></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">Encrypt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span> v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">Decrypt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span> v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MX</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>z<span class=\"token operator\">>></span><span class=\"token number\">5</span><span class=\"token operator\">^</span>y<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>y<span class=\"token operator\">>></span><span class=\"token number\">3</span><span class=\"token operator\">^</span>z<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sum<span class=\"token operator\">^</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">&amp;</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span>e<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">btea</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint32_t</span> <span class=\"token operator\">*</span>v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token class-name\">uint32_t</span> <span class=\"token keyword\">const</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token class-name\">uint32_t</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> sum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> p<span class=\"token punctuation\">,</span> rounds<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>            <span class=\"token comment\">/* Coding Part */</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        rounds <span class=\"token operator\">=</span> <span class=\"token number\">6</span> <span class=\"token operator\">+</span> <span class=\"token number\">52</span><span class=\"token operator\">/</span>n<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            sum <span class=\"token operator\">+=</span> DELTA<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">&lt;</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>p<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> MX<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> MX<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">--</span>rounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&lt;</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\">/* Decoding Part */</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        n <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>n<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        rounds <span class=\"token operator\">=</span> <span class=\"token number\">6</span> <span class=\"token operator\">+</span> <span class=\"token number\">52</span><span class=\"token operator\">/</span>n<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        sum <span class=\"token operator\">=</span> rounds<span class=\"token operator\">*</span>DELTA<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">=</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> MX<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> MX<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            sum <span class=\"token operator\">-=</span> DELTA<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">--</span>rounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre> </pre></td></tr><tr><td data-num=\"58\"></td><td><pre> </pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t<span class=\"token class-name\">uint32_t</span> v<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0xD28ED952</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1472742623</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD91BA938</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF9F3BD2D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8EF8E43D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">617653972</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1474514999</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1471783658</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1012864704</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD7821910</span><span class=\"token punctuation\">,</span> <span class=\"token number\">993855884</span><span class=\"token punctuation\">,</span> <span class=\"token number\">438456717</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC83555B7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8DFF468</span><span class=\"token punctuation\">,</span> <span class=\"token number\">198959101</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC5B84FEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD9F837C6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">613157871</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8EFA4EDD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">97286225</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B4B608C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1471645170</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC0B62792</span><span class=\"token punctuation\">,</span> <span class=\"token number\">583597118</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAAB1C22D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBDB9C266</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1384330715</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAE9F9816</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD1F40B3C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8206DDC3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC4E0BADC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE407BD26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">145643141</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8016C6A5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAF4AB9D3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">506798154</span><span class=\"token punctuation\">,</span> <span class=\"token number\">994590281</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85082A0B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCA0BC95A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA7BE567C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1105937096</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1789727804</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDFEFB591</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x93346B38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1162286478</span><span class=\"token punctuation\">,</span> <span class=\"token number\">680814033</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAEE1A7A2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80E574AE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF154F55F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2121620700</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFCBDA653</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8E902444</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCA742E12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8424071</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB4B15EC2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x943BFA09</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBC97CD93</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1285603712</span><span class=\"token punctuation\">,</span> <span class=\"token number\">798920280</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B58328F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF9822360</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD1FD15EE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1077514121</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1436444106</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA2D6C17E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1507202797</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500756149</span><span class=\"token punctuation\">,</span> <span class=\"token number\">198754565</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8E014807</span><span class=\"token punctuation\">,</span> <span class=\"token number\">880454148</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1970517398</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBFC6EE25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1161840191</span><span class=\"token punctuation\">,</span> <span class=\"token number\">560498076</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1782600856</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9D93FEBE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1285196205</span><span class=\"token punctuation\">,</span> <span class=\"token number\">788797746</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1195724574</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF2174A07</span><span class=\"token punctuation\">,</span> <span class=\"token number\">103427523</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x952BFE83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF730AC4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">617564657</span><span class=\"token punctuation\">,</span> <span class=\"token number\">978211984</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1781482121</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8379D23A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEAD737EE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE41555FB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">659557668</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x99F3B244</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1561884856</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x842C31A4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1189296962</span><span class=\"token punctuation\">,</span> <span class=\"token number\">169145316</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA5CE044C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1323893433</span><span class=\"token punctuation\">,</span> <span class=\"token number\">824667876</span><span class=\"token punctuation\">,</span> <span class=\"token number\">408202876</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE0178482</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF412BBBC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1508996065</span><span class=\"token punctuation\">,</span> <span class=\"token number\">162419237</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDE740B00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB7CB64FD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEBCADB1F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8EAE2326</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x933C216C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD7D1F649</span><span class=\"token punctuation\">,</span> <span class=\"token number\">481927014</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA448AC16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBC082807</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1261069441</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2063238535</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8474A61D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101459755</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBC5654D1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1721190841</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1078395785</span><span class=\"token punctuation\">,</span> <span class=\"token number\">176506553</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD3C5280F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1566142515</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1938949000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1499289517</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC59872F8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">829714860</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE51502A2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">952932374</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1283577465</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2045007203</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEBE6A798</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE09575CD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xADDF4157</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC4770191</span><span class=\"token punctuation\">,</span> <span class=\"token number\">482297421</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1734231412</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDAC71054</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x99807E43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA88D74B1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCB77E028</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1533519803</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEEEBC3B6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE7E680E5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">272960248</span><span class=\"token punctuation\">,</span> <span class=\"token number\">317508587</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC4B10CDC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x91776399</span><span class=\"token punctuation\">,</span> <span class=\"token number\">27470488</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1666674386</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1737927609</span><span class=\"token punctuation\">,</span> <span class=\"token number\">750987808</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8E364D8F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA0985A77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">562925334</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x837D6DC3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">[</span>KEYLEN<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">54</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">155</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t<span class=\"token function\">btea</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>n<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> p <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c%c%c%c\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t</pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token comment\">////10610336534759505889607399322387179316771488492347274741918862678692508953185876570981227584004676580623553664818853686933004290078153620168054665086468417541382824708104480882577200529822968531743002301934310349005341104696887943182074473298650903541494918266823037984054778903666406545980557074219162536057146090758158128189406073809226361445046225524917089434897957301396534515964547462425719205819342172669899546965221084098690893672595962129879041507903210851706793788311452973769358455761907303633956322972510500253009083922781934406731633755418753858930476576720874219359466503538931371444470303193503733920039</span></pre></td></tr></table></figure><p>由于 e 指数过大，拿到密文直接拉去 RSA 维纳攻击</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> libnum</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">continuedFra</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    cf <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">while</span> y<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        cf<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x <span class=\"token operator\">//</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">,</span> x <span class=\"token operator\">%</span> y</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> cf</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">gradualFra</span><span class=\"token punctuation\">(</span>cf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    numerator <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    denominator <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> cf<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\"># 这里的渐进分数分子分母要分开</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        numerator<span class=\"token punctuation\">,</span> denominator <span class=\"token operator\">=</span> denominator<span class=\"token punctuation\">,</span> x <span class=\"token operator\">*</span> denominator <span class=\"token operator\">+</span> numerator</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span> numerator<span class=\"token punctuation\">,</span> denominator</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">solve_pq</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    par <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>isqrt<span class=\"token punctuation\">(</span>b <span class=\"token operator\">*</span> b <span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a <span class=\"token operator\">*</span> c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>b <span class=\"token operator\">+</span> par<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>b <span class=\"token operator\">-</span> par<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getGradualFra</span><span class=\"token punctuation\">(</span>cf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    gf <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>cf<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        gf<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>gradualFra<span class=\"token punctuation\">(</span>cf<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">return</span> gf</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">wienerAttack</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    cf <span class=\"token operator\">=</span> continuedFra<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    gf <span class=\"token operator\">=</span> getGradualFra<span class=\"token punctuation\">(</span>cf<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">for</span> d<span class=\"token punctuation\">,</span> k <span class=\"token keyword\">in</span> gf<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">if</span> k <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">*</span> d <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> k <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">*</span> d <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> k</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        p<span class=\"token punctuation\">,</span> q <span class=\"token operator\">=</span> solve_pq<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">-</span> phi <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">if</span> p <span class=\"token operator\">*</span> q <span class=\"token operator\">==</span> n<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token keyword\">return</span> d</pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>n<span class=\"token operator\">=</span><span class=\"token number\">12702192797044914024075774649965354105344232304099465264316470282606351700311177624703682814557100043599414982439635470829841890299241342602374578366076034128412992290094164613120745611751102797279925764448133764246126488845600641524814194290745105708735258127757986238766868988676022258542038318776640732920027324986285887310132372524224961045858183153047991881042129131551711617627844146600513830709959185824512201669420128585170924683844128155435146399996585220865423125338735154727569986267948480523307784641442521735105741341230032585576300299944879647981670048377150556292280650846158185797588466680532743801893</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>e<span class=\"token operator\">=</span><span class=\"token number\">12680615221091469696163926483122992106481999501435284497098601343706982733487916553201934931961274845294041438909951977672521864927961654544622905443692482152403380984734291652023321187458458985625147422841102922314725726207365632256563373977251725785357590588556314671253970422319546403985257810950046085994573229162322957630767327089195523762665081311711474689269184996318744510300057603532953644164998953897411177604349567514705039306693117602798453972917348902600111420473965929048876821563646206875034926505783009957256212261250539005023918242209009676914632796839852778318989278092929214021282438144809708279435</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>c<span class=\"token operator\">=</span><span class=\"token number\">10610336534759505889607399322387179316771488492347274741918862678692508953185876570981227584004676580623553664818853686933004290078153620168054665086468417541382824708104480882577200529822968531743002301934310349005341104696887943182074473298650903541494918266823037984054778903666406545980557074219162536057146090758158128189406073809226361445046225524917089434897957301396534515964547462425719205819342172669899546965221084098690893672595962129879041507903210851706793788311452973769358455761907303633956322972510500253009083922781934406731633755418753858930476576720874219359466503538931371444470303193503733920039</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>d<span class=\"token operator\">=</span>wienerAttack<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>m<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>libnum<span class=\"token punctuation\">.</span>n2s<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"image-20220504000146289.png\" alt=\"image-20220504000146289\"></p>\n",
            "tags": [
                "Reverse_wp_DASCTF"
            ]
        },
        {
            "id": "https://0x401000nu1l.github.io/2022/04/30/%E8%BD%AF%E6%9E%84%E5%AD%A6%E4%B9%A0%E4%BA%8C/",
            "url": "https://0x401000nu1l.github.io/2022/04/30/%E8%BD%AF%E6%9E%84%E5%AD%A6%E4%B9%A0%E4%BA%8C/",
            "title": "软构学习二",
            "date_published": "2022-04-30T10:15:46.000Z",
            "content_html": "<h1 id=\"git学习之旅\"><a class=\"anchor\" href=\"#git学习之旅\">#</a> Git 学习之旅</h1>\n<h4 id=\"git与svn的区别\"><a class=\"anchor\" href=\"#git与svn的区别\">#</a> Git 与 SVN 的区别</h4>\n<ul>\n<li><strong>1、Git 是分布式的，SVN 不是</strong>：这是 Git 和其它非分布式的版本控制系统，例如 SVN，CVS 等，最核心的区别。</li>\n<li>**2、Git 把内容按元数据方式存储，而 SVN 是按文件：** 所有的资源控制系统都是把文件的元信息隐藏在一个类似 .svn、.cvs 等的文件夹里。</li>\n<li>**3、Git 分支和 SVN 的分支不同：** 分支在 SVN 中一点都不特别，其实它就是版本库中的另外一个目录。</li>\n<li>**4、Git 没有一个全局的版本号，而 SVN 有：** 目前为止这是跟 SVN 相比 Git 缺少的最大的一个特征。</li>\n<li>**5、Git 的内容完整性要优于 SVN：**Git 的内容存储使用的是 SHA-1 哈希算法。这能确保代码内容的完整性，确保在遇到磁盘故障和网络问题时降低对版本库的破坏。</li>\n</ul>\n<blockquote>\n<p>Git 完整命令手册地址：<span class=\"exturl\" data-url=\"aHR0cDovL2dpdC1zY20uY29tL2RvY3M=\">http://git-scm.com/docs</span></p>\n<p>PDF 版命令手册：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9tYW51YWwvZ2l0aHViLWdpdC1jaGVhdC1zaGVldC5wZGY=\">github-git-cheat-sheet.pdf</span></p>\n</blockquote>\n<p>使用 Git 前，需要先建立一个仓库 (repository)。您可以使用一个已经存在的目录作为 Git 仓库或创建一个空目录。</p>\n<p>使用当前目录作为 Git 仓库，只需使它初始化。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> init</pre></td></tr></table></figure><p>使用指定目录作为 Git 仓库。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> init newrepo</pre></td></tr></table></figure><h4 id=\"添加新文件\"><a class=\"anchor\" href=\"#添加新文件\">#</a> 添加新文件</h4>\n<p>有一个仓库，但什么也没有，可以使用 add 命令添加文件。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> <span class=\"token function\">add</span> filename</pre></td></tr></table></figure><p>可以使用 add... 继续添加任务文件。</p>\n<h4 id=\"提交版本\"><a class=\"anchor\" href=\"#提交版本\">#</a> 提交版本</h4>\n<p>将它们提交到仓库。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> commit -m <span class=\"token string\">\"Adding files\"</span></pre></td></tr></table></figure><p>如果不使用 - m，会出现编辑器来让你写自己的注释信息。</p>\n<p>当修改了很多文件，而不想每一个都 add，想 commit 自动来提交本地修改，可以使用 - a 标识。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> commit -a -m <span class=\"token string\">\"Changed some files\"</span></pre></td></tr></table></figure><p>git commit 命令的 - a 选项可将所有<strong>被修改或者已删除的且已经被 git 管理的文档</strong>提交到仓库中。</p>\n<p>注意，-a 不会造成新文件被提交，只能修改。</p>\n<h4 id=\"发布版本\"><a class=\"anchor\" href=\"#发布版本\">#</a> 发布版本</h4>\n<p>先从服务器克隆一个库并上传。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> clone ssh://example.com/~/www/project.git</pre></td></tr></table></figure><p>现在修改之后可以进行推送到服务器。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> push ssh://example.com/~/www/project.git</pre></td></tr></table></figure><h4 id=\"取回更新\"><a class=\"anchor\" href=\"#取回更新\">#</a> 取回更新</h4>\n<p>如果已经按上面的进行 push，下面命令表示，当前分支自动与唯一一个追踪分支进行合并。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> pull</pre></td></tr></table></figure><p>从非默认位置更新到指定的 url。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> pull http://git.example.com/project.git</pre></td></tr></table></figure><h4 id=\"删除\"><a class=\"anchor\" href=\"#删除\">#</a> 删除</h4>\n<p>如何想从资源库中删除文件，使用 rm。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> <span class=\"token function\">rm</span> <span class=\"token function\">file</span></pre></td></tr></table></figure><h4 id=\"分支与合并\"><a class=\"anchor\" href=\"#分支与合并\">#</a> 分支与合并</h4>\n<p>分支在本地完成，速度快。要创建一个新的分支，使用 branch 命令。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> branch <span class=\"token builtin class-name\">test</span></pre></td></tr></table></figure><p>branch 命令不会将带入分支，只是创建一个新分支。所以使用 checkout 命令来更改分支。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> checkout <span class=\"token builtin class-name\">test</span></pre></td></tr></table></figure><p>第一个分支，或主分支，被称为 &quot;master&quot;。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> checkout master</pre></td></tr></table></figure><p>对其他分支的更改不会反映在主分支上。如果想将更改提交到主分支，则需切换回 master 分支，然后使用合并。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> checkout master</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> merge <span class=\"token builtin class-name\">test</span></pre></td></tr></table></figure><p>如果想删除分支，使用 - d 标识。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> branch -d <span class=\"token builtin class-name\">test</span></pre></td></tr></table></figure>",
            "tags": [
                "软构学习"
            ]
        },
        {
            "id": "https://0x401000nu1l.github.io/2022/04/29/%E5%B7%A6%E8%BD%AC/",
            "url": "https://0x401000nu1l.github.io/2022/04/29/%E5%B7%A6%E8%BD%AC/",
            "title": "左转",
            "date_published": "2022-04-29T02:36:43.000Z",
            "content_html": "<h1 id><a class=\"anchor\" href=\"#\">#</a> </h1>\n<p>资本的复兴和脑力无产者的左转 -- 佐伊 23</p>\n<p>2020 年是一个特殊的年份，它是脑力无产者明显左转的一年（转向批评资本主义），也是体力无产者明显感受到危机的第一年。</p>\n<p>自从 1978 年以来，中国资本的发展经历了三个大的阶段，与之相伴的是，资本家的地位和劳动者的意识也经历了三个阶段。<br>\n1978-1992<br>\n 这是中国资本发展的第一个阶段。在这个阶段，资本从无到有被召唤出来，并在全国范围建立了统一的商品市场、劳动力市场和金融体系。</p>\n<p>1978 年之前，成为一个资本家去剥削工人不仅是可耻的，而且是非法的。改革开放之后，第一批资本家（最初还只是城乡个体户）就是在这样的社会环境中成长起来的。</p>\n<p>1981 年，一个问题在党内引发激烈讨论，社会主义制度下出现的私人雇工算不算剥削。争论不休之下，最后给了一个似而非的结论，雇工不超过 8 人就不算剥削，超过 8 人就是剥削。但是资本的发展是迅猛的，8 人的限制迅速就被打破。</p>\n<p>1983 年 1 月，中央对超出 8 人的雇工提出 “三不” 原则：“不宜提倡，不要公开宣传，也不要急于取缔。” 在这样暧昧不清的环境中，资本迅速发展，资本家作为一个阶级重新出现在华夏大地这片工农故土之上。</p>\n<p>资本家在发家致富的同时，并没有相应的社会地位。他们不能进人大、不能进政协、不能入党，他们甚至对自己剥削工人而积攒的家底能不能保存下来都心里没底，毕竟，在十年前我党还要没收资本家的财产。</p>\n<p>在城市中，工人阶级还有铁饭碗，而那些今天发家致富的资本家，昨天还只是返城没有工作的知情、游手好闲的二流子、以及其他形形色色被无产阶级看不上的人。对这些发了财的资本家，无产阶级在羡慕中又流露出鄙夷，“不就有两个臭钱吗，国家过两天就给你没收了。”</p>\n<p>在农村里，第一批农民工已经出现。社会主义时期的社队企业，在人民公社解体后改了个名字叫做 “乡镇企业”，这些乡镇企业被承包给各种 “能人” 开始了资本化的发展。本地农民成了乡镇企业雇工主要的产业后备军，这些农民除了从事农业生产外，还在自己所在乡镇的企业做兼职工作，他们同时从事工业和农业，显著特征就是 “离土不离乡”。</p>\n<p>国家到底会不会没收财产？是不是把资本家养肥了又宰掉？很多资本家自己心里都没底。为了给资本家安心，1987 年，总设计师曾有一次讲话，他意味深长的说，“现在我们国内人们议论雇工问题，我和好多同志谈过，犯不着在这个问题上表现我们在‘动’，可以再看几年。” 当然，为了减小阻力，总设计师又安慰那些还坚持传统的老干部说，“现在的雇工大致上只是小企业和农村已经承包的农民，雇工人数同全国一亿多职工相比，数目很小。从全局看，这只不过是小小的一点。要动也容易，但是一动就好像政策又在变了。动还是要动，因为我们不搞两极分化。但是，在什么时候动，用什么方法动，要研究。” 然而，这一研究就是数十年。</p>\n<p>1988 年，在资本发展了将近十年之后，在资本家已经成为了一个新兴的阶级之后，在农民工重新出现之后，在城市工人尚在梦中仍能分房的时候，在大学生还是天之骄子能够获得国家干部身份的时候，全国人大修宪了。私营经济终于获得了法律认可。</p>\n<p>这是两个时代转轨的衔接点，从计划到市场，从社会主义到资本体制，从劳动人民当家做主到资本家重回庙堂。</p>\n<p>在这个衔接点上，资本家除了钱更多一点之外，他还没有获得相应的地位。他不仅不能入人大政协，就连他的子女进入大学的机会也比不上工农子弟，当然，更比不上国家干部。下面这张图就是其他社会群体子女进入大学的几率与资本家群体的比值，1982 年，城市工人子女上大学的几率是资本家的 3.23 倍，农民子女上大学的几率是资本家的 2.13 倍。1990 年，城市工人工人子女上大学的几率是资本家的 10.78 倍，农民子女上大学的几率是资本家的 6.22 倍。</p>\n<p>而这一切，在 1992 年之后，彻底改变了。<br>\n1992-2008<br>\n 这是资本发展的第二个阶段。南巡拉开了这个阶段的帷幕，指明了资本发展的方向，终结了姓社姓资的讨论，为资本重新跃马扬鞭在华夏大地上纵横驰骋扫清了障碍。</p>\n<p>这个阶段有多个标志性事件，其中，1993 年底夺去 87 个女工生命的致丽大火最让人悲痛不已。这把火宣告着资本对劳工的统治重新建立起来了，自此之后数十年间，劳工只能在资本的铁蹄下卑微地活着，或者卑微地死去。</p>\n<p>低廉的工价，极度宽松的招商环境，大量受过教育的工人，完善的建基设施，以及全行业的产业链，这一切，使得中国成了资本升值的天堂。资本快速的发展着。</p>\n<p>1992 年之前的资本，除了少数红顶商人之外，多数就是个体户和农村 “能人”。1992 年之后，大量体制内人员下海，大量国企干部收购国企从管理层变为所有者。1997-1998 的私企普查，干部下海由于掌握更多社会资源，纯利润是平均数的 1.9 倍。</p>\n<p>这个阶段，大量灰色交易和违法行为出现，据戴建中估计，1989 到 1998 年间，私企偷税漏税超过 2700 亿元，大致占这些年间财政收入的 5%。</p>\n<p>老板钱更多了，地位也更稳了。2001 年七一讲话提到，私营企业主等人 “通过诚实劳动和工作，通过合法经营，为发展社会主义社会的生产力和其他事业作出了贡献。他们与工人、农民、知识分子、干部和解放军指战员团结在一起，他们也是有中国特色社会主义事业的建设者”，如果这些人 “承认党的纲领和章程、自觉为党的路线和纲领而奋斗、经过长期考验、符合党员条件”，则应该将他们 “吸收到党内来”。从这一年开始，资本家得以加入共产党，剥削者在党的组织中也合法了。老板们不仅仅能够入党，还渗入各级人大、政协参政议政。</p>\n<p>越是大资本家，越是追求政治地位，积极入党，甚至本身就是党员经商。《全国工商联上规模民营企业调研分析报告》（2000~2014 年）做过一次调查，基本情况如下表。<br>\n1、规模以上私营企业的所有者界定为大资本家。2、在中小企业主中，按照国家统计局的相关标准，将工业营业额不超过 3000 万元和其他行业不超过 1000 万元的企业拥有者界定小资本家。3、其余为中型资本家。</p>\n<p>在城市中，免费分房和福利医疗都没了，国企改制终结了工人铁饭碗的梦。在国企工人没落的同时，新生代农民工成了无产阶级的主体，特别是在我国加入 WTO 之后，农民工数量更是突飞猛进。2003-2008 年，全国外出农民工每年增长 600 万到 800 万人。这批人，不知福利分房为何物，不知免费医疗为何物，他们成长在改开的年代，工作在资本的工厂，从来都认为被剥削压迫是天经地义理所当然，这是一次重要的意义非凡的血液的替换，清洗掉了曾经的记忆，为资本进一步在意识形态上获得统治地位打下基础。</p>\n<p>在农村中，小农经济在短暂的复苏后开始出现问题，三农问题的焦虑成了上个世纪末集体的记忆。但是，农民问题在中国加入 WTO 后迅速让位，因为农村中大部分青壮年流入城市，农村以这样的方式逐步枯萎，农村问题以这样的方式渐渐淡出人们的视线。</p>\n<p>此时，资本家和工农子弟的差距终于拉开了。不论在财富上、地位上或者社会声望上。资本已经完全合法，没有人再讨论雇工几人才算剥削，剥削嘛，你不剥削，别人就剥削，剥削你是给你工作机会，你要感恩才是。2005 年后，曾有人借国企管理层肆意 MBO 之际攻击资本家，揭露他们那些见不得人的老底，要清洗他们的原罪。但是主流舆论不理不睬，甚至有学者建议豁免所有资本家的原罪，因为如果要追究，大部分资本家都有罪。</p>\n<p>资本大踏步的前进，工农再次匍匐在地，就在资本与工农的中间，一个新兴的群体出现了。这个群体是随着中国城镇化、资本全球化以及新兴互联网行业的出现而壮大的，他们以专业技术人员和管理人员为主。他们从事着法律、会计、金融、管理以及各种各样的科研技术工作。他们中的一部分人，或者是由于在部门中占据管理职能，或者是掌握了较强的技术因此具有一定的不可替代性，或者是由于身处垄断行业，能在资本剥削劳动力的体制中，比普通劳动者拥有更好的工作环境、更大的组织生产的权力，因而也能获得更高的薪酬，这批人是新兴小资产阶级（教授、高中特级教师、部门经理、部分金融从业人员、大公司工程师、部分互联网从业人员等等）。他们中的另一批人，从事着低端的技术工作或底层的管理工作，拿些微薄的仅仅比体力无产者稍多的薪水，这些人是典型的脑力无产者（外包程序员、金融行业底层人员、部门办事员、中小学老师、公司技术员等等）。</p>\n<p>在资本快速发展的时候，新兴的小资产阶级在高声欢呼。他们诅咒那个计划的时代，他们和主流一起歌颂这个冉冉兴起的盛世，他们为资本的每一次前行激动不已，肥得流油的资本总能滴下几滴油喂饱他们不大的野心。</p>\n<p>脑力无产者仍有希望上升为新兴的小资产阶级，他们和新兴小资产阶级在同一间办公室办公，在同一个餐桌吃饭，有着类似的背景，聊着相同的话题。因此，他们也具有类似的意识形态。他们崇尚竞争，相信靠自己的努力能改变命运，他们喝着老板的鸡汤、看着成功学的视频、听着马云的演讲、畅想着美好的未来。</p>\n<p>与资本在精神上以及一定程度也在利益上结盟的新兴小资产阶级，以及被新兴小资产阶级小康般生活吸引的脑力无产者，构成了知乎等新媒体上最初的用户群体。这个群体当然也在新兴的知乎等媒体上，用符合资本要求的话语回答着、讨论着各种问题。<br>\n2008 至今<br>\n这是资本发展的第三个阶段，这是资本盛极而衰的阶段。</p>\n<p>在这个阶段的初期，资产阶级变得更强大了。中国资本依靠举国体制和凯恩斯主义实现弯道超车，一举成为全球第二大经济体。而中国的垄断资本更是一举超过英德日法，成为全球第二，世界 500 强的数量从 2007 年的 30 个，飙升至 2015 年的 106 个。<br>\n资本家除了更有钱之外，还更深地进入社会管理领域。我们看第九届（1998）和第十一届（2008）全国人大代表构成，资产阶级成了除国家机关工作人员之外最大的群体。他们是由房地产商、工商业巨头、互联网贵族以及各地富豪构成的，他们是人们口中的大老板、大富豪。他们仅占人口中的极少部分，但在全国人大代表中占比 2 成左右。至于表格中的专业人士群体，是由演艺界明星、金融大佬、知名运动员、律所合伙人等所谓精英构成的，他们多数人事实上也是资本家。<br>\n九届人大构成<br>\n十一届人大构成<br>\n在这个阶段，农民作为一个阶级在快速没落。青壮年转移使得农村成了 993861 部队，即 99 重阳的老人，38 妇女的女性，61 儿童的小孩。当前农村中，纯务农或以务农为主，多曾经在外打工数年，由于年龄等原因无法继续打工才回乡务农。按《当代中国阶级阶层变动》系列报告所述，纯务农者，“他们中有 67.91% 的人曾是雇员或是工薪收入者，也就是打过工，最后才回归到农村务农，大部分是年纪大了回到农村务农。” 小农作为一个群体必然在市场经济中消亡，这是难以避免的。</p>\n<p>在这个阶段，还有两个重要的矛盾在快速发展，这对中国产生了深刻的影响。</p>\n<p>其一，中国资本的快速发展使得国内市场越来越狭窄了，过剩资本不断对外输出，2012 年之后的再一次过剩加速了资本的输出，从 2014 年起，中国成为了资本净输出国。而全世界的市场是有限的，中国输出的资本必然和英法美德意日等老牌帝国主义产生竞争，导致这些国家的垄断利润下滑，这是美国垄断资产阶级不愿意看到的。事实上，从 2012 年奥巴马亚太再平衡战略起，美国就明确了遏制中国资本的策略，这一方针在特朗普政府被公开化。</p>\n<p>其二，工人阶级自发的抗争越来越多，在抗争的推动下，他们实际工资有了一个快速增长的阶段。这个阶段大致是从 2003-2015，其中 2010 年前后增长最快。这使得资本眼中的 “成本” 越来越高，低端产业的利润越来越低。<br>\n资本主义的基本矛盾在上述两个矛盾的影响下发展得更快了，大规模的产能过剩使得中国 GDP 增长率从 2013 年开始断崖式下滑，经济进入了一个被称为 “新常态” 的时期。为了保住经济，我国分别在 2009 年和 2014 年进行了两次大规模的刺激政策，伴随着刺激政策的深化，房价终于上天。</p>\n<p>买了房的新兴小资产阶级仍然在欢呼着盛世，没有买房的小资产阶级以及广大的脑力无产者开始望房兴叹。伴随着利润的下滑，资本对他们的压榨似乎变得更重一些了，伴随着房价的上涨，资本带给他们的希望明显变得更为渺茫。</p>\n<p>2018 年以来，内外部矛盾都更多了。吃饭的时候，那些明显不关心社会话题的人，也开始谈论社会问题，有些是因为彩礼引起的，有些是因为工资引起的，有些是因为房价引起的，有些是因为被优化引起的，所有的都是因为在资本的体制下生存的压力引起的。</p>\n<p>还是这么一群人，还是在知乎等新媒体上面，曾经，他们为资本的发展鼓与呼，现在，他们开始自发地咒骂着资本。</p>\n<p>而这群人有一个全世界任何地方都不具备的特点，他们是在历史唯物主义的教育中长大的。不论他们读书的时候是否认可 “阶级”、“剥削”、“剩余价值” 这类概念及其内涵，他们都曾被广泛地灌输这类意识。当资本高速发展可以些许惠及他们的时候，他们抛弃了这些概念，当资本不再能给他们带来希望而只会无情压榨他们的时候，这些概念在他们的脑海中回归了。他们开始用 “资本家” 称呼企业家，用 “剥削” 描述企业家，用 “阶级” 审视企业家。</p>\n<p>他们中的一部分人开始左转，在网上自发地宣传着曾经在课本上学得的知识，剥削，阶级，资本家，剩余价值。他们中的一少部分人甚至开始自己花时间学习着各种课本上不曾涉及的知识，毛选，马恩选集，列宁的书，以及那些被忽视或掩盖的历史。</p>\n<p>他们开始在网上论战，论战的对象是各种纯色或杂色的小粉红，各种精神或肉体的资本家，以及广大的在他们看来尚未觉醒的劳动者，当然，还有那些用马克思主义的词句包装起来的沙文主义者。</p>\n<p>2020 年突如其来的疫情把这一切又放大了，压迫似乎又重了一点点，房价似乎还是那么高，工作似乎更加不稳定了，美好的生活显得似乎更加渺茫。</p>\n<p>而那些企业家在几十年的高速发展中培养出的傲慢和残忍，一次次刺中他们的心。“996” 是福报，商业是公益，企业家还要给自己设立节日，企业家还要提案成立两年以内的企业不用遵守劳动法。</p>\n<p>这一切都促发了知乎群体在 2020 年对资本家态度的急剧转变。</p>\n<p>然而，这个群体毕竟只是劳动者中人数较少的一部分，广大的体力无产者还没有那么强的感受，他们本来工资就低，他们本来就不指望在大城市买房，他们本来就生活在底层，他们获取信息的渠道也更有限，他们抽象思考的能力也更差一些，他们似乎还没有多大变化。</p>\n<p>但是，体力无产阶级也在变化。工资赶不上物价，“2017 年这个单间 300 块，今年这个单间 550 块”，“我下班还要打一份临工，哪有时间休息”。他们的抱怨也多起来了。不仅如此，经济下滑，很多工人回到老家，这些回到老家的工人会失去收入，经济危机在预演了。</p>\n<p>2020 年是一个特殊的年份，它是脑力无产者明显左转的一年（转向批评资本主义），也是体力无产者明显感受到危机的第一年。</p>\n<p>风暴远远还没来，但是脑力无产者的左转释放了一个明显的信号，天边已经聚起了几朵乌云，雷声也若隐若现，敏锐的人甚至能看到那划破夜空的几道微弱的闪电，历史的辩证法携着天边的风暴以不可抵挡的趋势向我们奔来，而极少数敏锐的青年已经张开双臂准备拥抱它了</p>\n<p>转载于 佐伊 23</p>\n<p>资本的复兴和脑力无产者的左转</p>\n",
            "tags": []
        },
        {
            "id": "https://0x401000nu1l.github.io/2022/04/21/CTFshow%E5%8D%B7%E7%8E%8B%E6%9D%AFwp/",
            "url": "https://0x401000nu1l.github.io/2022/04/21/CTFshow%E5%8D%B7%E7%8E%8B%E6%9D%AFwp/",
            "title": "CTFshow卷王杯wp",
            "date_published": "2022-04-20T16:07:10.000Z",
            "content_html": "<h3 id=\"ctfshow-卷王杯-wp\"><a class=\"anchor\" href=\"#ctfshow-卷王杯-wp\">#</a> <strong>CTFshow 卷王杯 wp</strong></h3>\n<h4 id=\"简单的re\"><a class=\"anchor\" href=\"#简单的re\">#</a> 简单的 re</h4>\n<p><a href=\"%5Bctf.show%5D(https://ctf.show/challenges#%E7%AE%80%E5%8D%95%E7%9A%84re-1827)\">下载附件</a></p>\n<p>下载文件查看信息， **ELF,64 位，UPX 壳 **</p>\n<p>因为用的 wsl 环境，所以直接远程动态调试手动脱壳</p>\n<h5 id=\"记录一次脱壳\"><a class=\"anchor\" href=\"#记录一次脱壳\">#</a> 记录一次脱壳</h5>\n<p>使用 wsl&amp;windows 远程调试，wsl 的 ip 地址是一直在变化的，所以每次启动 wsl 时都得查看 wsl 的 ip 地址</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ifconfig</span></pre></td></tr></table></figure><p>然后启动 ida 目录下的 linux_server64，IDA 端开启动态调试</p>\n<p>因为直接启动程序显示跳飞，所以直接在第一个函数调用处下断点</p>\n<p><img data-src=\"image-20220421100430381.png\" alt=\"image-20220421100430381\">!</p>\n<p><img data-src=\"image-20220421100803203.png\" alt=\"image-20220421100803203\"></p>\n<p>遇到循环直接跳过， 下断点然后 F9</p>\n<p><img data-src=\"image-20220421100916353.png\" alt=\"image-20220421100916353\"></p>\n<p>接着一路 F8，</p>\n<p><img data-src=\"image-20220421101114688.png\" alt=\"image-20220421101114688\"></p>\n<p>到这里 F7 步入，进入该函数之后一路 F7，就能在函数末尾看到一个比较大的跳转</p>\n<p><img data-src=\"image-20220421101210954.png\" alt=\"image-20220421101210954\"></p>\n<p>运行到此处，然后查看 R15 的值</p>\n<p><img data-src=\"image-20220421101357347.png\" alt=\"image-20220421101357347\"></p>\n<p>指向 0x400A50, 继续执行</p>\n<p><img data-src=\"image-20220421102305963.png\" alt=\"image-20220421102305963\"></p>\n<p>到这里之后 F8 步过</p>\n<p><img data-src=\"image-20220421102344660.png\" alt=\"image-20220421102344660\"></p>\n<p>接着我们发现我们到了 OEP 的地址，也是之前堆栈中的地址。找到 OEP 后，用脚本将脱壳后的文件 dump 出来</p>\n<pre><code class=\"language-idc\">#include &lt;idc.idc&gt;\n#define PT_LOAD              1\n#define PT_DYNAMIC           2\nstatic main(void)\n&#123;\n         auto ImageBase,StartImg,EndImg;\n         auto e_phoff;\n         auto e_phnum,p_offset;\n         auto i,dumpfile;\n         ImageBase=0x400000;\n         StartImg=0x400000;\n         EndImg=0x0;\n         if (Dword(ImageBase)==0x7f454c46 || Dword(ImageBase)==0x464c457f )\n  &#123;\n    if(dumpfile=fopen(&quot;G:\\\\dumpfile&quot;,&quot;wb&quot;)) //这里的地址是dump出的文件保存地址\n    &#123;\n      e_phoff=ImageBase+Qword(ImageBase+0x20);\n      Message(&quot;e_phoff = 0x%x\\n&quot;, e_phoff);\n      e_phnum=Word(ImageBase+0x38);\n      Message(&quot;e_phnum = 0x%x\\n&quot;, e_phnum);\n      for(i=0;i&lt;e_phnum;i++)\n      &#123;\n         if (Dword(e_phoff)==PT_LOAD || Dword(e_phoff)==PT_DYNAMIC)\n                         &#123; \n                                 p_offset=Qword(e_phoff+0x8);\n                                 StartImg=Qword(e_phoff+0x10);\n                                 EndImg=StartImg+Qword(e_phoff+0x28);\n                                 Message(&quot;start = 0x%x, end = 0x%x, offset = 0x%x\\n&quot;, StartImg, EndImg, p_offset);\n                                 dump(dumpfile,StartImg,EndImg,p_offset);\n                                 Message(&quot;dump segment %d ok.\\n&quot;,i);\n                         &#125;    \n         e_phoff=e_phoff+0x38;\n      &#125;\n\n      fseek(dumpfile,0x3c,0);\n      fputc(0x00,dumpfile);\n      fputc(0x00,dumpfile);\n      fputc(0x00,dumpfile);\n      fputc(0x00,dumpfile);\n\n      fseek(dumpfile,0x28,0);\n      fputc(0x00,dumpfile);\n      fputc(0x00,dumpfile);\n      fputc(0x00,dumpfile);\n      fputc(0x00,dumpfile);\n      fputc(0x00,dumpfile);\n      fputc(0x00,dumpfile);\n      fputc(0x00,dumpfile);\n      fputc(0x00,dumpfile);\n\n      fclose(dumpfile);\n        &#125;else Message(&quot;dump err.&quot;);\n &#125;\n&#125;\nstatic dump(dumpfile,startimg,endimg,offset) \n&#123;\n        auto i;\n        auto size;\n        size=endimg-startimg;\n        fseek(dumpfile,offset,0);\n        for ( i=0; i &lt; size; i=i+1 ) \n        &#123;\n        fputc(Byte(startimg+i),dumpfile);\n        &#125;\n&#125;\n</code></pre>\n<p>在 OEP 处打开脚本 dump. 生成脱壳后的原文件</p>\n<h5 id=\"解题\"><a class=\"anchor\" href=\"#解题\">#</a> 解题</h5>\n<p><img data-src=\"image-20220421103801876.png\" alt=\"image-20220421103801876\"></p>\n<p>运行之后进入 IDA，查找字符串，到达主函数</p>\n<p><img data-src=\"image-20220421104756503.png\" alt=\"image-20220421104756503\"></p>\n<p>进入加密函数 ，、</p>\n<p><img data-src=\"image-20220421104943844.png\" alt=\"image-20220421104943844\"></p>\n<p><img data-src=\"image-20220421104954374.png\" alt=\"image-20220421104954374\"></p>\n<p>可以判断后面的 V14 数组大概率是密文，后面是判断，而前面的循环就是加密过程了，进入关键加密函数，发现是明显的 TEA 加密算法，所以直接可以写逆向脚本</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> delta <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">31</span><span class=\"token punctuation\">;</span><span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        delta <span class=\"token operator\">+=</span><span class=\"token number\">0x6F361F7C</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">int</span> v14<span class=\"token punctuation\">[</span><span class=\"token number\">27</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    v14<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x507BC5BC</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x2B989A22</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x63A48F40</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2831241988</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x7451189A</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x8A3E7CCF</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x62CA9921</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xE1B5C82</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xC3965CA9</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xD6268AA1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x22AC5103</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x9ACC9D7E</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x224A7DC3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xD588C510</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xCB432BE4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xB6A13511</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x4C3513DC</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x6FCEEBC1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xA3614D20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x87C441CC</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xA1F95799</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x3E6DD14A</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x6F28852F</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x52AC745F</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x9190AC59</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  v14<span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x16DE2CFB</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v3<span class=\"token punctuation\">,</span>v4<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">111</span><span class=\"token punctuation\">,</span><span class=\"token number\">54</span><span class=\"token punctuation\">,</span><span class=\"token number\">31</span><span class=\"token punctuation\">,</span><span class=\"token number\">124</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">26</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">+=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">int</span> num<span class=\"token operator\">=</span> delta<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        v3 <span class=\"token operator\">=</span> v14<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        v4 <span class=\"token operator\">=</span> v14<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>k<span class=\"token operator\">&lt;=</span><span class=\"token number\">31</span><span class=\"token punctuation\">;</span>k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            v4 <span class=\"token operator\">-=</span><span class=\"token punctuation\">(</span>v3<span class=\"token operator\">+</span>num<span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v3<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v3<span class=\"token operator\">>></span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            v3 <span class=\"token operator\">-=</span><span class=\"token punctuation\">(</span>v4<span class=\"token operator\">+</span>num<span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v4<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v4<span class=\"token operator\">>></span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            num <span class=\"token operator\">-=</span><span class=\"token number\">0x6F361F7C</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        v14<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>v3<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        v14<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>v4<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">25</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span>v14<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token comment\">/*</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>output：ctfshow&#123;just_a_simple_re&#125;</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>*/</pre></td></tr></table></figure><p>所以最后的 flag 是</p>\n<blockquote>\n<p><strong>ctfshow{just_a_simple_re}</strong></p>\n</blockquote>\n<h4 id=\"babyoc\"><a class=\"anchor\" href=\"#babyoc\">#</a> babyOC</h4>\n<p>烷基八氮</p>\n<p>ubuntu 支持的 libgnustep-base 最高版本是 1.26，但是这个文件需要的版本是 1.28</p>\n<p>而且重要的<strong> Objective-C 使用动态运行时类型</strong>，在此基础上增加了<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTklOUQlQTIlRTUlOTAlOTElRTUlQUYlQjklRTglQjElQTElRTclQkMlOTYlRTclQTglOEIlRTglQUYlQUQlRTglQTglODA=\">面向对象编程语言</span>的特性以及<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9TbWFsbHRhbGs=\"> Smalltalk</span> 消息机制</p>\n<p>这种消息特性决定逆向 objective-c 必须通过动态调试来得知函数的作用</p>\n<p>贴一个参考的大佬博客，也是该题一血</p>\n<p>[babyOC_wp](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnRyYWNrb255b3UudG9wLzIwMjEvMDYvMjYvYTFhYWI3OGRjNDE0Lw==\">「CTFSHOW」Rev 随缘更新 (trackonyou.top)</span>)</p>\n<p>使用 IDA</p>\n<p><img data-src=\"image-20220421231237984.png\" alt></p>\n<p>发现 objc_msg_lookup 函数 频繁出现</p>\n<p><img data-src=\"image-20220421234753880.png\" alt=\"image-20220421234753880\"></p>\n<p>大意就是接收参数，返回一个函数指针，个人猜测可能就是 objective-c 特有的 Smalltalk 消息机制，通过查看函数的第二个参数就能大概知道函数的作用，但是具体实现得通过动态调试分析</p>\n<p><img data-src=\"image-20220421235323032.png\" alt=\"image-20220421235323032\"></p>\n<p>查看 init xref 进入函数</p>\n<p><img data-src=\"image-20220421235408609.png\" alt=\"image-20220421235408609\"></p>\n<p>这里就是初始化的函数（加密）</p>\n<p>有两个大循环 ，应该是分别对奇数位和偶数位运算，具体运算还是得靠动态调试</p>\n<p>而且密文也得靠动态调试得到</p>\n<p>套用大佬的 keygen</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1270</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2767</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5549</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9672</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11938</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16093</span><span class=\"token punctuation\">,</span> <span class=\"token number\">29864</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30379</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22184</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20690</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25002</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token number\">65039</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65793</span><span class=\"token punctuation\">,</span> <span class=\"token number\">97983</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100411</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67904</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88053</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28147</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18776</span><span class=\"token punctuation\">,</span> <span class=\"token number\">71764</span><span class=\"token punctuation\">,</span> <span class=\"token number\">127654</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token number\">39994</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30276</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33151</span><span class=\"token punctuation\">,</span> <span class=\"token number\">49377</span><span class=\"token punctuation\">,</span> <span class=\"token number\">62682</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128398</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32406</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>key <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x4E1</span> <span class=\"token operator\">*</span> i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span><span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span><span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> key<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>output: ctfshow&#123;babyＯｂｊＣ,你真的解出来了TQL&#125;</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>'''</pre></td></tr></table></figure><blockquote>\n<p><strong>ctfshow {babyＯｂｊＣ, 你真的解出来了 TQL}</strong></p>\n</blockquote>\n",
            "tags": [
                "Reverse_wp_ctfshow_卷王杯"
            ]
        },
        {
            "id": "https://0x401000nu1l.github.io/2022/04/20/%E8%BD%AF%E6%9E%84%E5%AD%A6%E4%B9%A0%E4%B8%80/",
            "url": "https://0x401000nu1l.github.io/2022/04/20/%E8%BD%AF%E6%9E%84%E5%AD%A6%E4%B9%A0%E4%B8%80/",
            "title": "软构学习一",
            "date_published": "2022-04-20T10:15:40.000Z",
            "content_html": "<h1 id=\"java学习以及面向对象初步\"><a class=\"anchor\" href=\"#java学习以及面向对象初步\">#</a> Java 学习以及面向对象初步</h1>\n<h3 id=\"一类和对象\"><a class=\"anchor\" href=\"#一类和对象\">#</a> 一。类和对象</h3>\n<h4 id=\"1定义\"><a class=\"anchor\" href=\"#1定义\">#</a> 1. 定义</h4>\n<p><strong>对象</strong>：对象是类的一个实例，有状态和行为，例如一条狗是一个对象，它的状态有：颜色，名字，品种；行\t\t\t为有：摇尾巴，叫，吃等</p>\n<p><strong>类</strong>：    类是一个模板，它描述一类对象的行为和状态</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Dog</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token class-name\">String</span> breed<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">String</span> colour<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>一个类可以包含一下类型变量：</p>\n<ul>\n<li><strong>局部变量</strong>：在方法、构造方法或者语句块中定义的变量被称为局部变量。变量声明和初始化都是在方法\t\t\t\t\t中，方法结束后，变量就会自动销毁。</li>\n<li><strong>成员变量</strong>：成员变量是定义在类中，方法体之外的变量。这种变量在创建对象的时候实例化。成员变量可  以被类中方法、构造方法和特定类的语句块访问。</li>\n<li><strong>类变量</strong>：类变量也声明在类中，方法体之外，但必须声明为 static 类型。</li>\n</ul>\n<h4 id=\"2构造方法\"><a class=\"anchor\" href=\"#2构造方法\">#</a> 2. 构造方法</h4>\n<p>每个类都有构造方法。如果没有显式地为类定义构造方法，Java 编译器将会为该类提供一个默认构造方法。</p>\n<p>在创建一个对象的时候，至少要调用一个构造方法。构造方法的名称必须与类同名，一个类可以有多个构造方法。</p>\n<p>下面是一个构造方法示例：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Puppy</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Puppy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Puppy</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 这个构造器仅有一个参数：name</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"3创建对象\"><a class=\"anchor\" href=\"#3创建对象\">#</a> 3. 创建对象</h4>\n<p>对象是根据类创建的。在 Java 中，使用关键字 new 来创建一个新的对象。创建对象需要以下三步：</p>\n<ul>\n<li>\n<p><strong>声明</strong>：声明一个对象，包括对象名称和对象类型。</p>\n</li>\n<li>\n<p><strong>实例化</strong>：使用关键字 new 来创建一个对象。</p>\n</li>\n<li>\n<p><strong>初始化</strong>：使用 new 创建对象时，会调用构造方法初始化对象。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Puppy</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token class-name\">Puppy</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token comment\">// 这个构造器仅有一个参数：name</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"小狗的名字是 : \"</span> <span class=\"token operator\">+</span> name <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token comment\">// 下面的语句将创建一个 Puppy 对象</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token class-name\">Puppy</span> myPuppy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Puppy</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"tommy\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 小狗的名字是: tommy</span></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"4访问实例变量与方法\"><a class=\"anchor\" href=\"#4访问实例变量与方法\">#</a> 4. 访问实例变量与方法</h4>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* 实例化对象 */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Object</span> referenceVariable <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/* 访问类中的变量 */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>referenceVariable<span class=\"token punctuation\">.</span>variableName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/* 访问类中的方法 */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>referenceVariable<span class=\"token punctuation\">.</span><span class=\"token function\">methodName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"5源文件声明规则\"><a class=\"anchor\" href=\"#5源文件声明规则\">#</a> 5. 源文件声明规则</h4>\n<ul>\n<li>一个源文件中只能有一个 public 类</li>\n<li>一个源文件可以有多个非 public 类</li>\n<li>源文件的名称应该和 public 类的类名保持一致。例如：源文件中 public 类的类名是 Employee，那么源文件应该命名为 Employee.java。</li>\n<li>如果一个类定义在某个包中，那么 package 语句应该在源文件的首行。</li>\n<li>如果源文件包含 import 语句，那么应该放在 package 语句和类定义之间。如果没有 package 语句，那么 import 语句应该在源文件中最前面。</li>\n<li>import 语句和 package 语句对源文件中定义的所有类都有效。在同一源文件中，不能给不同的类不同的包声明。</li>\n</ul>\n<p>除了上面提到的几种类型，Java 还有一些特殊的类，如：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qYXZhL2phdmEtaW5uZXItY2xhc3MuaHRtbA==\">内部类</span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qYXZhL2phdmEtYW5vbnltb3VzLWNsYXNzLmh0bWw=\">匿名类</span>。</p>\n<h3 id=\"二基本数据类型\"><a class=\"anchor\" href=\"#二基本数据类型\">#</a> 二。基本数据类型</h3>\n<p><img data-src=\"image-20220613194234134.png\" alt=\"image-20220613194234134\"></p>\n<h4 id=\"自动类型转换\"><a class=\"anchor\" href=\"#自动类型转换\">#</a> 自动类型转换</h4>\n<blockquote>\n<p>低  ------------------------------------&gt;  高</p>\n<p>byte,short,char—&gt; int —&gt; long—&gt; float —&gt; double</p>\n</blockquote>\n<p>数据类型转换必须满足如下规则</p>\n<ul>\n<li>\n<ol>\n<li>不能对 boolean 类型进行类型转换。</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>不能把对象类型转换成不相关类的对象。</li>\n</ol>\n</li>\n<li>\n<ol start=\"3\">\n<li>在把容量大的类型转换为容量小的类型时必须使用强制类型转换。</li>\n</ol>\n</li>\n<li>\n<ol start=\"4\">\n<li>转换过程中可能导致溢出或损失精度</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"三继承\"><a class=\"anchor\" href=\"#三继承\">#</a> 三。继承</h3>\n<h4 id=\"什么是继承\"><a class=\"anchor\" href=\"#什么是继承\">#</a> 什么是继承？</h4>\n<p>多个类中存在相同属性和行为时，将这些内容抽取到单独一个类中，那么多个类无需再定义这些属性和行为，只要继承那个类即可。</p>\n<p>多个类可以称为<strong>子类</strong>，单独这个类称为<strong>父类</strong>、<strong>超类</strong>或者<strong>基类</strong>。</p>\n<p>子类可以直接访问父类中的<strong>非私有</strong>的属性和行为。</p>\n<p>通过 <strong>extends</strong> 关键字让类与类之间产生继承关系。</p>\n<pre><code>class SubDemo extends Demo&#123;&#125;    //SubDemo是子类，Demo是父类\n</code></pre>\n<h4 id=\"继承有什么好处\"><a class=\"anchor\" href=\"#继承有什么好处\">#</a> 继承有什么好处？</h4>\n<ul>\n<li>提高<strong>代码的复用性</strong>。</li>\n<li>让类与类之间产生了关系，是<strong>多态的前提</strong>。</li>\n</ul>\n<h4 id=\"继承的特点\"><a class=\"anchor\" href=\"#继承的特点\">#</a> 继承的特点</h4>\n<p>1.Java 只支持单继承，不支持多继承。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 一个类只能有一个父类，不可以有多个父类。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">SubDemo</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Demo</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">//ok</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">SubDemo</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Demo1</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Demo2</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token comment\">//error</span></pre></td></tr></table></figure><p>2.Java 支持多层（重）继承 (继承体系)。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">B</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">C</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"使用继承时的注意事项\"><a class=\"anchor\" href=\"#使用继承时的注意事项\">#</a> 使用继承时的注意事项</h4>\n<ul>\n<li>如果类之间存在着：is a 的关系，就可以考虑使用继承。</li>\n<li>不要为了继承部分功能，而去使用继承。</li>\n</ul>\n<h4 id=\"super和this有什么区别\"><a class=\"anchor\" href=\"#super和this有什么区别\">#</a> super 和 this 有什么区别？</h4>\n<p>*<strong>super*<strong> 是一个关键字，代表父类的</strong>存储空间标识</strong>。(可以理解为父亲的引用)</p>\n<p>super 和 this 的用法相似。</p>\n<p>this 代表<strong>对象的引用</strong> (谁调用就代表谁)；<br>\nsuper 代表<strong>当前子类</strong>对<strong>父类</strong>的引用。</p>\n<p><strong>使用场景</strong></p>\n<ul>\n<li>当子父类出现同名成员时，可以用 super 进行区分；</li>\n<li>子类要调用父类构造函数时，可以使用 super 语句。</li>\n</ul>\n<p><strong>区别</strong></p>\n<p>1. 成员变量</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>变量    <span class=\"token operator\">--</span>    本类的</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span>变量    <span class=\"token operator\">--</span>    父类的</pre></td></tr></table></figure><p>2. 构造方法</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">this</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>    <span class=\"token operator\">--</span>    本类的</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>    <span class=\"token operator\">--</span>    父类的</pre></td></tr></table></figure><p>3. 成员方法</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>方法名<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>    <span class=\"token operator\">--</span>    本类的    </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span>方法名<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>    <span class=\"token operator\">--</span>    父类的</pre></td></tr></table></figure><p>super (); 和 this (); 都是在构造函数的第一行，不能同时出现。</p>\n<h4 id=\"方法的重写覆盖\"><a class=\"anchor\" href=\"#方法的重写覆盖\">#</a> 方法的重写（覆盖）</h4>\n<p>子类中出现与父类一模一样的方法时（除了权限修饰符，权限修饰符大于等于不包括 private，返回值类型，方法名和参数列表相同），会出现覆盖操作，也称为重写或者复写。</p>\n<p>父类私有方法，子类看不到，因此父类私有方法的重写也就无从谈起。</p>\n<p><strong>覆盖注意事项</strong>：</p>\n<ul>\n<li>覆盖时，子类方法权限一定要大于等于父类方法权限；</li>\n<li>静态只能覆盖静态。</li>\n</ul>\n<p><strong>覆盖的使用场景</strong>：</p>\n<p>当子类需要父类的功能，而功能主体子类有自己特有内容时，可以复写父类中的方法，这样，既沿袭了父类的功能，又定义了子类特有的内容。</p>\n<p><strong>方法重写和重载有什么区别</strong>？</p>\n<p>方法的重写用在子类方法与父类方法一模一样时，除权限修饰符，返回值类型，方法名和参数列表都是相同的。<br>\n重载用在同一个类中各方法方法名相同，参数列表不同（与返回值类型没有关系）的情况。</p>\n<p><strong>子父类中构造方法的用法</strong>：</p>\n<ol>\n<li>子类的初始化过程中，首先回去执行父类的初始化动作。因为子类的构造方法中默认有一个 super ()。子类要使用父类的成员变量，这个初始化，必须在子类初始化之前完成。所以，子类的初始化过程中，会先执行父类的初始化。</li>\n<li>如果父类没有无参构造方法</li>\n</ol>\n<ul>\n<li>使用 super 调用父类的带参构造。推荐方式。</li>\n<li>使用 this 调用本身的其他构造。</li>\n</ul>\n<p><strong>静态代码块、构造代码块，构造方法的执行顺序</strong>：</p>\n<p>父类静态代码块→子类静态代码块→父类构造代码块→父类构造方法→子类构造代码块→子类构造方法</p>\n<h4 id=\"final关键字\"><a class=\"anchor\" href=\"#final关键字\">#</a> final 关键字</h4>\n<p>final 是一个关键字，可以用于修饰类，成员变量，成员方法。</p>\n<p><strong>特点</strong>：</p>\n<ol>\n<li>它修饰的类不能被继承。</li>\n<li>它修饰的成员变量是一个常量。</li>\n<li>它修饰的成员方法是不能被子类重写的。</li>\n</ol>\n<p>final 修饰的常量定义一般都有书写规范，被 final 修饰的常量名称，所有字母都<strong>大写</strong>。</p>\n<p>final 修饰成员变量，必须初始化，初始化有两种</p>\n<ul>\n<li>显示初始化；</li>\n<li>构造方法初始化。<br>\n但是不能两个一起初始化</li>\n</ul>\n<p><strong>final 和 private 的区别</strong>：</p>\n<ol>\n<li>final 修饰的类可以访问；<br>\nprivate 不可以修饰外部类，但可以修饰内部类（其实把外部类私有化是没有意义的）。</li>\n<li>final 修饰的方法不可以被子类重写；<br>\nprivate 修饰的方法表面上看是可以被子类重写的，其实不可以，子类是看不到父类的私有方法的。</li>\n<li>final 修饰的变量只能在显示初始化或者构造函数初始化的时候赋值一次，以后不允许更改；<br>\nprivate 修饰的变量，也不允许直接被子类或一个包中的其它类访问或修改，但是他可以通过 set 和 get 方法对其改值和取值。</li>\n</ol>\n<h4 id=\"多态\"><a class=\"anchor\" href=\"#多态\">#</a> 多态</h4>\n<p><strong>概念</strong>：</p>\n<p>对象在不同时刻表现出来的不同状态。</p>\n<p><strong>多态的前提</strong>：</p>\n<ul>\n<li>要有继承或者实现关系。</li>\n<li>要有方法的重写。</li>\n<li>要有父类引用指向子类对象。</li>\n</ul>\n<p><strong>程序中的体现</strong>：<br>\n父类或者接口的引用指向或者接收自己的<strong>子类对象</strong>。</p>\n<p><strong>好处和作用</strong>：<br>\n多态的存在提高了程序的<strong>扩展性</strong>和后期<strong>可维护性</strong>。</p>\n<p><strong>弊端</strong>:<br>\n 父类调用的时候只能调用父类里的方法，不能调用子类的特有方法，因为你并不清楚将来会有什么样的子类继承你。</p>\n<p><strong>多态的成员特点</strong>：</p>\n<ul>\n<li><em>成员变量</em>：编译时期：看引用型变量所属的类中是否有所调用的变量；<br>\n运行时期：也是看引用型变量所属的类是否有调用的变量。<br>\n成员变量无论编译还是运行都看引用型变量所属的类，简单记<strong>成员变量，编译和运行都看等号左边</strong>。</li>\n<li><em>成员方法</em>：编译时期：要查看引用变量所属的类中是否有所调用的成员；<br>\n运行时期：要查看对象所属的类中是否有所调用的成员。如果父子出现同名的方法，会运行子类中的方法，因为方法有覆盖的特性。<br>\n<strong>编译看左边运行看右边</strong>。</li>\n<li><em>静态方法</em>：编译时期：看的引用型变量所属的类中是否有所调用的变量；<br>\n运行时期：也是看引用型变量所属的类是否有调用的变量。<br>\n<strong>编译和运行都看等号左边</strong>。</li>\n</ul>\n<p>*<strong> 一定不能够将父类的对象转换成子类类型！*</strong></p>\n<p>父类的引用指向子类对象，该引用可以被提升，也可以被 *<strong> 强制转换 *</strong>。</p>\n<p>*<strong> 多态自始至终都是子类对象在变化！*</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 多态向下转型和向上转型的例子，多态转型解决了多态中父类引用不能使用子类特有成员的弊端。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">PolymorphicTest2</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">Phone</span> p1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Nokia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 向上转型，类型提升</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">Nokia</span> no <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Nokia</span><span class=\"token punctuation\">)</span>p1<span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 向下转型，强制将父类的引用转换成子类类型，不能将 Nokia 类型转成 Moto 或 Nexus 类型</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        no<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                    <span class=\"token comment\">// 输出结果为 Phone---null---0，因为继承了父类的方法</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">Phone</span> p2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Moto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">Moto</span> m <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Moto</span><span class=\"token punctuation\">)</span>p2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        m<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                    <span class=\"token comment\">// 输出结果为 Moto---yellow---1599，方法重写，子类方法覆盖父类方法</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">Phone</span> p3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Nexus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">Nexus</span> ne <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Nexus</span><span class=\"token punctuation\">)</span>p3<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        ne<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Phone</span><span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token class-name\">String</span> color<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">int</span> price<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Phone---\"</span> <span class=\"token operator\">+</span> color <span class=\"token operator\">+</span> <span class=\"token string\">\"---\"</span> <span class=\"token operator\">+</span> price <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>    </pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Nokia</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Phone</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token class-name\">String</span> color <span class=\"token operator\">=</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">int</span> price <span class=\"token operator\">=</span> <span class=\"token number\">1009</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\">//public void print()&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\">//    System.out.println(\"Nokia---\" + color + \"---\" + price);</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\">//&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Moto</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Phone</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token class-name\">String</span> color <span class=\"token operator\">=</span> <span class=\"token string\">\"yellow\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">int</span> price <span class=\"token operator\">=</span> <span class=\"token number\">1599</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Moto---\"</span> <span class=\"token operator\">+</span> color <span class=\"token operator\">+</span> <span class=\"token string\">\"---\"</span> <span class=\"token operator\">+</span> price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Nexus</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Phone</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token class-name\">String</span> color <span class=\"token operator\">=</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">int</span> price <span class=\"token operator\">=</span> <span class=\"token number\">1999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Nexus---\"</span> <span class=\"token operator\">+</span> color <span class=\"token operator\">+</span> <span class=\"token string\">\"---\"</span> <span class=\"token operator\">+</span> price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"抽象abstract\"><a class=\"anchor\" href=\"#抽象abstract\">#</a> 抽象（abstract）</h4>\n<p>抽象就是从多个事物中将共性的，本质的内容抽象出来。</p>\n<p><strong>抽象类</strong>：</p>\n<p>Java 中可以定义<em>没有方法体</em>的方法，该方法的具体实现由<em>子类</em>完成，该方法称为抽象方法，包含抽象方法的类就是抽象类。</p>\n<p><strong>由来</strong>：</p>\n<p>多个对象都具备相同的功能，但是功能具体内容有所不同，那么在抽取过程中，只抽取了功能定义，并未抽取功能主体，那么只有功能声明，没有功能主体的方法称为抽象方法。</p>\n<p><strong>抽象类特点</strong>：</p>\n<ol>\n<li>抽象方法一定在抽象类中；</li>\n<li>抽象方法和抽象类都必须被 abstract 关键字修饰；</li>\n<li>抽象类不可以用 new 创建对象，因为调用抽象方法没意义；</li>\n<li>抽象类中的抽象方法要被使用，必须由子类复写其所有的抽象方法后，建立子类对象调用； 如果子类只覆盖了部分的抽象方法，那么该子类还是一个抽象类；</li>\n<li>抽象类中可以有抽象方法，也可以有非抽象方法，抽象方法用于子类实例化；</li>\n<li>如果一个类是抽象类，那么，继承它的子类，要么是抽象类，要么重写所有抽象方法。<br>\n特殊：抽象类中可以不定义抽象方法，这样做仅仅是不让该类建立对象。</li>\n</ol>\n<p><strong>抽象类的成员特点</strong>：</p>\n<ul>\n<li>成员变量：可以是变量，也可以是常量；</li>\n<li>构造方法：有构造方法；</li>\n<li>成员方法：可以是抽象方法，也可以是非抽象方法。</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> 葵花宝典 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">void</span> 自宫<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> 岳不群 <span class=\"token keyword\">extends</span> 葵花宝典 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> 自宫<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"剪刀\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">class</span> 林平之 <span class=\"token keyword\">extends</span> 葵花宝典<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> 自宫<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"指甲刀\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">AbstractTest</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        岳不群 岳 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> 岳不群<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        岳<span class=\"token punctuation\">.</span>自宫<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        林平之 林 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> 林平之<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        林<span class=\"token punctuation\">.</span>自宫<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>抽象类注意事项</strong>：</p>\n<p><em>抽象类不能被实例化，为什么还有构造函数</em>？</p>\n<p>只要是 class 定义的类里面就肯定有构造函数。抽象类中的函数是给子类实例化的。</p>\n<p><em>一个类没有抽象方法，为什么定义为抽象类</em>？</p>\n<p>不想被继承，还不想被实例化。</p>\n<p><em>抽象关键字 abstract 不可以和哪些关键字共存</em>？</p>\n<ul>\n<li>final：如果方法被抽象，就需要被覆盖，而 final 是不可以被覆盖，所以冲突。</li>\n<li>private：如果函数被私有了，子类无法直接访问，怎么覆盖呢？</li>\n<li>static：不需要对象，类名就可以调用抽象方法。而调用抽象方法没有意义。</li>\n</ul>\n<p><strong>接口（interface）</strong></p>\n<p><em>接口</em>是<em>抽象方法</em>和<em>常量值</em>的集合。从本质上讲，接口是一种特殊的抽象类，这种抽象类只包含常量和方法的定义，而没有变量和方法的实现。</p>\n<p>格式：<em>interface 接口名 {}</em></p>\n<p>接口的出现将 &quot;多继承&quot; 通过另一种形式体现出来，即 &quot;多实现&quot;。</p>\n<p><strong>实现（implements）</strong></p>\n<p>格式：<em>class 类名 implements 接口名 {}</em></p>\n<p><strong>特点</strong>：</p>\n<ul>\n<li>接口不能被实例化。</li>\n<li>一个类如果实现了接口，要么是抽象类，要么实现接口中的所有方法。</li>\n</ul>\n<p><strong>接口的成员特点</strong>：</p>\n<p><em>接口中的成员修饰符是固定的！</em></p>\n<ul>\n<li>成员常量：public static final，接口里定义的变量是全局常量，而且修饰符只能是这三个关键字，都可以省略，常量名要大写。</li>\n<li>成员方法：public abstract，接口里定义的方法都是抽象的，两个修饰符关键字可省略。</li>\n<li>推荐：永远手动给出修饰符。</li>\n</ul>\n<p><strong>继承与实现的区别</strong>：</p>\n<ul>\n<li>类与类之间称为继承关系：因为该类无论是抽象的还是非抽象的，它的内部都可以定义非抽象方法，这个方法可以直接被子类使用，子类继承即可。只能单继承，可以多层继承。（<strong>(class)</strong>）</li>\n<li>类与接口之间是实现关系：因为接口中的方法都是抽象的，必须由子类实现才可以实例化。可以单实现，也可以多实现；还可以在继承一个类的同时实现多个接口。（<strong>(class) extends (class) implements (interface1,interface2…)</strong>）</li>\n<li>接口与接口之间是继承关系：一个接口可以继承另一个接口，并添加新的属性和抽象方法，并且接口可以多继承。（<strong>(interface) extends (interface1,interface2…)</strong>）</li>\n</ul>\n<p><strong>抽象类和接口的区别</strong>：</p>\n<p><em>成员变量</em></p>\n<ul>\n<li>抽象类能有变量也可以有常量</li>\n<li>接口只能有常量</li>\n</ul>\n<p><em>成员方法</em></p>\n<ul>\n<li>抽象类可以有非抽象的方法，也可以有抽象的方法</li>\n<li>接口只能有抽象的方法</li>\n</ul>\n<p><em>构造方法</em></p>\n<p>- 抽象类有构造方法<br>\n - 接口没有构造方法</p>\n<p><em>类与抽象类和接口的关系</em></p>\n<ul>\n<li>类与抽象类的关系是继承 extends</li>\n<li>类与接口的关系是实现 implements</li>\n</ul>\n<p><strong>接口的思想特点</strong>：</p>\n<ol>\n<li>接口是<em>对外暴露</em>的规则；</li>\n<li>接口是程序的<em>功能扩展</em>；</li>\n<li>接口的出现<em>降低耦合性</em>；(实现了模块化开发，定义好规则，每个人实现自己的模块，大大提高了开发效率)</li>\n<li>接口可以用来<em>多实现</em>；</li>\n<li><em>多个</em>无关的类可以实现同一个接口；</li>\n<li>一个类可以实现<em>多个</em>相互直接没有关系的接口；</li>\n<li>与继承关系类似，接口与实现类之间存在<em>多态性</em>。</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 运动员和教练的案例（下图是思路分析）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    篮球运动员和教练</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    乒乓球运动员和教练</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    现在篮球运动员和教练要出国访问，需要学习英语</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    请根据你所学的知识，分析出来哪些是类，哪些是抽象类，哪些是接口</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>*/</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">interface</span> <span class=\"token class-name\">SpeakEnglish</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">void</span> <span class=\"token function\">speak</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">interface</span> <span class=\"token class-name\">GoAboard</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">void</span> <span class=\"token function\">aboard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setAge</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">return</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token comment\">// 吃饭</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">void</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token comment\">// 睡觉</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Zzz...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token comment\">// 运动员</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Player</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">void</span> <span class=\"token function\">study</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\">// 教练</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Coach</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">void</span> <span class=\"token function\">teach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token comment\">// 篮球运动员</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">BasketballPlayer</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Player</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">SpeakEnglish</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">GoAboard</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"岁的\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"吃鸡腿\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">study</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"岁的\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"学扣篮\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">speak</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"岁的\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" Say Hello World\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">aboard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"岁的\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" Go Aboard\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token comment\">// 乒乓运动员</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">PingPangPlayer</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Player</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"岁的\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"吃鸡蛋\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">study</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"岁的\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"学扣球\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token comment\">// 篮球教练</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">BasketballCoach</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Coach</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">SpeakEnglish</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"岁的\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"啃鸡爪\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">teach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"岁的\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"教扣篮\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">speak</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"岁的\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" Say Hello Java\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">aboard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"岁的\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" Go Aboard\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre><span class=\"token comment\">// 乒乓球教练</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">PingPangCoach</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Coach</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"岁的\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"吃鸡蛋皮\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">teach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"岁的\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"教扣球\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">PlayerAndCoach</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        <span class=\"token comment\">// 篮球运动员</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        <span class=\"token class-name\">BasketballPlayer</span> bp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BasketballPlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>        bp<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"郭艾伦\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        bp<span class=\"token punctuation\">.</span><span class=\"token function\">setAge</span><span class=\"token punctuation\">(</span><span class=\"token number\">33</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        bp<span class=\"token punctuation\">.</span><span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        bp<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>        bp<span class=\"token punctuation\">.</span><span class=\"token function\">study</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>        bp<span class=\"token punctuation\">.</span><span class=\"token function\">speak</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        bp<span class=\"token punctuation\">.</span><span class=\"token function\">aboard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"***********************\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>        <span class=\"token comment\">// 篮球教练</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>        <span class=\"token class-name\">BasketballCoach</span> bc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BasketballCoach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>        bc<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"波波维奇\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>        bc<span class=\"token punctuation\">.</span><span class=\"token function\">setAge</span><span class=\"token punctuation\">(</span><span class=\"token number\">65</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>        bc<span class=\"token punctuation\">.</span><span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>        bc<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>        bc<span class=\"token punctuation\">.</span><span class=\"token function\">teach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>        bc<span class=\"token punctuation\">.</span><span class=\"token function\">speak</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>        bc<span class=\"token punctuation\">.</span><span class=\"token function\">aboard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"***********************\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>        <span class=\"token comment\">// 多态</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>        <span class=\"token class-name\">Person</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BasketballPlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>        p<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Kobe Bryant\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>        p<span class=\"token punctuation\">.</span><span class=\"token function\">setAge</span><span class=\"token punctuation\">(</span><span class=\"token number\">33</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>        p<span class=\"token punctuation\">.</span><span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>        p<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>        <span class=\"token comment\">//p.study();</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>        <span class=\"token comment\">//p.speak();</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>        <span class=\"token class-name\">BasketballPlayer</span> bp2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">BasketballPlayer</span><span class=\"token punctuation\">)</span>p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>        bp2<span class=\"token punctuation\">.</span><span class=\"token function\">study</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>        bp2<span class=\"token punctuation\">.</span><span class=\"token function\">speak</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>        bp2<span class=\"token punctuation\">.</span><span class=\"token function\">aboard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"***********************\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"内部类\"><a class=\"anchor\" href=\"#内部类\">#</a> 内部类</h4>\n<p>将一个类定义在另一个类里面，里面的那个类就称为内部类。内部类的出现，再次打破了 Java 单继承的局限性。</p>\n<p><strong>访问特点</strong>：</p>\n<ul>\n<li>内部类可以直接访问外部类的成员，包括私有成员。</li>\n<li>外部类要访问内部类的成员，必须要建立内部类的对象。<br>\n<strong>内部类分类及共性</strong>：</li>\n</ul>\n<p><em>共性</em>：</p>\n<ul>\n<li>内部类仍然是一个独立的类，在编译之后会内部类会被编译成独立的.class 文件，但是前面冠以外部类的类名和 $ 符号。</li>\n<li>内部类不能用普通的方式访问。内部类是外部类的一个成员，因此内部类可以自由地访问外部类的成员变量，无论是否是 private 的。</li>\n</ul>\n<p><em>成员内部类</em></p>\n<p>在外部类中有成员变量和成员方法，成员内部类就是把整个一个类作为了外部类的成员；<br>\n成员内部类是定义在<strong>类中方法外</strong>的类；<br>\n创建对象的格式为：*<strong> 外部类名。内部类名 对象名 = 外部类对象。内部类对象</strong>；<br>\n成员内部类之所以可以直接访问外部类的成员，那是因为内部类中都持有一个外部类对象的引用：<strong>外部类名.this</strong>；<br>\n成员内部类可以用的修饰符有 final，abstract，public，private，protected，static.</p>\n<p><em>静态内部类</em></p>\n<p>静态内部类就是成员内部类加上静态修饰符 static，定义<strong>在类中方法外</strong>。</p>\n<p>在外部类中访问静态内部类有两种场景：</p>\n<ul>\n<li>在外部类中访问静态内部类中非静态成员：<em><strong>外部类名。内部类名 对象名 = 外部类名。内部对</strong>象</em>，需要通过创建对象访问；</li>\n<li>在外部类中访问静态内部类中的静态成员：同样可以使用上面的格式进行访问，也可以直接使用<strong>外部类名。内部类名。成员</strong>。</li>\n</ul>\n<p>局部内部类</p>\n<p>局部内部类是定义在方法中的类。</p>\n<ul>\n<li>方法内部类只能在定义该内部类的<strong>方法内</strong>实例化，不可以在此方法外对其实例化。</li>\n<li>方法内部类对象不能使用该内部类所在方法的非 final 局部变量。</li>\n</ul>\n<p>可以用于方法内部类的修饰符有<em> final，abstract</em>；</p>\n<p>静态方法中的方法内部类只能访问<strong>外部的静态成员</strong>。</p>\n<p><em>匿名内部类</em></p>\n<p>匿名内部类是内部类的简化写法，是建立一个带内容的外部类或者接口的子类匿名对象。<br>\n前提：<br>\n内部类可以继承或实现一个外部类或者接口。<br>\n格式：<br>\nnew 外部类名或者接口名 (){重写方法};<br>\n 通常在方法的形式参数是接口或者抽象类，并且该接口中的方法不超过三个时，可以将匿名内部类作为参数传递。</p>\n<h4 id=\"不同修饰符修饰的内容和内部类无关\"><a class=\"anchor\" href=\"#不同修饰符修饰的内容和内部类无关\">#</a> 不同修饰符修饰的内容 (和内部类无关)</h4>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>类</th>\n<th>成员变量</th>\n<th>成员方法</th>\n<th>构造方法</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>private</td>\n<td></td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr>\n<td>默认</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr>\n<td>protected</td>\n<td></td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr>\n<td>public</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr>\n<td>abstract</td>\n<td>Y</td>\n<td></td>\n<td>Y</td>\n<td></td>\n</tr>\n<tr>\n<td>static</td>\n<td></td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr>\n<td>final</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>注意，常见规则如下：</p>\n<ul>\n<li>以后，所有的类都用 public 修饰。并且，在一个 java 文件中，只写一个类。</li>\n<li>以后，所有的成员变量用 private 修饰。</li>\n<li>以后，所有的成员方法用 public 修饰。<br>\n如果是抽象类或者接口：public abstract + …</li>\n<li>以后，所有的构造方法用 public 修饰。<br>\n如果类是工具类或者单例类：构造用 private 修饰</li>\n</ul>\n<h4 id=\"四种权限修饰符\"><a class=\"anchor\" href=\"#四种权限修饰符\">#</a> 四种权限修饰符</h4>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>本类</th>\n<th>同包（无关类或子类）</th>\n<th>不同包（子类）</th>\n<th>不同包（无关类）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>private</td>\n<td>Y</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>默认</td>\n<td>Y</td>\n<td>Y</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>protected</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n<td></td>\n</tr>\n<tr>\n<td>public</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n</tbody>\n</table>\n<p>推荐：</p>\n<ul>\n<li>成员变量 private</li>\n<li>构造方法 public</li>\n<li>成员方法 public</li>\n</ul>\n",
            "tags": [
                "软件构造"
            ]
        },
        {
            "id": "https://0x401000nu1l.github.io/2022/04/20/starCTF%E9%80%86%E5%90%91wp/",
            "url": "https://0x401000nu1l.github.io/2022/04/20/starCTF%E9%80%86%E5%90%91wp/",
            "title": "starCTF逆向wp",
            "date_published": "2022-04-20T07:43:59.000Z",
            "content_html": "<h2 id=\"starctf-reverse-wirteup\"><a class=\"anchor\" href=\"#starctf-reverse-wirteup\">#</a> StarCTF Reverse wirteup</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHdvcmxkLnhjdGYub3JnLmNuL21hdGNoL2NvbnRlc3RfY2hhbGxlbmdlP2V2ZW50PTE4NCZhbXA7aGFzaD0zM2QxZWM5MS02YzFkLTRjMzMtOWZmMi01NThjODAyY2VkOTIuZXZlbnQ=\">赛题 - *CTF (xctf.org.cn)</span></p>\n<h4 id=\"simple-file-system\"><a class=\"anchor\" href=\"#simple-file-system\">#</a> Simple File System</h4>\n<p>观察压缩包各文件</p>\n<p><img data-src=\"image-20220420155056064.png\" alt=\"image-20220420155056064\"></p>\n<p>按照 instruction.txt 文件描述打开文件</p>\n<p><img data-src=\"image-20220420155341226.png\" alt=\"image-20220420155341226\"></p>\n<p>直接拖到 IDA 里面打开通过查找字符串进入主要函数</p>\n<p><img data-src=\"image-20220420160044266.png\" alt=\"image-20220420160044266\"></p>\n<p>找到关键词 &quot;plantflag&quot;, 之后进入 key_func 函数</p>\n<p><img data-src=\"image-20220420160244006.png\" alt=\"image-20220420160244006\"></p>\n<p>进入 get_flag 函数</p>\n<p><img data-src=\"image-20220420160323840.png\" alt=\"image-20220420160323840\"></p>\n<p>经典的加密函数，但是 v4 的值未知，而且密文也是未知，所以在这里采用动态调试获取</p>\n<p><img data-src=\"image-20220420162015950.png\" alt=\"image-20220420162015950\"></p>\n<p>运行之后查看 V5 的值发现是 flag 的格式，所以判定是将读入的值一步步加密，但是最后的密文在哪里呢，附件压缩包中有两个额外文件，打开查看</p>\n<p><img data-src=\"image-20220420164207583.png\" alt=\"image-20220420164207583\"></p>\n<p>其中一个文件是规定 flag 格式，另一个中有很多字段，继续动态调试执行加密步骤</p>\n<p><img data-src=\"image-20220420164325335.png\" alt=\"image-20220420164325335\"></p>\n<p>这是 V4 的值</p>\n<p><img data-src=\"image-20220420165155556.png\" alt=\"image-20220420165155556\"></p>\n<p>这是加密前几次后出现的前几位密文猜测密文应该是保存在 image.flag 文件中，所以直接在 image.flag 中查找</p>\n<p><img data-src=\"image-20220420165350483.png\" alt=\"image-20220420165350483\"></p>\n<p>果然查到了密文，将密文剪切出来然后写脚本逆向解密</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">decode2</span><span class=\"token punctuation\">(</span>flags<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    flag <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flags<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        v5 <span class=\"token operator\">=</span> flags<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        v5 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v5<span class=\"token operator\">>></span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">|</span><span class=\"token punctuation\">(</span>v5<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span><span class=\"token number\">0xff</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        v5 <span class=\"token operator\">^</span><span class=\"token operator\">=</span> <span class=\"token number\">0xDE</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        v5 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v5<span class=\"token operator\">>></span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">|</span><span class=\"token punctuation\">(</span>v5<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        v5 <span class=\"token operator\">^</span><span class=\"token operator\">=</span> <span class=\"token number\">0xED</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        v5 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v5<span class=\"token operator\">>></span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">|</span><span class=\"token punctuation\">(</span>v5<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span><span class=\"token number\">0xff</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        v5 <span class=\"token operator\">^</span><span class=\"token operator\">=</span><span class=\"token number\">0xBE</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        v5 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v5<span class=\"token operator\">>></span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token operator\">|</span><span class=\"token punctuation\">(</span>v5<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span><span class=\"token number\">0xff</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        v5 <span class=\"token operator\">^</span><span class=\"token operator\">=</span><span class=\"token number\">0xEF</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        v5 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v5<span class=\"token operator\">>></span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token operator\">|</span><span class=\"token punctuation\">(</span>v5<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span><span class=\"token number\">0xff</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        flag <span class=\"token operator\">+=</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>v5<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> flag</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>flag1 <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'C:\\\\Users\\\\Ikhan\\\\desktop\\\\image.flag'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>decode2<span class=\"token punctuation\">(</span>flag1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>*CTF&#123;Gwed9VQpM4Lanf0kEj1oFJR6&#125;</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>'''</pre></td></tr></table></figure><p>得到最后的 flag</p>\n<blockquote>\n<p>*<strong>CTF{Gwed9VQpM4Lanf0kEj1oFJR6}</strong></p>\n</blockquote>\n<h4 id=\"nacl\"><a class=\"anchor\" href=\"#nacl\">#</a> NaCl</h4>\n<p>进入 IDA</p>\n<p><img data-src=\"image-20220428204720717.png\" alt=\"image-20220428204720717\"></p>\n<p>条理很清楚，进入 encode () 函数</p>\n<p><img data-src=\"image-20220428204816137.png\" alt=\"image-20220428204816137\"></p>\n<p>逻辑太混乱了，准备动态调试看看，在 encode () 前面打断点，然后进入</p>\n<p><img data-src=\"image-20220428205208913.png\" alt=\"image-20220428205208913\"></p>\n<p><img data-src=\"image-20220428205226813.png\" alt=\"image-20220428205226813\"></p>\n<p>前后发现很反常的事情，不断地对 R15 寄存器进行运算，继续往下看，连续 jmp 了几个地址之后</p>\n<p><img data-src=\"image-20220428205430701.png\" alt=\"image-20220428205430701\"></p>\n<p>发现是出现了 jmp rdi 的操作<br>\n<strong> IDA 反汇编遇到 jmp  寄存器 这样的指令可能无法准确地反汇编</strong><br>\n btw，网上看了几位大佬的 wp 发现大佬们没去花指令的时候这一步 F5 不了，但是我没去花指令的情况下仍然是给 F5 出来了，但是有点逻辑混乱，可能是因为我的 IDA 版本更高点</p>\n<p>继续看关注 R15 寄存器，在 encode () 函数刚开始时执行了<br>\n<strong> sub   R15,28h</strong><br>\n 紧接着后面跳转的时候又拓展了 R15 附近的区域，将下面要跳转的函数执行完需要执行的地址放入 R15 附近的内存，并且跳转之后<br>\n **jmp rdi **<br>\n 这里 rdi 的取值是从 R15 附近取出来然后再赋给 RDI</p>\n<p><strong>所以，这里的 R15 充当的就是栈指针寄存器的作用，与此同时，前面不断地 jmp   地址</strong><br>\n<strong>就相当于 call，而后面的  jmp rdi 就相当于 retn</strong><br>\n 这个也算是一种花指令，现在写脚本 patch 源程序。<br>\n参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kMW5uM3IuZ2l0aHViLmlvLzIwMTkvMDYvMTAvSURBUHl0aG9uLw==\">大佬整理的 IDAPython 常用函数</span></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>start <span class=\"token operator\">=</span> <span class=\"token number\">0x807FEC0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>end <span class=\"token operator\">=</span> <span class=\"token number\">0x8080AD1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>address <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>callTarget <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"lea\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"lea\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mov\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"jmp\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>retnTarget <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"lea\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mov\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"and\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"lea\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"jmp\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">nop</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">&lt;</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\tpatch_byte<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\ts <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">turnCall</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token comment\"># nop 掉 call 之前的值</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tnop<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tpatch_byte<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token comment\"># 把后面的花指令去掉 重新计算去花长度</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\thuaStart <span class=\"token operator\">=</span> next_head<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\thuaEnd <span class=\"token operator\">=</span> h</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tnop<span class=\"token punctuation\">(</span>huaStart<span class=\"token punctuation\">,</span> huaEnd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">turnRetn</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tnop<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token comment\"># 注意原来是 jmp xxx</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token comment\"># 所以前面 nop 掉一个 后面改成 retn</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tpatch_byte<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tpatch_byte<span class=\"token punctuation\">(</span>e <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>p <span class=\"token operator\">=</span> start</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">while</span> p <span class=\"token operator\">&lt;</span> end<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\taddress<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> p</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\taddress<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> next_head<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\taddress<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> next_head<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\taddress<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> next_head<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\taddress<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> next_head<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> print_insn_mnem<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> callTarget<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\tturnCall<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> get_operand_value<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\tp <span class=\"token operator\">=</span> next_head<span class=\"token punctuation\">(</span>next_head<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> print_insn_mnem<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> retnTarget<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\tturnRetn<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\tp <span class=\"token operator\">=</span> next_head<span class=\"token punctuation\">(</span>next_head<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t<span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tp <span class=\"token operator\">=</span> next_head<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>patch 之后保存修改后的文件，继续用 IDA 打开。<br>\n<img data-src=\"image-20220428211527538.png\" alt=\"image-20220428211527538\"></p>\n<p>进入 encode () 函数之后，继续创建一个结构体让程序更清楚一点，</p>\n<p><img data-src=\"image-20220428215634541.png\" alt=\"image-20220428215634541\"></p>\n<p>进入主要函数 <strong>sub_8080100</strong>, 继续创建结构体 (自创结构体)<br>\n 发现一共结构体一共 48 个字节，就可以看做是 12 个 int 或者 6 个 long，这里创建 12 个 int<br>\n 然后创建我们的结构体，发现界面会清楚一点，而且很容易看出来是 XTEA 加密</p>\n<p>但是经过了魔改，循环的轮数以及 delta 数值也发生了变化</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMucGVkaXkuY29tL3RocmVhZC0yNjY5MzMuaHRt\">TEA XTEA XXTEA 加密</span><br>\n<img data-src=\"image-20220428221544843.png\" alt=\"image-20220428221544843\"></p>\n<p>这里取 key 的操作学到了，先按 d 让单个元素的变成 8 位，然后再创建一个包含四个元素的数组，就能创建一个总共 32 位的数组。<br>\n<img data-src=\"image-20220428220355543.png\" alt=\"image-20220428220355543\"></p>\n<p>还有一个坑是<img data-src=\"image-20220428220439172.png\" alt=\"image-20220428220439172\"></p>\n<p>这里传入的 XTEA 每一步的循环的值都是变化的，但是经过计算就能得到循环值分别为  <strong>2  4  6   8</strong><br>\n<img data-src=\"image-20220428220817309.png\" alt=\"image-20220428220817309\"></p>\n<p>而且 xorkey 是可以通过动调获取的</p>\n<p>下一个函数就是简单的 memcpy () 函数，</p>\n<blockquote>\n<p>C 库函数 <strong>void *memcpy(void *str1, const void *str2, size_t n)</strong> 从存储区 <strong>str2</strong> 复制 <strong>n</strong> 个字节到存储区 <strong>str1</strong>。</p>\n</blockquote>\n<p><img data-src=\"C:%5CUsers%5CIkhan%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220429171011925.png\" alt=\"image-20220429171011925\"></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>__int64 __fastcall <span class=\"token function\">XOR</span><span class=\"token punctuation\">(</span>__int64 input<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  __int64 v1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rbx</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  __int64 v2<span class=\"token punctuation\">;</span> <span class=\"token comment\">// r13</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  __int64 v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// r15</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  _QWORD <span class=\"token operator\">*</span>v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// r15</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  struct_v5 <span class=\"token operator\">*</span>v5<span class=\"token punctuation\">;</span> <span class=\"token comment\">// r15</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">int</span> v6<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ebx</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">int</span> v7<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ebx</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  v4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">-</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token operator\">*</span>v4 <span class=\"token operator\">=</span> v1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  v5 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v2 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v4 <span class=\"token operator\">-</span> <span class=\"token number\">56</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  v5<span class=\"token operator\">-></span>input <span class=\"token operator\">=</span> input<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  v5<span class=\"token operator\">-></span>xorKey <span class=\"token operator\">=</span> <span class=\"token function\">sub_8080360</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  v5<span class=\"token operator\">-></span>input1 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>v2 <span class=\"token operator\">+</span> v5<span class=\"token operator\">-></span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  v5<span class=\"token operator\">-></span>highFour <span class=\"token operator\">=</span> <span class=\"token function\">Big</span><span class=\"token punctuation\">(</span><span class=\"token function\">HIDWORD</span><span class=\"token punctuation\">(</span>v5<span class=\"token operator\">-></span>input1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 高四位小端序放入</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  v5<span class=\"token operator\">-></span>lowFour <span class=\"token operator\">=</span> <span class=\"token function\">Big</span><span class=\"token punctuation\">(</span>v5<span class=\"token operator\">-></span>input1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                <span class=\"token comment\">// 低四位小端序放入</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> v5<span class=\"token operator\">-></span>count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> v5<span class=\"token operator\">-></span>count <span class=\"token operator\">&lt;=</span> <span class=\"token number\">43</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>v5<span class=\"token operator\">-></span>count <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    v5<span class=\"token operator\">-></span>orgLowFour <span class=\"token operator\">=</span> v5<span class=\"token operator\">-></span>lowFour<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    v6 <span class=\"token operator\">=</span> <span class=\"token function\">ROL</span><span class=\"token punctuation\">(</span>v5<span class=\"token operator\">-></span>lowFour<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    v7 <span class=\"token operator\">=</span> <span class=\"token function\">ROL</span><span class=\"token punctuation\">(</span>v5<span class=\"token operator\">-></span>lowFour<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> v6<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    v5<span class=\"token operator\">-></span>lowFour <span class=\"token operator\">=</span> v5<span class=\"token operator\">-></span>highFour <span class=\"token operator\">^</span> v7 <span class=\"token operator\">^</span> <span class=\"token function\">ROL</span><span class=\"token punctuation\">(</span>v5<span class=\"token operator\">-></span>lowFour<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>v2 <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> v5<span class=\"token operator\">-></span>count <span class=\"token operator\">+</span> v5<span class=\"token operator\">-></span>xorKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    v5<span class=\"token operator\">-></span>highFour <span class=\"token operator\">=</span> v5<span class=\"token operator\">-></span>orgLowFour<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  v5<span class=\"token operator\">-></span>input1 <span class=\"token operator\">=</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  v5<span class=\"token operator\">-></span>input1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v5<span class=\"token operator\">-></span>input1 <span class=\"token operator\">|</span> v5<span class=\"token operator\">-></span>lowFour<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> v5<span class=\"token operator\">-></span>highFour<span class=\"token punctuation\">;</span><span class=\"token comment\">// 低高互换</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token keyword\">return</span> v5<span class=\"token operator\">-></span>input1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>输入的 input 还要经过一个异或运算，再有结尾的高低 32 位转换<br>\n并且，后面是魔改的 XTEA</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>__int64 __fastcall <span class=\"token function\">XTEA</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> count<span class=\"token punctuation\">,</span> __int64 a2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  __int64 v2<span class=\"token punctuation\">;</span> <span class=\"token comment\">// r13</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  myst <span class=\"token operator\">*</span>v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// r15</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  __int64 result<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rax</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>t1 <span class=\"token operator\">=</span> count<span class=\"token punctuation\">;</span>                            <span class=\"token comment\">// 轮数为传入的轮数，分别是 2 4 8 16</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token operator\">*</span><span class=\"token operator\">&amp;</span>v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>v0 <span class=\"token operator\">=</span> a2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token operator\">*</span><span class=\"token operator\">&amp;</span>v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>key <span class=\"token operator\">=</span> key<span class=\"token punctuation\">;</span>                           <span class=\"token comment\">//key 可以直接拿</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>v0 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>v2 <span class=\"token operator\">+</span> <span class=\"token operator\">*</span><span class=\"token operator\">&amp;</span>v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>v0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>v1 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>v2 <span class=\"token operator\">+</span> <span class=\"token operator\">*</span><span class=\"token operator\">&amp;</span>v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>v0 <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>delta <span class=\"token operator\">=</span> <span class=\"token number\">0x10325476</span><span class=\"token punctuation\">;</span>                    <span class=\"token comment\">//delta 数变了</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>t9 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>t9 <span class=\"token operator\">&lt;</span> v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>t1<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>t9 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>v0 <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>v1 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>v1<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>v2 <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>sum <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token operator\">*</span><span class=\"token operator\">&amp;</span>v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                                                                      <span class=\"token operator\">+</span> v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>sum <span class=\"token operator\">+=</span> v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>delta<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>v1 <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>v0 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>v0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>v0<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>v2</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                                                                        <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>sum <span class=\"token operator\">>></span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                                                                        <span class=\"token operator\">+</span> <span class=\"token operator\">*</span><span class=\"token operator\">&amp;</span>v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                                                                      <span class=\"token operator\">+</span> v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>v2 <span class=\"token operator\">+</span> <span class=\"token operator\">*</span><span class=\"token operator\">&amp;</span>v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>v0<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>v0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  result <span class=\"token operator\">=</span> v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>v1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>v2 <span class=\"token operator\">+</span> <span class=\"token operator\">*</span><span class=\"token operator\">&amp;</span>v3<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>v0 <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>最后贴出大佬的 wp</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdint.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">SHL</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFFFFFFFF</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> n <span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">ROTL</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">SHL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token punctuation\">(</span><span class=\"token number\">32</span> <span class=\"token operator\">-</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> xorKey<span class=\"token punctuation\">[</span><span class=\"token number\">44</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token number\">0x04050607</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00010203</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C0D0E0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08090A0B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCD3FE81B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD7C45477</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9F3E9236</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0107F187</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token number\">0xF993CB81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBF74166C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDA198427</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1A05ABFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9307E5E4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCB8B0E45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x306DF7F5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAD300197</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token number\">0xAA86B056</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x449263BA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3FA4401B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1E41F917</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6CB1E7D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18EB0D7A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD4EC4800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB486F92B</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token number\">0x8737F9F3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x765E3D25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDB3D3537</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEE44552B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11D0C94C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9B605BCB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x903B98B3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24C2EEA3</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token number\">0x896E10A2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2247F0C0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB84E5CAA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D2C04F0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3BC7842C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1A50D606</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x49A1917C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7E1CB50C</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token number\">0xFC27B826</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5FDDDFBC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDE0FC404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB2B30907</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">decipher</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> num_rounds<span class=\"token punctuation\">,</span> <span class=\"token class-name\">uint32_t</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">uint32_t</span> <span class=\"token keyword\">const</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token class-name\">uint32_t</span> v0<span class=\"token operator\">=</span>v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v1<span class=\"token operator\">=</span>v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> delta <span class=\"token operator\">=</span> <span class=\"token number\">0x10325476</span><span class=\"token punctuation\">,</span> sum<span class=\"token operator\">=</span>delta<span class=\"token operator\">*</span>num_rounds<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> num_rounds<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        v1 <span class=\"token operator\">-=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> v0<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">+</span> key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">>></span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sum <span class=\"token operator\">-=</span> delta<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        v0 <span class=\"token operator\">-=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> v1<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">+</span> key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>v0<span class=\"token punctuation\">;</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>v1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">XorRol</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint32_t</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token class-name\">uint32_t</span> encLow <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token class-name\">uint32_t</span> encHigh <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token class-name\">uint32_t</span> orgLow<span class=\"token punctuation\">,</span> orgHigh<span class=\"token punctuation\">,</span> v6<span class=\"token punctuation\">,</span> v7<span class=\"token punctuation\">,</span> v8<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\t</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">43</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\torgLow <span class=\"token operator\">=</span> encHigh<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\tv6 <span class=\"token operator\">=</span> <span class=\"token function\">ROTL</span><span class=\"token punctuation\">(</span>orgLow<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\tv7 <span class=\"token operator\">=</span> <span class=\"token function\">ROTL</span><span class=\"token punctuation\">(</span>orgLow<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> v6<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\tv8 <span class=\"token operator\">=</span> v7 <span class=\"token operator\">^</span> <span class=\"token function\">ROTL</span><span class=\"token punctuation\">(</span>orgLow<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\torgHigh <span class=\"token operator\">=</span> encLow <span class=\"token operator\">^</span> xorKey<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> v8<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\tencHigh <span class=\"token operator\">=</span> orgHigh<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\tencLow <span class=\"token operator\">=</span> orgLow<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\tv<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> orgLow<span class=\"token punctuation\">;</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> orgHigh<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"47\"></td><td><pre> </pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token class-name\">uint32_t</span> v<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0xFDF5C266</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7A328286</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCE944004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5DE08ADC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA6E4BD0A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x16CAADDC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x13CD6F0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1A75D936</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token class-name\">uint32_t</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0x03020100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x07060504</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0B0A0908</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F0E0D0C</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token class-name\">uint32_t</span> teaData<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token comment\">//\tuint32_t testData[] = &#123; 0xD4C2E7AE, 0xD2E28713 &#125;;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\">//\tXorRol(testData);</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\">//\tprintf(\"0x%X, 0x%X, \", testData[0], testData[1]);</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t<span class=\"token function\">decipher</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> v <span class=\"token operator\">+</span> i <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0x%X, 0x%X, \"</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\tteaData<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\tteaData<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t<span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t\t<span class=\"token function\">XorRol</span><span class=\"token punctuation\">(</span>teaData <span class=\"token operator\">+</span> i <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token comment\">//\t\tprintf(\"0x%X, 0x%X, \", teaData[i * 2], teaData[i * 2 + 1]);</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t<span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> t <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>teaData<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c%c%c%c\"</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>以及出题人的出题思路</p>\n<blockquote>\n<h3 id=\"nacl-writeup\"><a class=\"anchor\" href=\"#nacl-writeup\">#</a> NaCl writeup</h3>\n<ol>\n<li>\n<p>main logic in  <code>src.c</code></p>\n</li>\n<li>\n<p>this challenge is likely Google Native NaCl project. It includes jump check, memory check and align check. But I alse replace the stack registers, use r15 to replace rsp, r14 to replace rbp. And here are no call, ret and leave. Here is only jmp. Access memory by adding r13 to get memory address.</p>\n</li>\n<li>\n<p>Moreover, i put the loader function and the native client binary together. the section SFI is NaCl's code, and SFI_DATA is data section.</p>\n</li>\n<li>\n<p>expected solution is as follows: firstly, dump section SFI and SFI_data. Then, you modify the binary by script code. you need to recover stack, register and instrcution call, ret, etc. Lastly, you can disassemble the new binary by ida or other tools. Then you can got simple logic.</p>\n</li>\n<li>\n<p>i am sorry that all players solved this challenge by dynamic debugging and static analysis of orginal assembly code. Because my hide logic code is short. So bad.</p>\n</li>\n</ol>\n</blockquote>\n",
            "tags": [
                "Reverse_wp_starCTF"
            ]
        },
        {
            "id": "https://0x401000nu1l.github.io/2022/04/19/%E5%8F%B2%E4%B8%8A%E6%9C%80%E5%B0%8F%E7%9A%84elf%E6%96%87%E4%BB%B6/",
            "url": "https://0x401000nu1l.github.io/2022/04/19/%E5%8F%B2%E4%B8%8A%E6%9C%80%E5%B0%8F%E7%9A%84elf%E6%96%87%E4%BB%B6/",
            "title": "史上最小的elf文件",
            "date_published": "2022-04-19T08:29:21.000Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "https://0x401000nu1l.github.io/2022/04/18/%E6%B1%87%E7%BC%96-%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/",
            "url": "https://0x401000nu1l.github.io/2022/04/18/%E6%B1%87%E7%BC%96-%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/",
            "title": "汇编语言中系统调用",
            "date_published": "2022-04-18T13:51:42.000Z",
            "content_html": "<h1 id=\"linux系统调用\"><a class=\"anchor\" href=\"#linux系统调用\">#</a> linux 系统调用</h1>\n<h2 id=\"系统调用是用于用户空间和内核空间之间接口的api\"><a class=\"anchor\" href=\"#系统调用是用于用户空间和内核空间之间接口的api\">#</a> <strong>系统调用是用于用户空间和内核空间之间接口的 API</strong></h2>\n<h4 id=\"linux中使用系统调用\"><a class=\"anchor\" href=\"#linux中使用系统调用\">#</a> linux 中使用系统调用</h4>\n<p>可以在 linux 中使用系统调用，具体有一下步骤</p>\n<ul>\n<li>将系统调用号放在 EAX 寄存器中</li>\n<li>将参数存储在寄存器 EBX,ECX 等中的系统调用中</li>\n<li>调用相关的中断 (80h)</li>\n<li>结果通常在 EAX 寄存器中返回</li>\n</ul>\n<blockquote>\n<p>由六个寄存器存储所使用的系统调用的参数</p>\n<p>分别是 <strong>EBX,ECX,EDX,ESI</strong>,<strong>EDI</strong> 和<strong> EBP</strong></p>\n<p>这些寄存器采用连续参数，从 EBX 寄存器开始，如果有超过六个参数，则第一个参数的存储单元存储在 EBX 寄存器中</p>\n</blockquote>\n<p>下面举出系统调用 sys_exit 以及 sys_write 的例子</p>\n<pre><code class=\"language-assembly\">mov eax,1   ;system call number (sys_exit)\nint 0x80    ; call kernel\n</code></pre>\n<pre><code class=\"language-assembly\"> mov eax,4       ; message length\n mov ecx,msg     ; message to write\n mov ebx,1       ; file descriptor (stdout)\n mov eax,4       ; system call number (sys_write)\n int 0x80        ; call kernel \n</code></pre>\n<p>所有系统调用都列在 <em><strong>/user/include/asm/unistd.h</strong></em>  以及他们的编号（在调用 int 0x80 之前放入 eax 的值）</p>\n<p>常用的系统调用以及编号如下</p>\n<p><img data-src=\"image-20220418225625486.png\" alt=\"image-20220418225625486\"></p>\n",
            "tags": [
                "Assembly Language"
            ]
        },
        {
            "id": "https://0x401000nu1l.github.io/2022/04/16/CTFshow36D%E6%9D%AFwp/",
            "url": "https://0x401000nu1l.github.io/2022/04/16/CTFshow36D%E6%9D%AFwp/",
            "title": "CTFshow36D杯wp",
            "date_published": "2022-04-16T07:37:06.000Z",
            "content_html": "<h3 id=\"ctfshow-36d杯-wp\"><a class=\"anchor\" href=\"#ctfshow-36d杯-wp\">#</a> <strong>CTFshow 36D 杯 wp</strong></h3>\n<h4 id=\"1神光\"><a class=\"anchor\" href=\"#1神光\">#</a> 1. 神光</h4>\n<p>下载完直接运行</p>\n<p><img data-src=\"image-20220416234623113.png\" alt=\"image-20220416234623113\"></p>\n<p>随意输入字符串之后</p>\n<p><img data-src=\"image-20220416234744429.png\" alt=\"image-20220416234744429\"></p>\n<p>发现是一个循环，于是直接进入 IDA pro 查看</p>\n<p>由于有 key 的输出，所以直接查找字符串 key 从而进入 main 函数</p>\n<p>逻辑很简单</p>\n<p><img data-src=\"image-20220416235040830.png\" alt=\"image-20220416235040830\"></p>\n<p>查看</p>\n<p><img data-src=\"image-20220416235112332.png\" alt=\"image-20220416235112332\"></p>\n<p>sub_4113b1 函数，</p>\n<p><img data-src=\"image-20220416235146789.png\" alt=\"image-20220416235146789\"></p>\n<p>如果 str1 与 str2 相同，则 result 不为 0，反之为 0，根据 main 函数推测 result 不能为 0，可知 str2 应为 &quot;wangzherongyao&quot;</p>\n<p>重新执行程序，输入正确的 key 之后显示</p>\n<p><img data-src=\"image-20220416235347210.png\" alt=\"image-20220416235347210\"></p>\n<p>之后继续查看之后的函数</p>\n<p><img data-src=\"image-20220416235417757.png\" alt=\"image-20220416235417757\"></p>\n<p>进入之后分析</p>\n<p><img data-src=\"image-20220416235433077.png\" alt=\"image-20220416235433077\"></p>\n<p>简单的加密函数，本来以为写脚本就能解决，但是这里的 dword_41A4DC 数组的值未知，猜测应该是在程序运行期间初始化，所以进入 ollydbg 动态调试</p>\n<p><img data-src=\"image-20220417000435013.png\" alt=\"image-20220417000435013\"></p>\n<p>直接 ctrl+F8 , 到达输入时输入 “wangzherongyao&quot; 没想到 flag 直接弹出来了</p>\n<p><img data-src=\"image-20220417000537498.png\" alt=\"image-20220417000537498\"></p>\n<p>所以</p>\n<blockquote>\n<p><strong>flag{9969e2ddd64088f71af0caa891b4dc63}</strong></p>\n</blockquote>\n<h4 id=\"bbbigeqset\"><a class=\"anchor\" href=\"#bbbigeqset\">#</a> BBBigEqSet</h4>\n<p>拿到文件之后直接在 wsl 里面打开，然后</p>\n<p><img data-src=\"image-20220417204859822.png\" alt=\"image-20220417204859822\"></p>\n<p>用 exeinfo 看完是 64 位之后直接拉进 IDA 。</p>\n<p>查看 main 函数时提示函数占用太大，无法反编译，于是按照网上教程修改了 IDA 配置</p>\n<blockquote>\n<p>进入 IDA\\cfg\\ida.cfg</p>\n<p>修改  MAX_FUNCSIZE = 1024</p>\n</blockquote>\n<p>成功反编译后发现是很长的解方程的题目，因为之前没有做个类似的题目，但是知道 numpy 模块可以直接解方程，所以直接写 IDA pro 脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># coding=utf-8</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>instr<span class=\"token operator\">=</span><span class=\"token number\">0x11c7</span>\t<span class=\"token comment\">#起始指令的地址</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>end_addr<span class=\"token operator\">=</span><span class=\"token number\">0x4963c</span>\t<span class=\"token comment\">#指令结束的地址</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>numpy_out<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span>\t<span class=\"token comment\">#方便写脚本，让 ida 直接输出 numpy 的矩阵数组</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\t\t<span class=\"token comment\">#flag 数组用于存放方程未知数的系数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>cmps<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\t\t<span class=\"token comment\">#cmps 数组存放方程右侧的常数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>instr<span class=\"token operator\">&lt;=</span>end_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tdis_asm <span class=\"token operator\">=</span> idc<span class=\"token punctuation\">.</span>GetMnem<span class=\"token punctuation\">(</span>instr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dis_asm<span class=\"token operator\">==</span><span class=\"token string\">\"imul\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>idc<span class=\"token punctuation\">.</span>GetOpType<span class=\"token punctuation\">(</span>instr<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#如果第二个 OPCODE 是立即数，主要为了区分 imul edx, eax, 9421h 和 imul eax, 60CDh 两种格式</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\tflag<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>idc<span class=\"token punctuation\">.</span>GetOperandValue<span class=\"token punctuation\">(</span>instr<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\tflag<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>idc<span class=\"token punctuation\">.</span>GetOperandValue<span class=\"token punctuation\">(</span>instr<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dis_asm<span class=\"token operator\">==</span><span class=\"token string\">\"cmp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\tcmps<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>idc<span class=\"token punctuation\">.</span>GetOperandValue<span class=\"token punctuation\">(</span>instr<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\tctr<span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\tnumpy_out<span class=\"token operator\">+=</span><span class=\"token string\">\"[\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> flag<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\tnumpy_out<span class=\"token operator\">+=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\tctr<span class=\"token operator\">=</span>ctr<span class=\"token operator\">+</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ctr<span class=\"token operator\">==</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#因为 flag 一共 128 位，这时我们的矩阵结束，添加 \"]\" 符号</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\tnumpy_out<span class=\"token operator\">+=</span><span class=\"token string\">\"],\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\tnumpy_out<span class=\"token operator\">+=</span><span class=\"token string\">\",\"</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\tflag<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tinstr<span class=\"token operator\">=</span>idc<span class=\"token punctuation\">.</span>NextHead<span class=\"token punctuation\">(</span>instr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">#print numpy_out 这句用来输出方程的所有组系数</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>numpy_out<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> cmps<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\tnumpy_out<span class=\"token operator\">+=</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">print</span> numpy_out\t<span class=\"token comment\">#输出方程右侧的常数</span></pre></td></tr></table></figure><p>上面的脚本只能将求解的矩阵当做字符串打印出来，但是因为我线性代数学得不好再加上对 numpy 用的不是很熟悉，所以只能将 &quot;矩阵&quot; 字符串打印出来然后手动的更改格式为矩阵</p>\n<p>解题的脚本如下</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># coding=utf-8</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>x <span class=\"token operator\">=</span> numpy<span class=\"token punctuation\">.</span>linalg<span class=\"token punctuation\">.</span>solve<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#这里的 c d 都是上一步得到的矩阵打印出来的 x 也是矩阵格式，所以之后还得继续更改格式</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token string\">\"[102. 108.  97. 103. 123.  83. 111. 111. 111. 111.  48.  48.  48.  95. 76. 111. 111.  79.  79.  79.  79.  79.  79.  79.  79. 103. 103.  79. 57.  57. 103.  57.  57.  95. 115.  49. 109. 117.  76. 116.  97.  78.101.  79. 117. 115.  95.  69.  69.  69.  81. 117.  97. 116.  49.  48.110.  53.  95.  89.  48.  85.  85.  85.  85.  85.  85. 117. 117. 117.95.  99.  65.  65.  52.  52.  65.  65.  78.  78. 110. 110.  78.  95.83.  79.  79.  79.  79.  79.  79.  76.  86.  69.  95.  73.  84.  49.55.  84.  84.  49.  49.  55.  55.  49.  73.  84.  73.  84.  33.  33.33.  95.  56.  83. 104. 111. 116.  68. 115. 104.  80.  57.  48.  97.98. 125.]\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>d <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">102</span><span class=\"token punctuation\">,</span><span class=\"token number\">108</span><span class=\"token punctuation\">,</span><span class=\"token number\">97</span><span class=\"token punctuation\">,</span><span class=\"token number\">103</span><span class=\"token punctuation\">,</span><span class=\"token number\">123</span><span class=\"token punctuation\">,</span><span class=\"token number\">83</span><span class=\"token punctuation\">,</span><span class=\"token number\">111</span><span class=\"token punctuation\">,</span><span class=\"token number\">111</span><span class=\"token punctuation\">,</span><span class=\"token number\">111</span><span class=\"token punctuation\">,</span><span class=\"token number\">111</span><span class=\"token punctuation\">,</span><span class=\"token number\">48</span><span class=\"token punctuation\">,</span><span class=\"token number\">48</span><span class=\"token punctuation\">,</span><span class=\"token number\">48</span><span class=\"token punctuation\">,</span><span class=\"token number\">95</span><span class=\"token punctuation\">,</span><span class=\"token number\">76</span><span class=\"token punctuation\">,</span><span class=\"token number\">111</span><span class=\"token punctuation\">,</span><span class=\"token number\">111</span><span class=\"token punctuation\">,</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span><span class=\"token number\">103</span><span class=\"token punctuation\">,</span><span class=\"token number\">103</span><span class=\"token punctuation\">,</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span><span class=\"token number\">57</span><span class=\"token punctuation\">,</span><span class=\"token number\">57</span><span class=\"token punctuation\">,</span><span class=\"token number\">103</span><span class=\"token punctuation\">,</span><span class=\"token number\">57</span><span class=\"token punctuation\">,</span><span class=\"token number\">57</span><span class=\"token punctuation\">,</span><span class=\"token number\">95</span><span class=\"token punctuation\">,</span><span class=\"token number\">115</span><span class=\"token punctuation\">,</span><span class=\"token number\">49</span><span class=\"token punctuation\">,</span><span class=\"token number\">109</span><span class=\"token punctuation\">,</span><span class=\"token number\">117</span><span class=\"token punctuation\">,</span><span class=\"token number\">76</span><span class=\"token punctuation\">,</span><span class=\"token number\">116</span><span class=\"token punctuation\">,</span><span class=\"token number\">97</span><span class=\"token punctuation\">,</span><span class=\"token number\">78</span><span class=\"token punctuation\">,</span><span class=\"token number\">101</span><span class=\"token punctuation\">,</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span><span class=\"token number\">117</span><span class=\"token punctuation\">,</span><span class=\"token number\">115</span><span class=\"token punctuation\">,</span><span class=\"token number\">95</span><span class=\"token punctuation\">,</span><span class=\"token number\">69</span><span class=\"token punctuation\">,</span><span class=\"token number\">69</span><span class=\"token punctuation\">,</span><span class=\"token number\">69</span><span class=\"token punctuation\">,</span><span class=\"token number\">81</span><span class=\"token punctuation\">,</span><span class=\"token number\">117</span><span class=\"token punctuation\">,</span><span class=\"token number\">97</span><span class=\"token punctuation\">,</span><span class=\"token number\">116</span><span class=\"token punctuation\">,</span><span class=\"token number\">49</span><span class=\"token punctuation\">,</span><span class=\"token number\">48</span><span class=\"token punctuation\">,</span><span class=\"token number\">110</span><span class=\"token punctuation\">,</span><span class=\"token number\">53</span><span class=\"token punctuation\">,</span><span class=\"token number\">95</span><span class=\"token punctuation\">,</span><span class=\"token number\">89</span><span class=\"token punctuation\">,</span><span class=\"token number\">48</span><span class=\"token punctuation\">,</span><span class=\"token number\">85</span><span class=\"token punctuation\">,</span><span class=\"token number\">85</span><span class=\"token punctuation\">,</span><span class=\"token number\">85</span><span class=\"token punctuation\">,</span><span class=\"token number\">85</span><span class=\"token punctuation\">,</span><span class=\"token number\">85</span><span class=\"token punctuation\">,</span><span class=\"token number\">85</span><span class=\"token punctuation\">,</span><span class=\"token number\">117</span><span class=\"token punctuation\">,</span><span class=\"token number\">117</span><span class=\"token punctuation\">,</span><span class=\"token number\">117</span><span class=\"token punctuation\">,</span><span class=\"token number\">95</span><span class=\"token punctuation\">,</span><span class=\"token number\">99</span><span class=\"token punctuation\">,</span><span class=\"token number\">65</span><span class=\"token punctuation\">,</span><span class=\"token number\">65</span><span class=\"token punctuation\">,</span><span class=\"token number\">52</span><span class=\"token punctuation\">,</span><span class=\"token number\">52</span><span class=\"token punctuation\">,</span><span class=\"token number\">65</span><span class=\"token punctuation\">,</span><span class=\"token number\">65</span><span class=\"token punctuation\">,</span><span class=\"token number\">78</span><span class=\"token punctuation\">,</span><span class=\"token number\">78</span><span class=\"token punctuation\">,</span><span class=\"token number\">110</span><span class=\"token punctuation\">,</span><span class=\"token number\">110</span><span class=\"token punctuation\">,</span><span class=\"token number\">78</span><span class=\"token punctuation\">,</span><span class=\"token number\">95</span><span class=\"token punctuation\">,</span><span class=\"token number\">83</span><span class=\"token punctuation\">,</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span><span class=\"token number\">76</span><span class=\"token punctuation\">,</span><span class=\"token number\">86</span><span class=\"token punctuation\">,</span><span class=\"token number\">69</span><span class=\"token punctuation\">,</span><span class=\"token number\">95</span><span class=\"token punctuation\">,</span><span class=\"token number\">73</span><span class=\"token punctuation\">,</span><span class=\"token number\">84</span><span class=\"token punctuation\">,</span><span class=\"token number\">49</span><span class=\"token punctuation\">,</span><span class=\"token number\">55</span><span class=\"token punctuation\">,</span><span class=\"token number\">84</span><span class=\"token punctuation\">,</span><span class=\"token number\">84</span><span class=\"token punctuation\">,</span><span class=\"token number\">49</span><span class=\"token punctuation\">,</span><span class=\"token number\">49</span><span class=\"token punctuation\">,</span><span class=\"token number\">55</span><span class=\"token punctuation\">,</span><span class=\"token number\">55</span><span class=\"token punctuation\">,</span><span class=\"token number\">49</span><span class=\"token punctuation\">,</span><span class=\"token number\">73</span><span class=\"token punctuation\">,</span><span class=\"token number\">84</span><span class=\"token punctuation\">,</span><span class=\"token number\">73</span><span class=\"token punctuation\">,</span><span class=\"token number\">84</span><span class=\"token punctuation\">,</span><span class=\"token number\">33</span><span class=\"token punctuation\">,</span><span class=\"token number\">33</span><span class=\"token punctuation\">,</span><span class=\"token number\">33</span><span class=\"token punctuation\">,</span><span class=\"token number\">95</span><span class=\"token punctuation\">,</span><span class=\"token number\">56</span><span class=\"token punctuation\">,</span><span class=\"token number\">83</span><span class=\"token punctuation\">,</span><span class=\"token number\">104</span><span class=\"token punctuation\">,</span><span class=\"token number\">111</span><span class=\"token punctuation\">,</span><span class=\"token number\">116</span><span class=\"token punctuation\">,</span><span class=\"token number\">68</span><span class=\"token punctuation\">,</span><span class=\"token number\">115</span><span class=\"token punctuation\">,</span><span class=\"token number\">104</span><span class=\"token punctuation\">,</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span><span class=\"token number\">57</span><span class=\"token punctuation\">,</span><span class=\"token number\">48</span><span class=\"token punctuation\">,</span><span class=\"token number\">97</span><span class=\"token punctuation\">,</span><span class=\"token number\">98</span><span class=\"token punctuation\">,</span><span class=\"token number\">125</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> d<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>flag&#123;Soooo000_LooOOOOOOOOggO99g99_s1muLtaNeOus_EEEQuat10n5_Y0UUUUUUuuu_cAA44AANNnnN_SOOOOOOLVE_IT17TT11771ITIT!!!_8ShotDshP90ab&#125;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>'''</pre></td></tr></table></figure><p>总结一下，还是对 python 不太熟悉，基本的格式转换还有 numpy 模块的使用太生疏了</p>\n<p>还有一点就是后面得多学点 IDC 的内容，因为 IDA 里面写 python 脚本必须得用到这玩意儿</p>\n<blockquote>\n<p><strong>flag{Soooo000_LooOOOOOOOOggO99g99_s1muLtaNeOus_EEEQuat10n5_Y0UUUUUUuuu_cAA44AANNnnN_SOOOOOOLVE_IT17TT11771ITIT!!!_8ShotDshP90ab}</strong></p>\n</blockquote>\n<h4 id=\"tiny\"><a class=\"anchor\" href=\"#tiny\">#</a> tiny</h4>\n<p>下载之后 wsl 里面运行，显示段错误，而且文件本身也只有 90 几个字节，算是特别特别小的 elf 文件</p>\n<p>32 位，直接在 IDA 里面打开看汇编</p>\n<p>竟然可以反汇编，不由得感叹 IDA 的强大</p>\n<p>IDA 反汇编的 C 代码如下</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> __noreturn <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> v0<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ecx</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">int</span> v2<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp-4h] [ebp-4h]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  v0 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  v1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    v1 <span class=\"token operator\">|=</span> <span class=\"token function\">__ROR4__</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v2 <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> v0<span class=\"token operator\">--</span> <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0xCE60E4A</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v0 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  __asm <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">int</span>     <span class=\"token number\">80</span>h<span class=\"token punctuation\">;</span> LINUX <span class=\"token operator\">-</span> sys_exit <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>ROR（循环右移）指令把所有位都向右移，最低位复制到进位标志位和最高位。该指令格式与 SHL 指令相同</p>\n</blockquote>\n<p>所以其他的就很清楚，程序接收参数 (flag), 先取出后四位循环右移 3 位，然后再相应的做异或运算，接着循环到取出前四位继续运算</p>\n<p><img data-src=\"image-20220419143423132.png\" alt=\"image-20220419143423132\"></p>\n<p><img data-src=\"image-20220419144343405.png\" alt=\"image-20220419144343405\"></p>\n<p>eax 是整个函数的返回值，由</p>\n<pre><code class=\"language-assembly\">test eax,eax\nsernz bl      ;这里就能判断eax为1\n</code></pre>\n<p>所以上面的</p>\n<pre><code class=\"language-assembly\">or eax,edx     ; 所以为了使eax=1，这里的edx只能为0\n</code></pre>\n<p>所以倒推异或，就能够理清程序思路</p>\n<pre><code>(edi&gt;&gt;3)^0x93F9A63==0x5D99429  #第一次循环，edi为flag的后四位\n(edi&gt;&gt;3)^0x8AF45207==0X5D99429\n</code></pre>\n<p>之后就很简单的逆向计算就可以</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">ROR</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    n <span class=\"token operator\">=</span> n<span class=\"token operator\">&amp;</span><span class=\"token number\">0xffffffff</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">>></span>r<span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token operator\">-</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">0xffffffff</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">hex_2_str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    s <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        s<span class=\"token operator\">+=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">%</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        x<span class=\"token operator\">/=</span><span class=\"token number\">0x100</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> s</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>hex_2_str<span class=\"token punctuation\">(</span>ROR<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0x8AF45207</span> <span class=\"token operator\">^</span> <span class=\"token number\">0x5D99429</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>hex_2_str<span class=\"token punctuation\">(</span>ROR<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x93F9A63</span><span class=\"token operator\">^</span><span class=\"token number\">0x5D99429</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#ror (flag,x) 的逆算法是 ror (flag,32-x)</span></pre></td></tr></table></figure><p>得到 flag</p>\n<blockquote>\n<p><strong>flag{t1nyPr0g}</strong></p>\n</blockquote>\n<h4 id=\"签到题\"><a class=\"anchor\" href=\"#签到题\">#</a> 签到题</h4>\n<p>下载后打开，<img data-src=\"image-20220419154714661.png\" alt=\"image-20220419154714661\"></p>\n<p><img data-src=\"image-20220419155002514.png\" alt=\"image-20220419155002514\"></p>\n<p>为了让 V6=0</p>\n<p>则 v8=v7<sup>(v7+(v7</sup>v9[v7]))</p>\n<p>然后直接写脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin\">list</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">102</span><span class=\"token punctuation\">,</span><span class=\"token number\">109</span><span class=\"token punctuation\">,</span><span class=\"token number\">99</span><span class=\"token punctuation\">,</span><span class=\"token number\">98</span><span class=\"token punctuation\">,</span><span class=\"token number\">127</span><span class=\"token punctuation\">,</span><span class=\"token number\">58</span><span class=\"token punctuation\">,</span><span class=\"token number\">85</span><span class=\"token punctuation\">,</span><span class=\"token number\">106</span><span class=\"token punctuation\">,</span><span class=\"token number\">57</span><span class=\"token punctuation\">,</span><span class=\"token number\">82</span><span class=\"token punctuation\">,</span><span class=\"token number\">122</span><span class=\"token punctuation\">,</span><span class=\"token number\">55</span><span class=\"token punctuation\">,</span><span class=\"token number\">81</span><span class=\"token punctuation\">,</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token number\">51</span><span class=\"token punctuation\">,</span><span class=\"token number\">35</span><span class=\"token punctuation\">,</span><span class=\"token number\">67</span><span class=\"token punctuation\">,</span><span class=\"token number\">70</span><span class=\"token punctuation\">,</span><span class=\"token number\">41</span><span class=\"token punctuation\">,</span><span class=\"token number\">61</span><span class=\"token punctuation\">,</span><span class=\"token number\">41</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span><span class=\"token number\">127</span><span class=\"token punctuation\">,</span><span class=\"token number\">28</span><span class=\"token punctuation\">,</span><span class=\"token number\">38</span><span class=\"token punctuation\">,</span><span class=\"token number\">77</span><span class=\"token punctuation\">,</span><span class=\"token number\">49</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span><span class=\"token number\">94</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>l<span class=\"token operator\">=</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    v8<span class=\"token operator\">=</span>i<span class=\"token operator\">^</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">^</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>v8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p><strong>flag{A_s1mpLe&amp;E4sy_RE_i5Nt_1t}</strong></p>\n</blockquote>\n",
            "tags": [
                "Reverse_wp_ctfshow_36D杯"
            ]
        },
        {
            "id": "https://0x401000nu1l.github.io/2022/04/13/plan/",
            "url": "https://0x401000nu1l.github.io/2022/04/13/plan/",
            "title": "plan",
            "date_published": "2022-04-13T14:29:38.000Z",
            "content_html": "<h1 id=\"对自己小半年总结以及规划\"><a class=\"anchor\" href=\"#对自己小半年总结以及规划\">#</a> 对自己小半年总结以及规划</h1>\n<h2 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>2022 年过去的四个月，学习了很多方面的知识，也对计算机知识稍微深入了解了一点，但是但当涉猎，没有精通的。</p>\n<h4 id=\"兴趣\"><a class=\"anchor\" href=\"#兴趣\">#</a> 兴趣</h4>\n<p>刚开始是想要打 CTF，自己也很喜欢 reverse 方向，也自己尝试着破解了对自己有用的软件，也是因为 reverse，我慢慢有了对底层系统知识的兴趣，假期自己跟着 b 站谭玉刚先生做了 uefi，计算机系统确实精密而有趣，最近学的 csapp 更让我有了以后从事系统研究的打算。</p>\n<h4 id=\"技能\"><a class=\"anchor\" href=\"#技能\">#</a> 技能</h4>\n<p>但是整个 2022 伊始都出于深深的焦虑中，学分绩不高，保不了研，总是在读研以及工作之间焦虑，过度内耗，导致对于计算机更多知识没有静下心来学习，整个寒假也是在浑浑噩噩中度过。</p>\n<p>之后有一段时间和声哥聊天，感觉就业似乎也是很不错的选择，于是又开始重新拾起大一自学的 java，从面向对象开始自学，学完了 mysql，学完了 JDBC，最后还是止步，看到今年互联网大厂 “寒冬” 来临，害怕没有研究生学历寸步难行，就又准备着竞赛的内容，java 也就没有深入学习。</p>\n<h4 id=\"竞赛\"><a class=\"anchor\" href=\"#竞赛\">#</a> 竞赛</h4>\n<p>竞赛涉及的是 nlp 和 cv 方向，或许是之前对底层系统更感兴趣的原因，自己一直对 ai 方向兴趣不大，自然也没有更多东西深究深度学习的内容，也只停留在简单利用开源的深度学习模型。</p>\n<h2 id=\"规划\"><a class=\"anchor\" href=\"#规划\">#</a> 规划</h2>\n<h4 id=\"兴趣-2\"><a class=\"anchor\" href=\"#兴趣-2\">#</a> 兴趣</h4>\n<p>继续重新拾起来自己喜欢的底层系统，尽量保持一定的 ctf 题目的训练量，目标应该是 ctfshow 逆向题赶在暑假之前做完吧，努力多做点题目，看看能不能在暑假进入 CTF 校队，更远的展望是之后能够代表哈工大去参加信息安全竞赛吧。加油</p>\n<p>兴趣永远是最好的老师，室友永远是最好的搜索引擎，多和室友学习，了解一下前沿圈子的资讯，避免闭门造车。</p>\n<h4 id=\"技能-2\"><a class=\"anchor\" href=\"#技能-2\">#</a> 技能</h4>\n<p>leetcode 每天刷一道题，保持一下 java 编程手感。</p>\n<p>java web 方向抽空闲时间看看吧，实践项目可以等到暑假再自己找时间做个大项目练练</p>\n<h4 id=\"竞赛-2\"><a class=\"anchor\" href=\"#竞赛-2\">#</a> 竞赛</h4>\n<p>虽然是自己不感兴趣的领域，但还是努力去做吧。</p>\n<p>nlp 和 cv 的问题多问问学长，多和队友交流，加油</p>\n<p>感谢一直陪伴我，支持我，包容我，理解我的女朋友。</p>\n<p>未来总是不确定的，现在多努力是为了在未来的不确定中获得更多的选择权。</p>\n<p>加油</p>\n",
            "tags": [
                "plan"
            ]
        },
        {
            "id": "https://0x401000nu1l.github.io/2022/04/12/%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%82%B8%E5%BC%B9/",
            "url": "https://0x401000nu1l.github.io/2022/04/12/%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%82%B8%E5%BC%B9/",
            "title": "二进制炸弹",
            "date_published": "2022-04-12T01:40:12.000Z",
            "content_html": "<h1 id=\"哈尔滨工业大学计算机系统lab2\"><a class=\"anchor\" href=\"#哈尔滨工业大学计算机系统lab2\">#</a> <strong>哈尔滨工业大学计算机系统 LAB2</strong></h1>\n<h3 id=\"一实验基本信息\"><a class=\"anchor\" href=\"#一实验基本信息\">#</a> 一，实验基本信息</h3>\n<h4 id=\"1实验目的\"><a class=\"anchor\" href=\"#1实验目的\">#</a> 1. 实验目的</h4>\n<p>​\t拆炸弹，了解汇编 and <strong>fun</strong></p>\n<h4 id=\"2实验环境与工具\"><a class=\"anchor\" href=\"#2实验环境与工具\">#</a> 2. 实验环境与工具</h4>\n<h5 id=\"21硬件环境\"><a class=\"anchor\" href=\"#21硬件环境\">#</a> 2.1 硬件环境</h5>\n<p>​\tIntel i7-i0875H 64 位处理器   RTX2070</p>\n<h5 id=\"22软件环境\"><a class=\"anchor\" href=\"#22软件环境\">#</a> 2.2 软件环境</h5>\n<p>​\tWindows<strong>11</strong> &amp; Ubuntu 20.04 64 位</p>\n<h5 id=\"23-开发工具\"><a class=\"anchor\" href=\"#23-开发工具\">#</a> 2.3 开发工具</h5>\n<p>​\tvscode   IDA pro  gdb(peda)</p>\n<h3 id=\"二各阶段炸弹的破解与分析\"><a class=\"anchor\" href=\"#二各阶段炸弹的破解与分析\">#</a> 二，各阶段炸弹的破解与分析</h3>\n<p>​</p>\n<h4 id=\"1初步分析\"><a class=\"anchor\" href=\"#1初步分析\">#</a> 1. 初步分析</h4>\n<p>在 gdb 环境下安装 peda 或者 pwndbg 都会大大提高工作效率，工作界面友好很多</p>\n<p>[peda &amp; pwndbg 安装](<span class=\"exturl\" data-url=\"aHR0cDovL3BlY2tlcndvb2QudG9wL3Bvc3QvcGVkYV92c19wd25kYmdfZ2RiLw==\">Peda vs Pwndbg - GDB - p3ck3rw00d's blog (peckerwood.top)</span>)</p>\n<p><code>$ gdb bomb</code></p>\n<p>首先查看函数列表</p>\n<p><code> $  info functions</code></p>\n<p><img data-src=\"image-20220409131530471.png\" alt></p>\n<p>看到常规函数可以猜想可执行文件结构，phase_* 等代表不同的关卡，explode_bomb 为炸弹引爆函数 phase_defuse 函数应该是成功拆除炸弹的提示函数，其他函数根据函数名即可知道相应的功能。</p>\n<p>大体知道文件结构之后即可设置断点，开始动态调试</p>\n<p><code>$ b  main</code></p>\n<h4 id=\"2第一关的破解与分析\"><a class=\"anchor\" href=\"#2第一关的破解与分析\">#</a> 2. 第一关的破解与分析</h4>\n<p>进入 main 函数之后一步步 n</p>\n<p><img data-src=\"image-20220409132702810.png\" alt=\"image-20220409132702810\"></p>\n<p>可以看出初始化炸弹的函数被调用，之后一直单步步过到 read_line 函数</p>\n<p>提示输入</p>\n<p><img data-src=\"image-20220409132945900.png\" alt=\"image-20220409132945900\"></p>\n<p>先输入 111111，继续前进</p>\n<p><img data-src=\"image-20220409133040436.png\" alt=\"image-20220409133040436\"></p>\n<p>很明显，我们输入的 &quot;111111&quot; 被送到 rdi 寄存器然后调用函数 phase_1</p>\n<p>使用指令 s  进入 phase_1 函数</p>\n<p><code>$  disas   #查看phase_1函数的汇编</code></p>\n<p><img data-src=\"image-20220409133645790.png\" alt=\"image-20220409133645790\"></p>\n<p>函数接受的输入存在了 rdi 寄存器中，这里又从内存中取出一段数据存入 rsi</p>\n<p>接着调用函数 string_not_equal</p>\n<blockquote>\n<p>参数传入函数时，使用寄存器的顺序 寄存器 **% rdi, % rsi, % rdx, % rcx, % r8, % r9** 分别用来保存函数的 6 个参数，而 % rax 用来保存函数的返回值。</p>\n</blockquote>\n<p>所以第一关就是考简单的函数调用，单步步过之后查看 rsi 寄存器的值就能的到第一关的 ans</p>\n<p><img data-src=\"image-20220409134213172.png\" alt=\"image-20220409134213172\"></p>\n<p>这里就体现出了 peda 的好处，可以直接查看寄存器的值以及 rip 所指地址附近的汇编代码，可以看到我们输入的值</p>\n<p>&quot;111111&quot;</p>\n<p>以及正确答案</p>\n<p>&quot;I am not part of the problem. I am a Republican.&quot;</p>\n<h4 id=\"3第二关的破解与分析\"><a class=\"anchor\" href=\"#3第二关的破解与分析\">#</a> 3. 第二关的破解与分析</h4>\n<p>执行如下命令直接运行到 phase_2 处</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>k <span class=\"token comment\">#中断当前调试进程</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>b phase_2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>r <span class=\"token comment\">#重新开始动态调试</span></pre></td></tr></table></figure><p>之后会提示输入第一关密码，输入后程序停止，之后开始单步调试</p>\n<p><img data-src=\"image-20220409135044864.png\" alt=\"image-20220409135044864\"></p>\n<p>我们继续输入 123456 尝试</p>\n<p><code> $ disas # 查看phase_2的汇编代码</code></p>\n<p><img data-src=\"image-20220409135456198.png\" alt=\"image-20220409135456198\"></p>\n<p>观察下图</p>\n<p><img data-src=\"image-20220409140145503.png\" alt=\"image-20220409140145503\"></p>\n<p>可以看到 Phase_2 调用了 read_six_numbers 函数读入了 6 个数字，并且，由函数开头声明栈的操作，可以看出是通过栈来传递参数给 read_six_numbers 函数</p>\n<p><img data-src=\"image-20220409141653178.png\" alt=\"image-20220409141653178\"></p>\n<p>这里的意图很明显了，既然是通过栈传递参数，这里是检验输入的前两个值</p>\n<p>可以知道一共需要读入六个数，其中<strong>前两个数分别为 0  1</strong> 验证前两个数成功后跳转到</p>\n<p><img data-src=\"image-20220409142830866.png\" alt=\"image-20220409142830866\"></p>\n<p>后面的这部分其实是一个<strong>循环</strong>（<em>因为之前学习汇编的时候王爽老师书里面讲的控制循环的寄存器是 cx (rcx,ecx)，所以第一时间看到代码的时候也是没反应过来是循环，但是看到 ebx 寄存器被赋初值，然后每次加一接着不断地跳回到之前的代码执行，最后还不断地将 ebx 的值与固定值 0x5 比较，才发觉应该是循环</em>）</p>\n<p><img data-src=\"image-20220409143416779.png\" alt=\"image-20220409143416779\"></p>\n<p>这段代码也很好理解， &amp;ecx=&amp;ebx-1   &amp;eax=&amp;ebx-1 接着比较 A [&amp;edx] 与 A [&amp;ecx]+A [&amp;eax] 的大小，这不就是斐波那契么 ((*･ω&lt; ) )</p>\n<p>所以将这一关翻译成 C 语言就是</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> numbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> numbers<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> numbers<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token function\">explode_bomb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>解题脚本如下</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> nums<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>nums<span class=\"token operator\">=</span><span class=\"token number\">0x100000000LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">//  0 1 1 2 3 5</span></pre></td></tr></table></figure><h4 id=\"4第三关的破解与分析\"><a class=\"anchor\" href=\"#4第三关的破解与分析\">#</a> 4. 第三关的破解与分析</h4>\n<p><img data-src=\"image-20220409145016026.png\" alt=\"image-20220409145016026\"></p>\n<p>清除断点之后在 phase_3 下断点，接着 r 运行，输入前两关得到的密码之后程序就会停在第三关</p>\n<p>提示输入</p>\n<p><img data-src=\"image-20220409145224075.png\" alt=\"image-20220409145224075\"> 我们继续输入 &quot;123456&quot; 尝试</p>\n<p>接着单步步过</p>\n<p><img data-src=\"image-20220409152349593.png\" alt=\"image-20220409152349593\"></p>\n<p>发现从内存中向 esi 寄存器中传入了数据，si 运行到赋值完成，查看 esi 内保存的值</p>\n<p><img data-src=\"image-20220409152520489.png\" alt=\"image-20220409152520489\"></p>\n<p>可以看到是格式化输入的字符串，由此可知后面的 scanf 函数接受的是两个整型变量</p>\n<p>之后进入第一层判断，判断 scanf 的返回值</p>\n<blockquote>\n<p>我们可以通过运用函数 scanf () 的返回值的意义（即 “所输入的数据与格式字符串中匹配次数”），来把控我们的输入格式的正确性.</p>\n</blockquote>\n<p><img data-src=\"image-20220409155313942.png\" alt=\"image-20220409155313942\"></p>\n<p>这里要求返回值 &gt; 1，之后<img data-src=\"image-20220409155615483.png\" alt=\"image-20220409155615483\"> 要求输入的第一个参数小于 7</p>\n<p>完成这些前置判定之后</p>\n<p><img data-src=\"image-20220409155738679.png\" alt=\"image-20220409155738679\"></p>\n<p>该代码段中包含一段内存地址</p>\n<p>使用 gdb 查看内存地址的命令查看所指内存地址</p>\n<p><img data-src=\"image-20220409155907546.png\" alt=\"image-20220409155907546\"></p>\n<p>由于小端序存储的原因，上面地址简化一下就是 0x4014dc~0x401506 地址值</p>\n<p>所以可以判断这是一个跳转表</p>\n<p><img data-src=\"image-20220409160048474.png\" alt=\"image-20220409160048474\"></p>\n<p>并且通过 rax 控制跳转</p>\n<blockquote>\n<p>switch 语句可以根据一个整数索引值进行多重分支。</p>\n<p>GCC 根据 case 的数量和 case 值的稀疏程度来翻译 switch 语句，当 case 情况比较多 (例如 4 个以上)，并且值的范围跨度比较小时，就会使用跳转表。</p>\n<p>跳转表是一个数组，表项 i 是一个代码段的地址，这个代码段实现当开关索引值等于 i 时程序应该采取的动作。</p>\n</blockquote>\n<p>由此可以判断这关考查的是 switch 语句的汇编语言的实现</p>\n<p><img data-src=\"image-20220409160237069.png\" alt=\"image-20220409160237069\"></p>\n<p>继续回看这段代码就可以由此列出反汇编之后的 C 语言代码</p>\n<pre><code class=\"language-C\">void __fastcall phase_3(char *input)\n&#123;\n  int v1; // eax\n  int v2; // eax\n  int v3; // eax\n  int v4; // eax\n  int v5; // eax\n  int v6; // eax\n  int v7; // eax\n  int v8; // eax\n  int sum; // [rsp+8h] [rbp-10h] BYREF\n  int index; // [rsp+Ch] [rbp-Ch] BYREF\n\n  if ( (int)__isoc99_sscanf(input, &quot;%d %d&quot;, &amp;index, &amp;sum) &lt;= 1 )\n    explode_bomb();\n  switch ( index )\n  &#123;\n    case 0:\n      v1 = 799;\n      goto LABEL_5;\n    case 1:\n      v1 = 0;\nLABEL_5:\n      v2 = v1 - 301;\n      goto LABEL_6;\n    case 2:\n      v2 = 0;\nLABEL_6:\n      v3 = v2 + 740;\n      goto LABEL_7;\n    case 3:\n      v3 = 0;\nLABEL_7:\n      v4 = v3 - 772;\n      goto LABEL_8;\n    case 4:\n      v4 = 0;\nLABEL_8:\n      v5 = v4 + 772;\n      goto LABEL_9;\n    case 5:\n      v5 = 0;\nLABEL_9:\n      v6 = v5 - 772;\n      goto LABEL_10;\n    case 6:\n      v6 = 0;\nLABEL_10:\n      v7 = v6 + 772;\n      break;\n    case 7:\n      v7 = 0;\n      break;\n    default:\n      explode_bomb();\n  &#125;\n  v8 = v7 - 772;\n  if ( index &gt; 5 || sum != v8 )\n    explode_bomb();\n&#125;\n// from IDA pro \n</code></pre>\n<p>很容易就可以得到答案 2 -32 (答案不唯一)</p>\n<h4 id=\"5第四关的破解与分析\"><a class=\"anchor\" href=\"#5第四关的破解与分析\">#</a> 5. 第四关的破解与分析</h4>\n<p>和前面方法一样，下断点，然后运行到 phase_4 处，并且继续输入 &quot;123456&quot;</p>\n<p>直接使用 disas 命令查看汇编代码</p>\n<p><img data-src=\"image-20220409160906296.png\" alt=\"image-20220409160906296\"></p>\n<p>和第三关一样，先根据 scanf 的返回值判断输入格式以及输入个数的正确性</p>\n<p><img data-src=\"image-20220409162507706.png\" alt=\"image-20220409162507706\"></p>\n<p>接着这段代码要求 eax 不能等于 0 并且 eax 小于等于 14 即    <strong>eax&gt;0&amp;&amp;eax&lt;=14</strong></p>\n<p><img data-src=\"image-20220409162720472.png\" alt=\"image-20220409162720472\"></p>\n<p>后面这一段也很好理解，就是将 scanf 输入的第一个参数传给 edi 寄存器并且将 esi 寄存器值赋为 0，调用<strong> fun4</strong> 之后的结果再与 0x5 比较，由此可知<strong> fun 返回值应该为 5</strong></p>\n<p>由于上面知道了需要输入的是两个整形数，所以重新开始调试，并且输入 &quot;1  2&quot;</p>\n<p>成功通过第一道判断</p>\n<p><img data-src=\"image-20220409164845944.png\" alt=\"image-20220409164845944\"></p>\n<p>接着一直 si 并进入 fun4，查看 fun4 的汇编代码</p>\n<p><img data-src=\"image-20220409165225541.png\" alt=\"image-20220409165225541\"></p>\n<p>一步步向下分析直到代码</p>\n<p><code>shr eax,0x1f</code></p>\n<p>关于这段代码，特别感谢我的两位同学指出我的错误 @ywy_c_asm &amp; @cnwangjihe</p>\n<blockquote>\n<p><strong>那一段是用来处理负数整除问题的</strong><br>\n<strong>他下方的 sar 是带符号位的右移</strong><br>\n<strong> - 15 右移一位结果是 - 8，但 c 里面整除二结果应该是 - 7，所以需要额外加一</strong><br>\n<strong>正数右移一位和整除二则是等价的 \\      <em>from @cnwangjihe</em></strong></p>\n<p><strong>带符号右移永远等价于除二向下取整，<em>然后再用符号位调整一下</em>  from @ywy_c_asm</strong></p>\n</blockquote>\n<p><img data-src=\"image-20220409170638377.png\" alt=\"image-20220409170638377\"></p>\n<p>这段代码结合调用 fun4 函数之前的代码一起分析就能知道 eax 等于 fun4 接收的参数 esi 与 ecx 的平均数  即    <strong>&amp;eax = &amp;esi+(&amp;ecx-&amp;esi)/2</strong></p>\n<p>最后将 eax 再与 edi 相比较，根据比较结果再次跳转，并且再次调用 fun4</p>\n<p>由此可知，这一关考查的是<strong>递归函数</strong>的汇编语言实现</p>\n<p>并且由汇编可以轻松分析 C 语言函数</p>\n<pre><code class=\"language-C\">int __fastcall func4(int val, int low, int high)\n&#123;\n  int v3; // eax\n\n  v3 = low + (high - low) / 2;\n  if ( v3 &gt; val )\n    return 2 * func4(val, low, v3 - 1);\n  if ( v3 &lt; val )\n    return 2 * func4(val, v3 + 1, high) + 1;\n  return 0;\n&#125;\n//from IDA pro\n</code></pre>\n<p>解决 fun4 的问题就可以得出当时 scanf 接收的第一个输入值的正确值，还有第二个输入值的值未确定，继续看跳出递归之后的代码段</p>\n<p><img data-src=\"image-20220409171624641.png\" alt=\"image-20220409171624641\"></p>\n<p>至此，两个参数的值都能确定</p>\n<p>解题脚本如下</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">fun4</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> uv<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> low<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> uv<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">int</span> sum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> uv<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>uv<span class=\"token operator\">&lt;=</span><span class=\"token number\">14</span><span class=\"token punctuation\">;</span>uv<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        sum<span class=\"token operator\">=</span><span class=\"token function\">fun4</span><span class=\"token punctuation\">(</span>uv<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">14</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>sum<span class=\"token operator\">==</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span>uv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">fun4</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> uv<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> low<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> high<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">int</span> v3<span class=\"token operator\">=</span>low<span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>high<span class=\"token operator\">-</span>low<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>v3<span class=\"token operator\">></span>uv<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span><span class=\"token function\">fun4</span><span class=\"token punctuation\">(</span>uv<span class=\"token punctuation\">,</span>low<span class=\"token punctuation\">,</span>v3<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>v3<span class=\"token operator\">&lt;</span>uv<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span><span class=\"token function\">fun4</span><span class=\"token punctuation\">(</span>uv<span class=\"token punctuation\">,</span>v3<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>high<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">// output 10</span></pre></td></tr></table></figure><h4 id=\"6第五关的破解与分析\"><a class=\"anchor\" href=\"#6第五关的破解与分析\">#</a> 6. 第五关的破解与分析</h4>\n<p>同前几关的方式，在 phase_5 处打断点，然后运行到 phase_5, 接着继续输入 &quot;123456&quot; 测试，单步步过到达 phase_5, 继续  disas 查看汇编代码</p>\n<p><img data-src=\"image-20220409190043150.png\" alt=\"image-20220409190043150\"></p>\n<p>前面的代码都很熟悉，0x40334f 处的数据正是第四关里的 &quot;% d % d&quot;, 根据提示重新输入测试值 &quot;1 2&quot;</p>\n<p><img data-src=\"image-20220409191812554.png\" alt=\"image-20220409191812554\"></p>\n<p>该段代码对参数做了一些运算 ，函数通过栈来传递参数，并且传参顺序与 C 语言中参数顺序刚好相反，所以这里 [rsp+0xc] 即为第一个参数，记为 val1，也就是我们输入的 1 ，[rsp+0x8] 即为第二个参数记为 val2，也就是我们输入的 2。</p>\n<p>接着，程序又定义了两个变量 (寄存器)，ecx=0,edx=0, 分别记作 v3,v4</p>\n<p>所以这段汇编代码翻译为 C 代码即为</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>val1 <span class=\"token operator\">&amp;=</span> <span class=\"token number\">0xf</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>v3 <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//ecx</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>v4 <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//edx</span></pre></td></tr></table></figure><p><img data-src=\"image-20220409192718574.png\" alt=\"image-20220409192718574\"></p>\n<p>这段代码其实已经很好理解了，考点就是数组的汇编语言实现</p>\n<p>查看 0x403200 处的数据</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>x/100xb 0x403200</pre></td></tr></table></figure><p><img data-src=\"image-20220409193548299.png\" alt=\"image-20220409193548299\"></p>\n<p>能够看出来是数组，既然是数组，就可以用另一种方法提取数组 (之前搞逆向的时候，用 IDA PRO 可以直接快捷键 shift+e 就能提取数组，但是 gdb 只能以一种很原始的方式)</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>p *array@length <span class=\"token comment\">#array 可以是数组名也可以是内存地址，length 指的是想要查看的位数</span></pre></td></tr></table></figure><p><img data-src=\"image-20220409194307752.png\" alt=\"image-20220409194307752\"></p>\n<p>后面的乱码及说明不是数组内容，取前面的即可。</p>\n<p>翻译成 C 代码即是</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>val1<span class=\"token operator\">!=</span><span class=\"token number\">0xf</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    v4<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    val1<span class=\"token operator\">=</span>array<span class=\"token punctuation\">[</span>val1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    v3<span class=\"token operator\">+=</span>val1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//array[]=&#123;0xa, 0x2, 0xe, 0x7, 0x8, 0xc, 0xf, 0xb, 0x0, 0x4, 0x1, 0xd, 0x3, 0x9, 0x6, 0x5&#125;</span></pre></td></tr></table></figure><p>循环结束之后到达</p>\n<p><img data-src=\"image-20220409194636150.png\" alt=\"image-20220409194636150\"></p>\n<p>这里比较了 val2 与 v3 的大小关系，并且要求 val2 与 v3 大小相等</p>\n<p>据此可以写出解题脚本</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">14</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">15</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        p<span class=\"token operator\">=</span>i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        p <span class=\"token operator\">&amp;=</span><span class=\"token number\">15u</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">int</span> v2<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">int</span> v1<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">!=</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token operator\">++</span>v2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            p<span class=\"token operator\">=</span>arr<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            v1<span class=\"token operator\">+=</span>p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>v2<span class=\"token operator\">==</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"searched i=%d v1=%d\"</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">,</span>v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">// 直接爆破 (～￣▽￣)～</span></pre></td></tr></table></figure><p>得出答案</p>\n<h4 id=\"7第六关的破解与分析\"><a class=\"anchor\" href=\"#7第六关的破解与分析\">#</a> 7. 第六关的破解与分析</h4>\n<p>个人感觉 objdump 的界面不是很友好，比较乱，更不如 gdb-peda 用起来方便，所以继续使用 gdb (其实使用 IDApro 会简单很多，但是为了检验一下自己的汇编基本功，就还是嗯看汇编代码吧)</p>\n<p>老方法，在 Phase_6 处<strong>下断点</strong>，然后<strong> run</strong> 到 Phase 后使用<strong> disas</strong> 命令查看汇编</p>\n<p><strong>个人经验</strong> ：寄存器在每个独立的代码段中充当的更多的是局部变量，汇编语言通过对寄存器的完美使用来实现不同的功能</p>\n<p>既然寄存器大多扮演局部变量，所以为了方便分析，给每个寄存器都设一个特定的变量名，如下</p>\n<p><em><strong>r12 == j     rbp == i  rbx== n   rax == p  rcx == m  rdx == v1 rdi ==v2</strong></em></p>\n<p>这里暂时不知道各个变量的类型，等到后面分析就会一一确定</p>\n<p><img data-src=\"image-20220411133452259.png\" alt=\"image-20220411133452259\"></p>\n<p>这段代码的作用是定义变量同时建立堆栈，然后给 rsi 赋值之后作为参数送入函数 read_six_numbers, 查看 read_six_numbers 函数的汇编代码</p>\n<p><img data-src=\"image-20220411134848160.png\" alt=\"image-20220411134848160\"></p>\n<blockquote>\n<p><em><strong>LEA 与 MOV 的区别</strong></em></p>\n<p>lea 是 “load effective address” 的缩写，简单的说，<strong>lea 指令可以用来将一个内存地址直接赋给目的操作数</strong>，例如：</p>\n<p><strong>lea eax,[ebx+8] 就是将 ebx+8 这个值直接赋给 eax，而不是把 ebx+8 处的内存地址里的数据赋给 eax</strong>。</p>\n<p>而 mov 指令则恰恰相反，例如：</p>\n<p>mov eax,[ebx+8]</p>\n<p>则是把内存地址为 ebx+8 处的数据赋给 eax。</p>\n</blockquote>\n<p>所以调用 read_six_numbers 函数之前</p>\n<p><img data-src=\"image-20220411135218612.png\" alt=\"image-20220411135218612\"></p>\n<p>这里的 lea rsi,[rsp+0x30] 的目的就是将 rsp+0x30 这段地址直接赋值给 rsi，而不是将 rsp+0x30 处的值传给 rsi。</p>\n<p>接着进入 read_six_numbers 后</p>\n<p><img data-src=\"image-20220411135612002.png\" alt=\"image-20220411135612002\"></p>\n<p>这里我原本以为的是获取六个输入变量的地址，然后将地址传入 scanf 函数直接读入，但是分析这一段是发现了问题，这里<strong>首先是通过 rax 寄存器向栈中压入了两个值，然后在调用 scanf 读值</strong>，根据前面几关中的经验，scanf 函数的参数首先是读入值的格式化字符串也就是前几关常见的类似 &quot;% d % d&quot; 这种，在 read_six_numbers 函数中 0x403343 地址处的值扮演了这个角色，查看该处的数据值</p>\n<p><img data-src=\"image-20220411141238206.png\" alt=\"image-20220411141238206\"></p>\n<p>果然是读入了六个整数，所以 scanf 函数一共接受了 7 个参数</p>\n<blockquote>\n<p>当参数个数小于等于 6 个时，使用寄存器<strong> rdi,rsi,rdx,rcx,r8,r9，从第 7 个参数开始通过栈传递，顺序为从右往左入栈</strong></p>\n</blockquote>\n<p>这样就可以解释的通为什么 read_six_numbers 会选择先将值先入栈，再调用 scanf</p>\n<p>读完之后继续分析 phase_6</p>\n<p><img data-src=\"image-20220411144854347.png\" alt=\"image-20220411144854347\"></p>\n<p>汇编语言写的循环结构都有很强的套路性，通常都用一个固定的寄存器表示一个循环变量，然后也包含循环结束标志，还有每次循环循环变量如何发生改变 (也就是 for 循环括号里的内容) 据此，我们可以很容易的确定循环部分</p>\n<p>如上图，我们可以发现外围循环是以 ebp 为循环变量的循环，内嵌了以 ebx 为循环变量的循环</p>\n<p><img data-src=\"image-20220411151332183.png\" alt=\"image-20220411151332183\"></p>\n<p>分析循环结构的时候如果遇到跳出循环的语句，可以做标记然后不跳出，继续执行后面的代码，并且很有可能后面的代码就是循环执行的部分，就像上图中的一样</p>\n<p>分析后很简单就能写出 C 代码</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">//rbp</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rbx</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> p<span class=\"token punctuation\">;</span> <span class=\"token comment\">//rax</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> array<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//[rsp+0x30] ~</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">></span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">bomb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">=</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>n<span class=\"token operator\">&lt;=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span>n<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>arrat<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token function\">bomb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">/* tips: dword ptr [] 是整型数值</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\tqword ptr [] 是一个指针</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>*/</pre></td></tr></table></figure><p>再往下看</p>\n<p><img data-src=\"image-20220411154357498.png\" alt=\"image-20220411154357498\"></p>\n<p>这段也是很明显的循环结构，直接翻译成 C 代码如下</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> p<span class=\"token punctuation\">;</span> <span class=\"token comment\">//rax</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>p<span class=\"token operator\">&lt;=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span>p<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    array<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token number\">7</span><span class=\"token operator\">-</span>array<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>后面也是一样的分析方法</p>\n<p><img data-src=\"image-20220411160543274.png\" alt=\"image-20220411160543274\"></p>\n<p>这里要注意的是之前的 array [] 数组地址是 [rsp+0x30]</p>\n<p>但是这里出现了一个新的地址，[rsp]，这是 phase_6 自己的数组，起名为 newarr [6]</p>\n<p>还有一个点需要注意</p>\n<p><img data-src=\"image-20220411160819721.png\" alt><img data-src=\"image-20220411160835458.png\" alt=\"image-20220411160835458\"></p>\n<p>这两者<strong>相同点是 DWORD PTR, 说明两者都是指针变量</strong>，不同点是前者 [rsp+rdx * 8] [ ] 里面有 rdx 寄存器，也就是说<strong> rdx (寄存器) 做索引</strong>，所以这里的 [rsp+rdx*8] 其实就是数组的地址，而 rdx 也就是数组的索引</p>\n<p>后者没有索引，而且其实寄存器是 rcx 而不是栈顶指针 rsp</p>\n<p>通常用这种形式表示链表    <strong>链表的 next 指针刚好占 8 个字节</strong> (实验环境为 64 位).</p>\n<blockquote>\n<p>一个指针在 32 位的计算机上，占 4 个字节；<br>\n一个指针在 64 位的计算机上，占 8 个字节。</p>\n</blockquote>\n<p>所以这里的 [rcx+0x8] 就相当于 rcx=rcx-&gt;next</p>\n<p>说到这里，后文中出现的</p>\n<p><img data-src=\"image-20220411161738385.png\" alt=\"image-20220411161738385\"><img data-src=\"image-20220411161752473.png\" alt=\"image-20220411161752473\"></p>\n<p>这两者都是<strong> DWORD PTR , 说明两者都是整型数据</strong>，所以这里的 **[rbx] 就是 node-&gt;value**</p>\n<p>而 **[rbx+0x8] 就是 node-&gt;next-&gt;value**</p>\n<p>这样的话就可以根据汇编写出来 C 代码</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">//rsi</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> p<span class=\"token punctuation\">;</span> <span class=\"token comment\">//rax</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>listnode<span class=\"token operator\">*</span> v1<span class=\"token punctuation\">;</span><span class=\"token comment\">//rdx</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>v3<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>v3<span class=\"token operator\">&lt;=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span>v3<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    p<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    v1 <span class=\"token operator\">=</span> node<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 指向 0x4052d0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>v3<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        v1<span class=\"token operator\">=</span>v1<span class=\"token operator\">-></span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token operator\">++</span>p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    newarr<span class=\"token punctuation\">[</span>v3<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>v1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image-20220411163341554.png\" alt=\"image-20220411163341554\"></p>\n<p><img data-src=\"C:%5CUsers%5CIkhan%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220411164911168.png\" alt=\"image-20220411164911168\"></p>\n<p>认准循环变量，然后找跳转条件，就能很容易的分析出来这段代码</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>listnode<span class=\"token operator\">*</span> n <span class=\"token operator\">=</span> newarr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// rbx</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>listnode<span class=\"token operator\">*</span> m <span class=\"token operator\">=</span> newarr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//rcx</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>listnode<span class=\"token operator\">*</span> v1 <span class=\"token punctuation\">;</span> <span class=\"token comment\">// rdx </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> p<span class=\"token punctuation\">;</span> <span class=\"token comment\">//rax</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">//rbp</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>p<span class=\"token operator\">&lt;=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span>p<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    v1<span class=\"token operator\">=</span>newarr<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    m<span class=\"token operator\">-></span>next <span class=\"token operator\">=</span> v1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    m<span class=\"token operator\">=</span>v1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>m<span class=\"token operator\">-></span>next <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span><span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-></span>value <span class=\"token operator\">&lt;</span>n<span class=\"token operator\">-></span>next<span class=\"token operator\">-></span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token function\">bomb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    n<span class=\"token operator\">=</span>n<span class=\"token operator\">-></span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>函数结构分析出来后，就知道这一关考查的是链表的汇编语言实现，我们接着查看链表的结构</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>x/100xb 0x4052d0</pre></td></tr></table></figure><p>结果如下</p>\n<p><img data-src=\"image-20220411171156760.png\" alt=\"image-20220411171156760\"></p>\n<p>果然是链表，&lt;nodex&gt; 是 &quot;value&quot; &lt; nodex+8 &gt; 是 &quot;next&quot;.</p>\n<p>自己动手写链表虽然简单但是总归有点麻烦，直接用 IDA PRO</p>\n<p>选中链表节点之后 使用快捷键 <strong>shift+e</strong> 提取</p>\n<p><img data-src=\"image-20220411171627129.png\" alt=\"image-20220411171627129\"></p>\n<p>将分析的得到的 C 语言代码进一步分析就能知道，用户输入的数组 arr [6] 经过计算之后使链表元素按 value 值的降序排列</p>\n<p>上一步又得到了不同节点的 value 值，所以人工排序就能得到处理之后的 arr [6]，又因为之前</p>\n<p><img data-src=\"C:%5CUsers%5CIkhan%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220411211412617.png\" alt=\"image-20220411211412617\"></p>\n<p>所以就可以逆向得到用户要输入的正确的数组</p>\n<p>所有的答案就在这里了。</p>\n<blockquote>\n<p>I am not part of the problem. I am a Republican.<br>\n0 1 1 2 3 5<br>\n2 -32 (答案不唯一)<br>\n10 5<br>\n5 115<br>\n6 2 3 4 1 5</p>\n</blockquote>\n<h4 id=\"7隐藏关卡的分析与破解\"><a class=\"anchor\" href=\"#7隐藏关卡的分析与破解\">#</a> 7. 隐藏关卡的分析与破解</h4>\n<p>但是，还有一个问题</p>\n<p><img data-src=\"image-20220411211625334.png\" alt=\"image-20220411211625334\"></p>\n<p>之前查看函数时还有一个<strong> secret_phase</strong>, 但是在整个拆弹过程中也没有发现这个隐藏的炸弹，所以怀疑是有函数调用该隐藏关卡</p>\n<p>继续查看该函数列表，发现与调用隐藏关卡相关的好像只有 <strong>phase_defused</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>disas phase_defused //查看函数汇编代码</pre></td></tr></table></figure><p><img data-src=\"image-20220411212000847.png\" alt=\"image-20220411212000847\"></p>\n<p>函数刚开始做了判断，若接收 6 个字符串则向下跳转，否则函数返回。</p>\n<p>据此可知只有完成所有的六个关卡才能够开启隐藏关</p>\n<p>下面是对 sscanf 函数的调用</p>\n<blockquote>\n<p>int sscanf(const char *str, const char *format, ...)</p>\n<ul>\n<li><strong>str</strong> -- 这是 C 字符串，是函数检索数据的源。</li>\n<li><strong>format</strong> -- 这是 C 字符串，包含了以下各项中的一个或多个：<em>空格字符、非空格字符</em> 和 <em>format 说明符</em>。</li>\n</ul>\n</blockquote>\n<p>一共两个格式化参数。参数 str 为要读取数据的字符串，参数 format 是用户指定的格式</p>\n<p>查看 0x403399 和 0x405870 处的内存</p>\n<p><img data-src=\"image-20220411212810683.png\" alt=\"image-20220411212810683\"></p>\n<p>由此可知需要输入的是 &quot;% d % d % s&quot; 类型的变量，并且是从 input_srings 处读取的</p>\n<p><img data-src=\"image-20220411212928467.png\" alt=\"image-20220411212928467\"></p>\n<p>之后，若成功读入三个参数，则直接跳转</p>\n<p><img data-src=\"image-20220411213017987.png\" alt=\"image-20220411213017987\"></p>\n<p>下面这里就和第一关基本一样，直接查看 0x4033a2 处的值</p>\n<p><img data-src=\"image-20220411213055419.png\" alt=\"image-20220411213055419\"></p>\n<p>就说明第三个参数是这个字符串，</p>\n<p><img data-src=\"image-20220411213218943.png\" alt=\"image-20220411213218943\"></p>\n<p><img data-src=\"image-20220411213225783.png\" alt=\"image-20220411213225783\"></p>\n<p>继续往下看并且查看相应内存的数据之后就知道能够开启隐藏关卡了</p>\n<p>但是还有一个问题是在哪一关输入这个神秘的字符串才能开启隐藏关呢</p>\n<p>上面提到了 sscanf 函数的第一个参数是要读取的字符串的，但是当时查看该参数内存地址时并没有发现有用信息，推测是要在程序启动之后才能知道该内存具体的数值，所以下一步动态调试 phase_defused 函数来查看 sscanf 函数第一个参数的值以及推断在哪一关进入隐藏关卡。按照如下步骤操作，先在 Phase_4 处下断点，然后运行直到断点处，之后再在 phase_defused 函数处下断点，continue 进入 phase_defused 函数，如图</p>\n<p><img data-src=\"image-20220411215256960.png\" alt=\"image-20220411215256960\"><img data-src=\"image-20220411215315483.png\" alt=\"image-20220411215315483\"></p>\n<p>进入 Phase_defused 函数后发现有个关键跳转，就是验证输入字符串的数量是否等于 6，这里我们直接使用 set 命令 &quot;作弊&quot;。</p>\n<p>刚开始是因为看到有 JE 跳转指令，所以我尝试更改 ZF 的值来更改程序运行方向，但是失败了，接着我看到了 cmp 后面是 num_input_strings 的地址，所以我查看了一下，发现数值为 4，也就是说一共输入了 4 次字符串，我尝试直接更改内存里的数据变成 6，但是失败了，所以我直接 set 后面跟变量名，成功了，这里就积累了经验，直接对内存地址进行修改可能会失败，更好的方法就是直接修改变量的值。</p>\n<p><img data-src=\"image-20220411220747138.png\" alt=\"image-20220411220747138\"></p>\n<p><img data-src=\"image-20220411220801465.png\" alt=\"image-20220411220801465\"></p>\n<p><img data-src=\"image-20220411220834541.png\" alt=\"image-20220411220834541\"></p>\n<p>修改完之后单步步过，直到之前的 sscanf 的第一个参数的内存地址，查看之后发现竟是第四关我们输入的密码，所以，就能推断出要在第四关输入密钥才能带我们进入隐藏关卡</p>\n<p><img data-src=\"image-20220411220915578.png\" alt=\"image-20220411220915578\"></p>\n<p>既然已经直到如何进入隐藏关卡，之后就可以破解隐藏关卡了</p>\n<p><img data-src=\"image-20220411222159666.png\" alt=\"image-20220411222159666\"></p>\n<p>直接查看汇编代码，核心函数为 fun7，并且查看 fun7 函数信息</p>\n<p><img data-src=\"image-20220411225455838.png\" alt=\"image-20220411225455838\"></p>\n<p>知道函数接受一个树节点 (rdi)，和一个整数 (rsi)</p>\n<blockquote>\n<p>C 库函数 <strong>int atoi(const char *str)</strong> 把参数 <strong>str</strong> 所指向的字符串转换为一个整数（类型为 int 型）。</p>\n</blockquote>\n<p>这个整数自然就是玩家输入的字符串转变而来，rdi 的初值就可以是树的根节点</p>\n<p>尝试查看二叉树的结构</p>\n<p><img data-src=\"image-20220411225706393.png\" alt=\"image-20220411225706393\"></p>\n<p>很大的一棵树，但是不是很难分析</p>\n<p>接着进入 fun7，发现很像之前一关的递归调用，有了上次的经验，我们就关注于每个条件分支</p>\n<pre><code class=\"language-assembly\">test eax,eax //这种汇编代码段的意义在于判断eax值是否为0或者是否为空\nje [place]\n</code></pre>\n<p>于是就可以得出第一个分支</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>node<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>接着往下看</p>\n<p><img data-src=\"image-20220411230043389.png\" alt=\"image-20220411230043389\"></p>\n<p>这里首先是将根节点的 value 传给 eax，然后将 eax 与 fun7 的第二个参数比较</p>\n<p>所以就可以根据下面的跳转条件得到其他分支</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">fun7</span><span class=\"token punctuation\">(</span>treenode<span class=\"token operator\">*</span> node<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> val<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>node<span class=\"token punctuation\">)</span>\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">-></span>value<span class=\"token operator\">></span>val<span class=\"token punctuation\">)</span>    <span class=\"token keyword\">return</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span><span class=\"token function\">fun7</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">-></span>left<span class=\"token punctuation\">,</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">-></span>value<span class=\"token operator\">==</span>val<span class=\"token punctuation\">)</span>     <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span><span class=\"token function\">fun7</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">-></span>right<span class=\"token punctuation\">,</span>val<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>分析完 fun7 之后我们接着回到 secret_phase</p>\n<p>就能继续编写出 secret_phase 的 C 语言代码</p>\n<pre><code class=\"language-C\">void __cdecl secret_phase()\n&#123;\n  char *line; // rax\n  int v1; // ebx\n\n  line = read_line();\n  v1 = atoi(line);\n  if ( (unsigned int)(v1 - 1) &gt; 0x3E8 )\n    explode_bomb();\n  if ( fun7(&amp;n1, v1) != 4 )\n    explode_bomb();\n  puts(&quot;Wow! You've defused the secret stage!&quot;);\n  phase_defused();\n&#125;\n// FROM IDA PRO\n</code></pre>\n<p>至此，我们的分析工作全部完成</p>\n<p><img data-src=\"image-20220411232244001.png\" alt=\"image-20220411232244001\"></p>\n<p>最后根据第四关积累的经验，成功解出隐藏关卡密码 7</p>\n<h4 id=\"end\"><a class=\"anchor\" href=\"#end\">#</a> END</h4>\n<p><img data-src=\"image-20220411232342795.png\" alt=\"image-20220411232342795\"></p>\n<h3 id=\"三收获与心得\"><a class=\"anchor\" href=\"#三收获与心得\">#</a> 三，收获与心得</h3>\n<p>向 CMU 设计该实验的所有老师同学致敬，精密而又有趣的实验总是让人沉浸其中，</p>\n<p>在一次次的解题中不断收获成就感，不断获得新知识，这种强烈的正反馈给了学生兴趣与好奇</p>\n<p>salute ！</p>\n",
            "tags": [
                "CSAPP_LAB"
            ]
        }
    ]
}